{"version":3,"file":"worker-CnwqaRGh.js","sources":["../node_modules/@ffmpeg/ffmpeg/dist/esm/const.js","../node_modules/@ffmpeg/ffmpeg/dist/esm/errors.js","../node_modules/@ffmpeg/ffmpeg/dist/esm/worker.js"],"sourcesContent":["export const MIME_TYPE_JAVASCRIPT = \"text/javascript\";\nexport const MIME_TYPE_WASM = \"application/wasm\";\nexport const CORE_VERSION = \"0.12.9\";\nexport const CORE_URL = `https://unpkg.com/@ffmpeg/core@${CORE_VERSION}/dist/umd/ffmpeg-core.js`;\nexport var FFMessageType;\n(function (FFMessageType) {\n    FFMessageType[\"LOAD\"] = \"LOAD\";\n    FFMessageType[\"EXEC\"] = \"EXEC\";\n    FFMessageType[\"FFPROBE\"] = \"FFPROBE\";\n    FFMessageType[\"WRITE_FILE\"] = \"WRITE_FILE\";\n    FFMessageType[\"READ_FILE\"] = \"READ_FILE\";\n    FFMessageType[\"DELETE_FILE\"] = \"DELETE_FILE\";\n    FFMessageType[\"RENAME\"] = \"RENAME\";\n    FFMessageType[\"CREATE_DIR\"] = \"CREATE_DIR\";\n    FFMessageType[\"LIST_DIR\"] = \"LIST_DIR\";\n    FFMessageType[\"DELETE_DIR\"] = \"DELETE_DIR\";\n    FFMessageType[\"ERROR\"] = \"ERROR\";\n    FFMessageType[\"DOWNLOAD\"] = \"DOWNLOAD\";\n    FFMessageType[\"PROGRESS\"] = \"PROGRESS\";\n    FFMessageType[\"LOG\"] = \"LOG\";\n    FFMessageType[\"MOUNT\"] = \"MOUNT\";\n    FFMessageType[\"UNMOUNT\"] = \"UNMOUNT\";\n})(FFMessageType || (FFMessageType = {}));\n","export const ERROR_UNKNOWN_MESSAGE_TYPE = new Error(\"unknown message type\");\nexport const ERROR_NOT_LOADED = new Error(\"ffmpeg is not loaded, call `await ffmpeg.load()` first\");\nexport const ERROR_TERMINATED = new Error(\"called FFmpeg.terminate()\");\nexport const ERROR_IMPORT_FAILURE = new Error(\"failed to import ffmpeg-core.js\");\n","/// <reference no-default-lib=\"true\" />\n/// <reference lib=\"esnext\" />\n/// <reference lib=\"webworker\" />\nimport { CORE_URL, FFMessageType } from \"./const.js\";\nimport { ERROR_UNKNOWN_MESSAGE_TYPE, ERROR_NOT_LOADED, ERROR_IMPORT_FAILURE, } from \"./errors.js\";\nlet ffmpeg;\nconst load = async ({ coreURL: _coreURL, wasmURL: _wasmURL, workerURL: _workerURL, }) => {\n    const first = !ffmpeg;\n    try {\n        if (!_coreURL)\n            _coreURL = CORE_URL;\n        // when web worker type is `classic`.\n        importScripts(_coreURL);\n    }\n    catch {\n        if (!_coreURL || _coreURL === CORE_URL)\n            _coreURL = CORE_URL.replace('/umd/', '/esm/');\n        // when web worker type is `module`.\n        self.createFFmpegCore = (await import(\n        /* @vite-ignore */ _coreURL)).default;\n        if (!self.createFFmpegCore) {\n            throw ERROR_IMPORT_FAILURE;\n        }\n    }\n    const coreURL = _coreURL;\n    const wasmURL = _wasmURL ? _wasmURL : _coreURL.replace(/.js$/g, \".wasm\");\n    const workerURL = _workerURL\n        ? _workerURL\n        : _coreURL.replace(/.js$/g, \".worker.js\");\n    ffmpeg = await self.createFFmpegCore({\n        // Fix `Overload resolution failed.` when using multi-threaded ffmpeg-core.\n        // Encoded wasmURL and workerURL in the URL as a hack to fix locateFile issue.\n        mainScriptUrlOrBlob: `${coreURL}#${btoa(JSON.stringify({ wasmURL, workerURL }))}`,\n    });\n    ffmpeg.setLogger((data) => self.postMessage({ type: FFMessageType.LOG, data }));\n    ffmpeg.setProgress((data) => self.postMessage({\n        type: FFMessageType.PROGRESS,\n        data,\n    }));\n    return first;\n};\nconst exec = ({ args, timeout = -1 }) => {\n    ffmpeg.setTimeout(timeout);\n    ffmpeg.exec(...args);\n    const ret = ffmpeg.ret;\n    ffmpeg.reset();\n    return ret;\n};\nconst ffprobe = ({ args, timeout = -1 }) => {\n    ffmpeg.setTimeout(timeout);\n    ffmpeg.ffprobe(...args);\n    const ret = ffmpeg.ret;\n    ffmpeg.reset();\n    return ret;\n};\nconst writeFile = ({ path, data }) => {\n    ffmpeg.FS.writeFile(path, data);\n    return true;\n};\nconst readFile = ({ path, encoding }) => ffmpeg.FS.readFile(path, { encoding });\n// TODO: check if deletion works.\nconst deleteFile = ({ path }) => {\n    ffmpeg.FS.unlink(path);\n    return true;\n};\nconst rename = ({ oldPath, newPath }) => {\n    ffmpeg.FS.rename(oldPath, newPath);\n    return true;\n};\n// TODO: check if creation works.\nconst createDir = ({ path }) => {\n    ffmpeg.FS.mkdir(path);\n    return true;\n};\nconst listDir = ({ path }) => {\n    const names = ffmpeg.FS.readdir(path);\n    const nodes = [];\n    for (const name of names) {\n        const stat = ffmpeg.FS.stat(`${path}/${name}`);\n        const isDir = ffmpeg.FS.isDir(stat.mode);\n        nodes.push({ name, isDir });\n    }\n    return nodes;\n};\n// TODO: check if deletion works.\nconst deleteDir = ({ path }) => {\n    ffmpeg.FS.rmdir(path);\n    return true;\n};\nconst mount = ({ fsType, options, mountPoint }) => {\n    const str = fsType;\n    const fs = ffmpeg.FS.filesystems[str];\n    if (!fs)\n        return false;\n    ffmpeg.FS.mount(fs, options, mountPoint);\n    return true;\n};\nconst unmount = ({ mountPoint }) => {\n    ffmpeg.FS.unmount(mountPoint);\n    return true;\n};\nself.onmessage = async ({ data: { id, type, data: _data }, }) => {\n    const trans = [];\n    let data;\n    try {\n        if (type !== FFMessageType.LOAD && !ffmpeg)\n            throw ERROR_NOT_LOADED; // eslint-disable-line\n        switch (type) {\n            case FFMessageType.LOAD:\n                data = await load(_data);\n                break;\n            case FFMessageType.EXEC:\n                data = exec(_data);\n                break;\n            case FFMessageType.FFPROBE:\n                data = ffprobe(_data);\n                break;\n            case FFMessageType.WRITE_FILE:\n                data = writeFile(_data);\n                break;\n            case FFMessageType.READ_FILE:\n                data = readFile(_data);\n                break;\n            case FFMessageType.DELETE_FILE:\n                data = deleteFile(_data);\n                break;\n            case FFMessageType.RENAME:\n                data = rename(_data);\n                break;\n            case FFMessageType.CREATE_DIR:\n                data = createDir(_data);\n                break;\n            case FFMessageType.LIST_DIR:\n                data = listDir(_data);\n                break;\n            case FFMessageType.DELETE_DIR:\n                data = deleteDir(_data);\n                break;\n            case FFMessageType.MOUNT:\n                data = mount(_data);\n                break;\n            case FFMessageType.UNMOUNT:\n                data = unmount(_data);\n                break;\n            default:\n                throw ERROR_UNKNOWN_MESSAGE_TYPE;\n        }\n    }\n    catch (e) {\n        self.postMessage({\n            id,\n            type: FFMessageType.ERROR,\n            data: e.toString(),\n        });\n        return;\n    }\n    if (data instanceof Uint8Array) {\n        trans.push(data.buffer);\n    }\n    self.postMessage({ id, type, data }, trans);\n};\n"],"names":[],"mappings":"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","x_google_ignoreList":[0,1,2]}