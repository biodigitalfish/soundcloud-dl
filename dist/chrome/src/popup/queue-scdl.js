import{o as s,l as u}from"../../js/compatibilityStubs-scdl-DBF9jRnU.js";import"../../js/logger-scdl-C1suKzoJ.js";const o=console,t=document.getElementById("queue-container");function a(e){if(!t)return;if(e.length===0){t.innerHTML="<p>The download queue is currently empty.</p>";return}let n="<ul>";e.forEach(r=>{n+=`<li>
            <strong>ID:</strong> ${r.id}<br>
            <strong>Type:</strong> ${r.type}<br>
            <strong>URL:</strong> ${r.url?.substring(0,50)}...<br>
            <strong>Status:</strong> ${r.status}<br>
            ${r.progress!==void 0?`<strong>Progress:</strong> ${r.progress.toFixed(1)}%<br>`:""}
            ${r.error?`<strong>Error:</strong> ${r.error}<br>`:""}
            <strong>Added:</strong> ${new Date(r.addedAt).toLocaleTimeString()}
        </li>`}),n+="</ul>",t.innerHTML=n}async function d(){o.log("[Popup] Requesting queue data from background...");try{const e=await u({type:"GET_QUEUE_DATA"});o.log("[Popup] Received raw data from sendMessageToBackend:",JSON.stringify(e,null,2)),Array.isArray(e)?(o.log("[Popup] Received queue data (is array):",e),a(e)):(o.error("[Popup] Received invalid queue data (not array) from background:",e),t&&(t.innerHTML="<p>Error: Could not load queue data (format error).</p>"))}catch(e){o.error("[Popup] Error requesting queue data:",e),t&&(t.innerHTML="<p>Error: Failed to connect to background script.</p>")}}s(async(e,n)=>(e&&e.type==="QUEUE_UPDATED_BROADCAST"&&Array.isArray(e.queuePayload)?(o.log("[Popup] Received QUEUE_UPDATED_BROADCAST from background:",e.queuePayload),a(e.queuePayload)):e&&Array.isArray(e)&&(o.log("[Popup] Received a direct array message (assumed queue update):",e),a(e)),!1)),document.addEventListener("DOMContentLoaded",()=>{o.log("Queue popup DOM loaded. Fetching initial queue."),d();const e=document.getElementById("open-restore-history-page-button");e?e.addEventListener("click",()=>{o.log("[Popup] Opening Restore History page...");try{(typeof browser<"u"?browser.tabs:chrome.tabs).create({url:chrome.runtime.getURL("src/pages/restore_history.html")})}catch(n){if(o.error("[Popup] Error opening restore history page:",n),t){const r=document.createElement("p");r.textContent="Error: Could not open the restore history page. See console.",r.style.color="red",t.appendChild(r)}}}):o.warn("[Popup] 'Open Restore Page' button not found.")}),o.log("Queue popup script loaded.");
