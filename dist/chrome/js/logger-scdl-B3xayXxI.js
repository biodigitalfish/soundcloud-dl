var i=(r=>(r[r.Debug=0]="Debug",r[r.Information=1]="Information",r[r.Warning=2]="Warning",r[r.Error=3]="Error",r[r.None=4]="None",r))(i||{});class g{constructor(o,e){this.source=o,this.minLogLevel=e}log(o,e,...a){if(o<this.minLogLevel)return;const s=`[${new Date().toJSON()}]`,t=`[SOUNDCLOUD-DL:${this.source}]`;switch(o){case 3:console.error(s,t,e,...a);break;case 2:console.warn(s,t,e,...a);break;case 1:console.info(s,t,e,...a);break;case 0:console.debug(s,t,e,...a);break}}logDebug(o,...e){try{if(window.localStorage.getItem("SOUNDCLOUD-DL-debugLoggingEnabled")!=="true")return}catch(a){console.warn("Logger: Failed to access localStorage for debug setting, disabling debug logs.",a);return}this.log(0,o,...e)}logInfo(o,...e){this.log(1,o,...e)}logWarn(o,...e){this.log(2,o,...e)}logError(o,...e){this.log(3,o,...e)}static create(o,e=2){return new g(o,e)}}export{g as L,i as a};
