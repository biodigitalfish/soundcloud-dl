import{L as q}from"./logger-scdl-B3xayXxI.js";import{o as J,l as V,g as Z,m as ee}from"./compatibilityStubs-scdl-D9J5LMR3.js";import{c as oe}from"./config-scdl-ChAA9DMB.js";class te{observer;events=[];unqiueNodeId=0;logger;constructor(){this.observer=new MutationObserver(o=>o.forEach(n=>this.handleMutation(n))),this.logger=q.create("Observer")}start(o){this.observer.observe(o,{subtree:!0,attributes:!0,childList:!0}),this.logger.logDebug("Started")}stop(){this.observer.disconnect(),this.logger.logDebug("Stopped")}addEvent(o){if(!o.selector){this.logger.logWarn("Selector was not specified");return}if(!o.callback){this.logger.logWarn("Callback was not specified");return}this.events.push(o),this.logger.logDebug("Event added",o)}removeEvent(o){this.events=this.events.filter(n=>n.name!==o)}handleMutation(o){const n=o.target,l=o.addedNodes??[];for(const u of this.events)l.length>0?this.handleNodes(l,u):o.type==="attributes"&&this.handleNodes([n],u,!1)}handleNodes(o,n,l=!0){if(o)for(let u=0;u<o.length;u++){const f=o[u];if(this.matchesSelectors(f,n.selector)){if(f._id!==void 0)return;f._id=++this.unqiueNodeId,n.callback(f)}l&&f.childNodes?.length>0&&this.handleNodes(f.childNodes,n)}}matchesSelectors(o,n){return o&&o instanceof HTMLElement&&o.matches(n)}}const ne=`
  #scdl-range-modal {
    display: none;
    position: fixed;
    z-index: 10000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.6);
  }
  #scdl-range-modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 350px;
    border-radius: 5px;
    color: #333; /* Ensure text is visible */
  }
  #scdl-range-modal label {
    display: block;
    margin-bottom: 5px;
  }
  #scdl-range-modal input[type="number"] {
    width: 60px;
    padding: 5px;
    margin-bottom: 15px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 3px;
  }
  #scdl-range-modal-actions button {
    padding: 8px 15px;
    margin-left: 10px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
  }
  #scdl-range-modal-download {
    background-color: #ff5419;
    color: white;
  }
  #scdl-range-modal-cancel {
    background-color: #ccc;
  }
  #scdl-range-modal-error {
    color: red;
    font-size: 0.9em;
    margin-top: 10px;
    display: none; /* Hidden by default */
  }
  .sc-button-download {
    transition: background-color 0.5s ease-out;
  }
`;let v=null;function le(){if(document.getElementById("scdl-range-modal"))return;const e=document.createElement("style");e.textContent=ne,document.head.appendChild(e),v=document.createElement("div"),v.id="scdl-range-modal",v.innerHTML=`
    <div id="scdl-range-modal-content">
      <h4>Download Playlist Range</h4>
      <label for="scdl-range-from">From track:</label>
      <input type="number" id="scdl-range-from" name="from" min="1" value="1">
      <label for="scdl-range-to">To track:</label>
      <input type="number" id="scdl-range-to" name="to" min="1" value=""><br>
      <small>(Leave "To" blank to download until the end)</small>
      <div id="scdl-range-modal-error"></div>
      <div id="scdl-range-modal-actions" style="text-align: right; margin-top: 15px;">
        <button id="scdl-range-modal-cancel">Cancel</button>
        <button id="scdl-range-modal-download">Download Selection</button>
      </div>
    </div>
  `,document.body.appendChild(v),document.getElementById("scdl-range-modal-cancel").addEventListener("click",x),v.addEventListener("click",o=>{o.target===v&&x()})}function ae(e,o){v||le();const n=document.getElementById("scdl-range-from"),l=document.getElementById("scdl-range-to"),u=document.getElementById("scdl-range-modal-error");n.value="1",l.value="",u.textContent="",u.style.display="none";const f=document.getElementById("scdl-range-modal-download"),P=f.cloneNode(!0);f.parentNode.replaceChild(P,f),P.addEventListener("click",()=>{const d=parseInt(n.value,10),h=l.value,p=h?parseInt(h,10):null;if(u.textContent="",u.style.display="none",isNaN(d)||d<1){u.textContent='Invalid "From" number.',u.style.display="block";return}if(p!==null&&(isNaN(p)||p<d)){u.textContent='Invalid "To" number. Must be greater than or equal to "From".',u.style.display="block";return}o(d,p),x(),m(e,"Preparing..."),e.style.cursor="default",e.onclick=null}),v.style.display="block"}function x(){v&&(v.style.display="none")}let L=null;const t=q.create("ContentScript"),re=V,B=(e,o)=>{let n={};try{n=JSON.parse(JSON.stringify(e))}catch{n={errorParsingMessage:!0,originalType:e?.type}}if(t.logDebug(`[ContentScript sendMessageToBackend CALLED [Context: ${o||"Unknown"}] Message:]`,n),e&&typeof e=="object"){if(["DOWNLOAD","DOWNLOAD_SET","DOWNLOAD_SET_RANGE","PAUSE_DOWNLOAD","RESUME_DOWNLOAD"].includes(e.type)&&(!e.downloadId||e.downloadId===void 0||e.downloadId==="undefined")){const l=new Error(`CRITICAL: Prevented sending message with type ${e.type} and missing downloadId!`);return t.logError("[ContentScript loggedSendMessageToBackend]",l.message,{message:n,callContext:o}),Promise.reject(l)}e.timestamp||(e.timestamp=Date.now())}return re(e)},r={},m=(e,o,n)=>{e.innerText=o,e.title=n??o},k=e=>{e.style.backgroundColor="",e.style.background="",e.style.color=""},se=(e,o)=>{const n=crypto.randomUUID().substring(0,8),l=Object.keys(r);let u="<payload_serialization_error>";try{u=JSON.stringify(e)}catch{}let f="<sender_serialization_error>";try{f=JSON.stringify(o)}catch{}t.logDebug(`[HANDLE_MSG_FROM_BG_ENTRY_POINT CALL_ID: ${n}] Invoked. Payload: ${u}. Sender: ${f}. Current downloadButton keys: ${l.join(",")||"none"}`);const P=["downloadId","progress","error","status","browserDownloadId","originalDownloadId","completionWithoutId","completed","success","timestamp","scdl_test_message"],d=Object.keys(e||{}),h=d.some(S=>P.includes(S));if(!h&&d.length>0)return t.logWarn("[HANDLE_MSG_FROM_BG] Discarding irrelevant message by key filter. Payload:",JSON.parse(JSON.stringify(e))),Promise.resolve({handled:!1,reason:"Irrelevant message"});h&&t.logDebug("[HANDLE_MSG_FROM_BG] Relevant message PASSED initial filter. Payload:",JSON.parse(JSON.stringify(e)));const{downloadId:p,progress:s,error:b,status:y,completionWithoutId:g,completed:i,timestamp:F,browserDownloadId:G,originalDownloadId:w}=e;let a;if(w?(a=w,t.logDebug(`[CS_FID_LOGIC CALL_ID: ${n}] finalDownloadId set from message.originalDownloadId: ${a}`)):p?(a=p,t.logDebug(`[CS_FID_LOGIC CALL_ID: ${n}] finalDownloadId set from message.downloadId: ${a}`)):(t.logWarn(`[CS_FID_LOGIC CALL_ID: ${n}] Message has neither originalDownloadId nor downloadId at the top level of payload.`),e&&e.error&&e.originalMessage&&typeof e.originalMessage.downloadId=="string"&&(a=e.originalMessage.downloadId,t.logInfo(`[CS_FID_LOGIC CALL_ID: ${n}] finalDownloadId recovered from message.originalMessage.downloadId due to error payload from bridge: ${a}`))),!a&&G){const S=Object.keys(r).filter(I=>r[I].browserDownloadId===G);if(S.length===1){if(a=S[0],t.logDebug(`[CS_FID_LOGIC] finalDownloadId set from browserDownloadId match: ${a}`),s===101||i===!0){const I=r[a];return k(I.elem),I.elem.style.backgroundColor="#19a352",m(I.elem,"Downloaded!"),I.elem.title="Downloaded successfully (matched by browser downloadId)",I.elem.onclick=null,I.state="Downloaded",I.resetTimer=window.setTimeout(()=>$(a),1e4),t.logDebug(`[CS_FID_LOGIC] Updated button ${a} to Downloaded state from browserDownloadId match`),Promise.resolve({handled:!0,id:a})}}else S.length>1&&t.logWarn(`[CS_FID_LOGIC] Found multiple (${S.length}) buttons with browserDownloadId=${G}. Cannot reliably map message.`)}if(!a||a==="undefined_completion"||g){t.logWarn(`[CS_GENERIC_MATCH_ENTRY] Entering generic/undefined ID matching. finalDownloadId: ${a}, is_undefined_completion: ${a==="undefined_completion"}, completionWithoutId flag: ${g}. Message payload:`,JSON.parse(JSON.stringify(e)));const S=["Downloading","Preparing","Finishing","Pausing","Resuming"],I=Object.keys(r).filter(_=>S.includes(r[_].state)),R=s===void 0&&y===void 0&&i!==!0&&g!==!0&&b===void 0&&typeof e=="object"&&Object.keys(e).length<=(w?5:e.type?2:1);if(I.length===0&&R)return t.logWarn(`[HANDLE_MSG_FROM_BG] Received minimal message (keys: ${Object.keys(e).join(", ")||"none"}) with no active downloads. Discarding.`,{message:e}),Promise.resolve({handled:!1,reason:"Minimal message, no active downloads"});if(t.logWarn(`[HANDLE_MSG_FROM_BG] Received message (keys: ${Object.keys(e).join(", ")||"none"}) without a usable finalDownloadId or it is a generic completion. Attempting to match with active downloads (found ${I.length} using states: ${S.join(", ")}).`),s===101||s===102||i===!0||g===!0||y===void 0&&b===void 0&&typeof e=="object"&&Object.keys(e).length<=(w?5:4)){const _=I;if(t.logWarn(`[HANDLE_MSG_FROM_BG] Attempting to match as completion message. Found ${_.length} candidates using states: ${S.join(", ")}.`),_.length===1){const N=_[0];if(t.logWarn(`[HANDLE_MSG_FROM_BG] Matched undefined/generic ID message to single active download: ${N}`),a=N,s===101||s===102||i===!0||g===!0){const E=r[a];return k(E.elem),E.elem.style.backgroundColor="#19a352",m(E.elem,"Downloaded!"),E.elem.title="Downloaded successfully (auto-matched generic completion)",E.elem.onclick=null,E.state="Downloaded",E.resetTimer=window.setTimeout(()=>$(a),1e4),t.logWarn(`[HANDLE_MSG_FROM_BG] Updated button ${a} to Downloaded state from matched generic completion message.`),Promise.resolve({handled:!0,id:a})}}else if(_.length>1&&F){let N=null,E=0;if(_.forEach(C=>{const j=r[C].lastProgressTime||0;j>E&&(E=j,N=C)}),N){if(t.logWarn(`[HANDLE_MSG_FROM_BG] Matched undefined/generic ID to most recent active download by timestamp: ${N}`),a=N,s===101||s===102||i===!0||g===!0){const C=r[a];return k(C.elem),C.elem.style.backgroundColor="#19a352",m(C.elem,"Downloaded!"),C.elem.title="Downloaded successfully (auto-matched generic completion by timestamp)",C.elem.onclick=null,C.state="Downloaded",C.resetTimer=window.setTimeout(()=>$(a),1e4),t.logWarn(`[HANDLE_MSG_FROM_BG] Updated button ${a} to Downloaded state from timestamp-matched generic completion message.`),Promise.resolve({handled:!0,id:a})}}else t.logWarn(`[HANDLE_MSG_FROM_BG] Found ${_.length} active downloads, but couldn't match generic completion message by timestamp.`)}else _.length>0?t.logWarn(`[HANDLE_MSG_FROM_BG] Found ${_.length} active downloads, can't match generic completion message reliably by unique or timestamp.`):t.logWarn("[HANDLE_MSG_FROM_BG] No active downloads to match generic completion message to.")}if(!a)return I.length===0&&R?t.logWarn("[HANDLE_MSG_FROM_BG] Could not determine finalDownloadId for minimal message (no active downloads) after matching attempts. Discarding.",{message:e}):t.logWarn("[HANDLE_MSG_FROM_BG] Could not determine finalDownloadId from generic message after all attempts. Discarding.",{message:e}),Promise.resolve({handled:!1,reason:"Could not determine finalDownloadId from generic message"})}if(!a)return t.logDebug("[HANDLE_MSG_FROM_BG] CRITICAL: finalDownloadId is null/undefined after all matching attempts. Discarding message.",e),Promise.resolve({handled:!1,reason:"finalDownloadId null after all matching"});const O=r[a];if(!O){const S=typeof e.error=="object"&&e.error!==null,I=typeof e.error=="string"&&e.error!=="";if(e.progress!==void 0&&e.progress>=100&&e.progress<=102||e.completed===!0||S||I){const R=`progress: ${e.progress}, completed: ${e.completed}, error: '${e.error||"none"}'`;return t.logInfo(`[HANDLE_MSG_FROM_BG CALL_ID: ${n}] Button data not found for finalDownloadId: ${a}. Classified as late finalization (${R}). Likely already cleaned up. Message:`,JSON.parse(JSON.stringify(e))),Promise.resolve({handled:!0,reason:`Button data not found, late finalization (${R})`})}else{const R=Object.keys(r);let _="<payload_serialization_error_in_warning>";try{_=JSON.stringify(e)}catch{}return t.logWarn(`[HANDLE_MSG_FROM_BG CALL_ID: ${n}] Button data not found for finalDownloadId: ${a} (AND NOT a recognized late finalization type). Message: ${_}. All downloadButton keys at this point: ${R.join(",")||"none"}`),Promise.resolve({handled:!1,reason:"Button data not found for finalDownloadId (and not a recognized late finalization type)"})}}const{elem:c,resetTimer:be,state:D}=O;if(t.logDebug(`[HANDLE_MSG_FROM_BG] Processing for finalDownloadId: ${a}. Current button state: ${D}. Message progress: ${s}, success: ${e.success}`),(D==="Downloaded"||D==="Error")&&(s!==void 0||y!==void 0))return t.logWarn(`[HANDLE_MSG_FROM_BG] Received message for already finalized downloadId ${a} (state: ${D}). Ignoring for UI update. Message:`,e),Promise.resolve({handled:!0,id:a,reason:`Already in ${D} state`});if(e.error===""&&e.success===void 0&&s===void 0&&y===void 0&&i===void 0&&D!=="Preparing"&&w===a)return t.logDebug(`[HANDLE_MSG_FROM_BG] Received redundant simple acknowledgment for ${a} while button state is ${D}. Ignoring for UI update. Payload:`,JSON.parse(JSON.stringify(e))),Promise.resolve({handled:!0,id:a,reason:"Redundant simple ack, state not Preparing"});if(e.success===!0&&typeof e.message=="string"&&e.message.includes("added to queue")&&w===a&&D==="Preparing"&&s===void 0&&y===void 0&&i===void 0)t.logDebug(`[HANDLE_MSG_FROM_BG] 'Added to Queue' ack for ${a}. Updating button text.`),m(c,"Queued (0%)"),c.style.cursor="default",r[a].state="Queued",r[a].lastProgressTime=Date.now();else if((e.success===!0&&!b||e.error===""&&e.success===void 0)&&w===a&&D==="Preparing"&&s===void 0&&y===void 0&&i===void 0)t.logDebug(`[HANDLE_MSG_FROM_BG] Initial command success (non-queue ack) for ${a}. Transitioning to Downloading state.`),m(c,"Downloading... (Click to Pause)"),c.style.background="linear-gradient(90deg, #ff5419 0%, transparent 0%)",c.style.cursor="pointer",c.onclick=A(a),r[a].state="Downloading",r[a].lastProgressTime=Date.now();else if(s===101)t.logDebug(`[HANDLE_MSG_FROM_BG] Download complete (101) for finalDownloadId=${a}`),k(c),c.style.backgroundColor="#19a352",m(c,"Downloaded!"),c.title="Downloaded successfully",c.onclick=null,r[a].state="Downloaded",r[a].resetTimer=window.setTimeout(()=>$(a),1e4);else if(s===102)t.logDebug(`[HANDLE_MSG_FROM_BG] Download complete with errors (102) for finalDownloadId=${a}`),k(c),c.style.backgroundColor="gold",c.style.color="#333",m(c,"Downloaded!"),c.title=b||"Some tracks failed to download",c.onclick=null,r[a].state="Downloaded",r[a].resetTimer=window.setTimeout(()=>$(a),3e4);else if(y==="Paused")t.logDebug(`[HANDLE_MSG_FROM_BG] Button state updated to Paused, finalDownloadId=${a}`),k(c),m(c,"Paused (Click to Resume)"),c.style.cursor="pointer",c.onclick=A(a),r[a].state="Paused";else if(y==="Resuming")t.logDebug(`[HANDLE_MSG_FROM_BG] Button state updated to Resuming, finalDownloadId=${a}`),m(c,"Resuming..."),c.style.cursor="default",c.onclick=null,r[a].state="Resuming";else if(s===100||s>100&&s<101)D!=="Paused"&&D!=="Pausing"&&D!=="Resuming"&&(t.logDebug(`[HANDLE_MSG_FROM_BG] Button state updated to Finishing, finalDownloadId=${a}`),m(c,"Finishing..."),c.style.background="linear-gradient(90deg, #ff5419 100%, transparent 0%)",c.onclick=null,r[a].state="Finishing");else if(s!==void 0&&s>=0&&s<100){if(D==="Pausing"||D==="Paused")return t.logDebug(`[HANDLE_MSG_FROM_BG] Progress update (${s}%) for ${a} received while state is '${D}'. Ignoring UI update to prevent flicker.`),Promise.resolve({handled:!0,id:a,reason:"Ignoring download progress while pausing/paused"});t.logDebug(`[HANDLE_MSG_FROM_BG] Button state updated to Downloading (${s}%), finalDownloadId=${a}`),m(c,"Downloading... (Click to Pause)"),c.style.background=`linear-gradient(90deg, #ff5419 ${s}%, transparent 0%)`,(D!=="Downloading"||!c.onclick)&&(c.style.cursor="pointer",c.onclick=A(a)),r[a].state="Downloading",r[a]&&(r[a].lastProgressTime=Date.now())}else b?(t.logWarn(`[HANDLE_MSG_FROM_BG] Button state updated to Error: ${b}, finalDownloadId=${a}`),k(c),c.style.backgroundColor="#d30029",m(c,"ERROR",b),c.onclick=null,r[a].state="Error"):D==="Preparing"&&s!==void 0&&(t.logDebug(`[HANDLE_MSG_FROM_BG] Button state forcibly updated from Preparing to Downloading, finalDownloadId=${a}`),m(c,"Downloading... (Click to Pause)"),c.style.background="linear-gradient(90deg, #ff5419 "+(s||0)+"%, transparent 0%)",c.style.cursor="pointer",c.onclick=A(a),r[a].state="Downloading");return Promise.resolve({handled:!0,id:a,finalState:r[a]?.state})};t.logDebug("[CONTENT_SCRIPT_LISTENER_SETUP] Attempting to set up onMessage listener NOW."),typeof J<"u"?(J(se),t.logDebug(`[CONTENT_SCRIPT_LISTENER_SETUP] onMessage listener setup complete. Document readyState: ${document.readyState}`)):t.logDebug("[CONTENT_SCRIPT_SETUP_ERROR] onMessage utility is not defined!");const de=e=>{const o=document.createElement("button"),n=e?"sc-button-small":"sc-button-medium";return o.className=`sc-button-download sc-button ${n} sc-button-responsive`,m(o,"Download"),o},U=e=>{const o=e.includes("/sets/")||e.includes("/albums/");t.logDebug(`createDownloadCommand: URL=${e}, isSetUrl=${o}`,{url:e,isSetUrl:o});const n=l=>l?B({type:o?"DOWNLOAD_SET":"DOWNLOAD",url:e,downloadId:l},"createDownloadCommand"):(t.logError("Attempted to send DOWNLOAD command with undefined/empty downloadId",{url:e}),Promise.reject("Undefined/empty downloadId for DOWNLOAD command"));return n.url=e,n.isSet=o,t.logDebug(`createDownloadCommand: Created command with isSet=${n.isSet}`,{commandUrl:n.url,isSet:n.isSet}),n},W=(e,o,n)=>{if(e.querySelector("button.sc-button-download")!==null){t.logDebug("Download button already exists");return}t.logDebug("Adding download button",{parentNode:e.nodeName,url:o.url,isSet:o.isSet});const l=de(n),u=o.url;t.logInfo(`Button created with URL: ${u}`);const f=async()=>{const d=crypto.randomUUID();r[d]={elem:l,onClick:f,state:"Preparing",originalUrl:u,lastProgressTime:Date.now()},t.logInfo(`Button clicked with downloadId: ${d}, URL: ${u}`),l.style.cursor="default",l.onclick=null,m(l,"Preparing..."),k(l);const h=setTimeout(()=>{const s=r[d];s&&s.state==="Preparing"&&(t.logWarn(`Safety timeout triggered for downloadId=${d}, button still in Preparing state`),m(l,"Timeout (Retry?)"),l.title="Download request timed out. Click to try again.",l.style.backgroundColor="#d30029",l.style.cursor="pointer",l.onclick=f,r[d].state="Error")},1e4),p=setTimeout(()=>{const s=r[d];if(s&&s.state==="Downloading"){const b=s.lastProgressTime||0,y=Date.now()-b;y>12e4&&(t.logWarn(`Completion safety timeout triggered for downloadId=${d}. Download seems stuck in Downloading state for ${y/1e3}s`),y>18e4?(t.logInfo(`Assuming potential silent completion for downloadId=${d}`),k(l),l.style.backgroundColor="#19a352",m(l,"Downloaded!"),l.title="Download likely completed (auto-detected)",l.onclick=null,r[d].state="Downloaded",r[d].resetTimer=window.setTimeout(()=>$(d),1e4)):(t.logInfo(`Marking download ${d} as potentially stuck`),m(l,"Downloading... (may be stuck)")))}},3e5);try{const s=await o(d);t.logInfo(`Download command response for ${d}:`,s),clearTimeout(h);const b=r[d];b&&b.state==="Preparing"&&(t.logInfo(`Manually transitioning button from Preparing to Downloading state for ${d}`),m(l,"Downloading... (Click to Pause)"),l.style.background="linear-gradient(90deg, #ff5419 0%, transparent 0%)",l.style.cursor="pointer",l.onclick=A(d),r[d].state="Downloading",r[d].lastProgressTime=Date.now())}catch(s){clearTimeout(h),clearTimeout(p),t.logError(`Initial download command failed for ${u}`,s),r[d]&&(r[d].state="Error",m(l,"ERROR",s.message||"Failed to start"),l.style.backgroundColor="#d30029")}};l.oncontextmenu=d=>{d.preventDefault(),d.stopPropagation();const h=document.getElementById("scdl-context-menu");h&&document.body.removeChild(h);const p=document.createElement("div");p.id="scdl-context-menu",p.style.position="absolute",p.style.left=`${d.pageX}px`,p.style.top=`${d.pageY}px`,p.style.background="#fff",p.style.boxShadow="0 2px 5px rgba(0,0,0,0.2)",p.style.padding="5px 0",p.style.borderRadius="3px",p.style.zIndex="10000",document.body.appendChild(p);const s=()=>{document.getElementById("scdl-context-menu")&&document.body.removeChild(p),document.removeEventListener("click",s)};return document.addEventListener("click",s),!1},l.onclick=f,e.appendChild(l);const P=o.isSet;if(t.logInfo("Checking if should add range button:",{isSet:P,url:o.url,urlIncludes:{sets:o.url?.includes("/sets/"),albums:o.url?.includes("/albums/")},browserType:typeof browser<"u"?"Firefox":"Chrome"}),ee(u,P)){const d=document.createElement("button");t.logInfo("Creating range button for URL="+(o.url||"unknown"));const h=n?"sc-button-small":"sc-button-medium";d.className=`sc-button-range sc-button ${h} sc-button-responsive`,d.textContent="Range...",d.title="Download a range of tracks",d.style.marginLeft="5px",d.onclick=p=>{p.preventDefault(),p.stopPropagation();const s=crypto.randomUUID();r[s]={elem:l,onClick:f,state:"Idle",originalUrl:u,lastProgressTime:Date.now()},t.logInfo(`Range button clicked. Created preDownloadId: ${s}, with URL: ${u}`),ae(l,(b,y)=>{const g=s;t.logInfo(`Range download handler called with start=${b}, end=${y}, mainButtonId=${g}`);const i=r[g];if(t.logInfo("Button data for range download:",{hasButtonData:!!i,originalUrl:i?.originalUrl,state:i?.state}),!i||!i.originalUrl){t.logError(`Range download failed: No button data or URL for ID ${g}`);const w=document.getElementById("scdl-range-modal-error");w&&(w.textContent="Error: Could not get original URL for the playlist.",w.style.display="block");return}m(i.elem,"Preparing..."),i.elem.style.cursor="default",i.elem.onclick=null,i.state="Preparing",i.lastProgressTime=Date.now();const F=setTimeout(()=>{r[g]&&r[g].state==="Preparing"&&(t.logWarn(`Safety timeout triggered for range download with ID ${g}`),m(i.elem,"Timeout (Retry?)"),i.elem.title="Range download request timed out. Click to try again.",i.elem.style.backgroundColor="#d30029",i.elem.style.cursor="pointer",i.elem.onclick=f,r[g].state="Error")},15e3),G=setTimeout(()=>{const w=r[g];if(w&&(w.state==="Downloading"||w.state==="Preparing")){const a=w.lastProgressTime||0,O=Date.now()-a;O>3e5&&(t.logWarn(`Range download completion safety timeout triggered for ID ${g}. Download seems stuck for ${O/1e3}s`),O>18e5?(t.logInfo(`Assuming potential silent completion for range download ${g}`),k(i.elem),i.elem.style.backgroundColor="#19a352",m(i.elem,"Downloaded!"),i.elem.title="Range download likely completed (auto-detected)",i.elem.onclick=null,r[g].state="Downloaded",r[g].resetTimer=window.setTimeout(()=>$(g),1e4)):(t.logInfo(`Marking range download ${g} as potentially stuck`),m(i.elem,"Downloading range... (may be stuck)")))}},18e5);t.logInfo("Sending range download message:",{type:"DOWNLOAD_SET_RANGE",url:i.originalUrl,start:b,end:y,downloadId:g}),B({type:"DOWNLOAD_SET_RANGE",url:i.originalUrl,start:b,end:y,downloadId:g},"handleRangeDownload").then(w=>{clearTimeout(F),t.logInfo("Range download response:",w),r[g]&&r[g].state==="Preparing"&&(t.logInfo(`Manually transitioning range button from Preparing to Downloading state for ${g}`),m(i.elem,"Downloading... (Click to Pause)"),i.elem.style.background="linear-gradient(90deg, #ff5419 0%, transparent 0%)",i.elem.style.cursor="pointer",i.elem.onclick=A(g),r[g].state="Downloading",r[g].lastProgressTime=Date.now())}).catch(w=>{clearTimeout(F),clearTimeout(G),t.logError("Range download request failed:",w),r[g]&&(k(i.elem),i.elem.style.backgroundColor="#d30029",m(i.elem,"ERROR",w?.message||"Range download failed"),i.elem.onclick=null,r[g].state="Error")})})},e.appendChild(d)}},z=e=>{e.parentNode.removeChild(e)},Q=e=>{const o=document.querySelectorAll(e);for(let n=0;n<o.length;n++){const l=o[n];z(l)}},ie=()=>{const e="a.sc-buylink";Q(e);const o={selector:e,callback:n=>z(n)};L?.addEvent(o)},ce=()=>{Q("button.sc-button-download")},ue=()=>{const e=".sc-button-group-medium > .sc-button-like";t.logDebug(`[TrackPage] Querying for selector: ${e}`);const o=l=>{t.logDebug("[TrackPage] Found node matching selector:",l);const u=window.location.origin+window.location.pathname,f=U(u);W(l.parentNode,f,!1)};document.querySelectorAll(e).forEach(o);const n={selector:e,callback:o};L?.addEvent(n),t.logDebug(`[TrackPage] Initial elements found: ${document.querySelectorAll(e).length}`)},ge=()=>{const e=".sound.streamContext .sc-button-group > .sc-button-like";t.logDebug(`[Feed] Querying for selector: ${e}`);const o=l=>{t.logDebug("[Feed] Found node matching selector:",l);const u=l.parentElement.closest(".sound__body").querySelector("a.soundTitle__title");if(u===null)return;const f=window.location.origin+u.getAttribute("href"),P=U(f);W(l.parentNode,P,!0)};document.querySelectorAll(e).forEach(o);const n={selector:e,callback:o};L?.addEvent(n),t.logDebug(`[Feed] Initial elements found: ${document.querySelectorAll(e).length}`)},me=e=>{let o=document.querySelector("#repost-blocker");if(e){if(o){t.logWarn("Repost-Blocker script has already been injected!");return}const n=Z("/js/repostBlocker-scdl.js");if(!n)return;t.logInfo("Start blocking reposts"),o=document.createElement("script"),o.type="text/javascript",o.id="repost-blocker",o.src=n,document.documentElement.appendChild(o)}else{if(!o)return;t.logInfo("Stop blocking reposts");const n=document.createElement("script");n.type="text/javascript",n.id="cleanup-repost-blocker",n.innerText="XMLHttpRequest.prototype.resetSend();",document.documentElement.appendChild(n),document.documentElement.removeChild(o),document.documentElement.removeChild(n)}},K=async()=>{t.logInfo("handlePageLoaded executing..."),L=new te,ie(),ce(),ue(),ge(),fe(),L.start(document.body),t.logInfo("Attached!")},fe=()=>{if(t.logInfo("[PlaylistPage] Running playlist button initialization"),!(window.location.pathname.includes("/sets/")||window.location.pathname.includes("/albums/")||document.querySelector(".setTrackList")!==null)){t.logDebug("[PlaylistPage] Not on a playlist page, skipping");return}t.logInfo("[PlaylistPage] Detected playlist page, adding download button");const e=[".soundActions .sc-button-group",".soundHeader__actions .sc-button-group",".sc-button-like",".playControls__play",".setActions .sc-button-group"];for(const n of e){const l=document.querySelectorAll(n);t.logDebug(`[PlaylistPage] Found ${l.length} elements matching "${n}"`)}let o=null;for(const n of e){const l=document.querySelector(n);if(l){o=l,t.logInfo(`[PlaylistPage] Found button parent: ${n}`);break}}if(!o){t.logWarn("[PlaylistPage] No direct button parent found, trying alternative approach");const n=document.querySelector(".trackList")||document.querySelector(".setTrackList");if(n){const l=document.querySelector(".sc-button-like")||document.querySelector(".sc-button-share")||document.querySelector(".sc-button-play");if(l&&l.parentNode)o=l.parentNode,t.logInfo("[PlaylistPage] Found button parent via existing button",o);else{const u=n.querySelector(".tracklistHeader")||n.querySelector(".setTrackList__header");u&&(o=document.createElement("div"),o.className="sc-button-group sc-button-group-medium",u.appendChild(o),t.logInfo("[PlaylistPage] Created custom button parent in tracklist header"))}}}if(o){const n=window.location.origin+window.location.pathname;t.logInfo(`[PlaylistPage] Creating download command for: ${n}`);const l=U(n);l.isSet=!0,t.logInfo("[PlaylistPage] Adding download button to parent:",o),W(o,l,!1)}else t.logError("[PlaylistPage] Could not find or create button parent for playlist page")},M=document.readyState;(M==="complete"||M==="interactive")&&setTimeout(K,0),document.addEventListener("DOMContentLoaded",K);let T=null;function pe(){T!==null&&clearInterval(T),T=window.setInterval(()=>{const e=Date.now(),o=Object.keys(r);o.length!==0&&(t.logDebug(`Running stuck download check for ${o.length} active downloads`),o.forEach(n=>{const l=r[n];if(l&&l.state==="Downloading"){const u=l.lastProgressTime||0,f=e-u;f>3e5&&(t.logWarn(`Download ${n} has been idle for ${Math.floor(f/1e3)}s`),f>6e5?(t.logInfo(`Auto-completing download ${n} due to long inactivity (${Math.floor(f/1e3)}s)`),k(l.elem),l.elem.style.backgroundColor="#19a352",l.elem.title="Download likely completed (auto-detected)",l.elem.onclick=null,l.state="Downloaded",l.resetTimer&&clearTimeout(l.resetTimer),l.resetTimer=window.setTimeout(()=>$(n),1e4)):(m(l.elem,"Downloading... (may be stuck)"),l.elem.title=`No progress for ${Math.floor(f/6e4)} minutes. Click to pause/resume.`))}}))},6e4),t.logInfo("Started automatic stuck download checker")}function we(){T!==null&&(clearInterval(T),T=null,t.logInfo("Stopped automatic stuck download checker"))}window.onbeforeunload=()=>{L?.stop(),we(),t.logInfo("Unattached!")};function X(){pe()}(M==="complete"||M==="interactive")&&setTimeout(X,1e3),document.addEventListener("DOMContentLoaded",()=>{setTimeout(X,1e3)});function De(e,o){const n=JSON.stringify(o);window.localStorage.setItem("SOUNDCLOUD-DL-"+e,n)}t.logInfo("[ContentScript] Requesting configuration from background script..."),B({type:"GET_EXTENSION_CONFIG"},"ContentScript_GetConfig").then(e=>{if(!e){t.logError("[ContentScript] Failed to load configuration from background script. Received undefined or null.");return}t.logInfo("[ContentScript] Configuration received from background:",e);for(const n of Object.keys(e))if(oe.includes(n)){const l=n;De(l,e[l]?.value)}const o=e["block-reposts"];o&&typeof o.value=="boolean"?(t.logInfo(`[ContentScript] Setting up block-reposts based on received config: ${o.value}`),me(o.value)):t.logWarn("[ContentScript] 'block-reposts' configuration not found or invalid in object from background."),t.logInfo("[ContentScript] Initial configuration applied.")}).catch(e=>{t.logError("[ContentScript] Error requesting or processing configuration from background script:",e)});const A=e=>async()=>{const o=r[e];if(!o){t.logWarn(`Pause/Resume: Button data not found for downloadId: ${e}`);return}if(!e){t.logError("Attempted to send PAUSE/RESUME command with undefined/empty downloadId.");return}const n=o.state;n==="Downloading"||n==="Resuming"?(t.logInfo(`[PAUSE_CLICK] User clicked Pause for ${e}. Current state: ${n}. Transitioning to Pausing.`),m(o.elem,"Pausing..."),o.elem.style.cursor="default",o.elem.onclick=null,o.state="Pausing",o.lastProgressTime=Date.now(),await B({type:"PAUSE_DOWNLOAD",downloadId:e},"createPauseResumeHandler-Pause")):n==="Paused"?(t.logInfo(`[RESUME_CLICK] User clicked Resume for ${e}. Current state: ${n}. Transitioning to Resuming.`),m(o.elem,"Resuming..."),o.elem.style.cursor="default",o.elem.onclick=null,o.state="Resuming",o.lastProgressTime=Date.now(),await B({type:"RESUME_DOWNLOAD",downloadId:e},"createPauseResumeHandler-Resume")):t.logWarn(`[PAUSE_RESUME_CLICK] Clicked on button for ${e} but state is '${n}', not Downloading/Resuming or Paused. No action taken.`)};function $(e,o="Idle"){const n=r[e];if(!n)return;const{elem:l,onClick:u}=n;k(l),setTimeout(()=>{r[e]&&(m(l,o==="Error"?"ERROR":"Download"),l.title=o==="Error"?"Error occurred":"Download",l.style.cursor="pointer",l.onclick=u,r[e].state=o==="Error"?"Error":"Idle",o==="Idle"&&delete r[e])},500)}let H=null;function Y(){H!==null&&clearInterval(H),H=window.setInterval(()=>{const e=Object.keys(r);e.length!==0&&(t.logDebug(`DEBUG: Currently tracking ${e.length} active downloads`),e.forEach(o=>{const n=r[o];n&&t.logDebug(`DEBUG: Download ${o} - State=${n.state}, browserDownloadId=${n.browserDownloadId||"none"}, lastProgress=${n.lastProgressTime?new Date(n.lastProgressTime).toISOString():"none"}`)}))},1e4),t.logInfo("Started debug logging for downloads")}(M==="complete"||M==="interactive")&&setTimeout(Y,2e3),document.addEventListener("DOMContentLoaded",()=>{setTimeout(Y,2e3)});
