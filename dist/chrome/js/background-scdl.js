import{L as B,a as X}from"./logger-scdl-B3xayXxI.js";import{s as ne,g as Ze,a as de,i as et,c as tt,d as rt,b as at,o as st,e as it,f as nt,h as ot,j as lt,u as De}from"./compatibilityStubs-scdl-D9J5LMR3.js";import{l as $e,c as gt,g as v,a as Re,X as ke,b as Se,d as ct,s as oe,e as Fe,f as x,r as fe}from"./config-scdl-ChAA9DMB.js";class le extends Error{constructor(t){super(t),this.name="RateLimitError"}}class ve{baseUrl="https://api-v2.soundcloud.com";logger;globalBackoffUntil=null;globalBackoffDurationMs=61*1e3;constructor(){this.logger=B.create("SoundCloudApi")}async retryWithBackoff(t,e=30,r=2e3,s){if(this.globalBackoffUntil&&Date.now()<this.globalBackoffUntil){const u=this.globalBackoffUntil-Date.now();this.logger.logWarn(`[Global Backoff] Active. Waiting for ${u/1e3}s before proceeding with ${s||"operation"}.`),await new Promise(c=>setTimeout(c,u))}let i=0,n=r;for(;i<=e;)try{if(this.globalBackoffUntil&&Date.now()<this.globalBackoffUntil){const u=this.globalBackoffUntil-Date.now();this.logger.logWarn(`[Global Backoff] Active during retry attempt. Waiting for ${u/1e3}s for ${s||"operation"}.`),await new Promise(c=>setTimeout(c,u))}return this.logger.logDebug(`[Retry] Attempt ${i+1}/${e+1} for ${s||"operation"}`),await t()}catch(u){if(u instanceof le)if(i<e)i++,this.logger.logWarn(`[Retry] Rate limit hit for ${s||"operation"}. Retrying in ${n/1e3}s... (Attempt ${i+1}/${e+1})`),await new Promise(c=>setTimeout(c,n)),n*=2;else throw this.logger.logError(`[Retry] Failed for ${s||"operation"} after ${i+1} attempts due to rate limit. Activating global backoff.`),this.globalBackoffUntil=Date.now()+this.globalBackoffDurationMs,this.logger.logWarn(`[Global Backoff] Activated for ${this.globalBackoffDurationMs/1e3}s due to persistent rate limiting on ${s||"operation"}.`),u;else throw this.logger.logError(`[Retry] Failed for ${s||"operation"} after ${i+1} attempts or non-retryable error:`,u),u}const o=`[Retry] Exhausted retries for ${s||"operation"} without success (this path should not be reached).`;throw this.logger.logError(o),new Error(o)}resolveUrl(t){const e=`${this.baseUrl}/resolve?url=${t}`;return this.retryWithBackoff(()=>this._fetchJsonInternal(e),3,2e3,`resolveUrl: ${t}`)}getCurrentUser(){const t=`${this.baseUrl}/me`;return this.retryWithBackoff(()=>this._fetchJsonInternal(t),3,2e3,"getCurrentUser")}async getFollowedArtistIds(t){const e=`${this.baseUrl}/users/${t}/followings/ids`,r=await this.retryWithBackoff(()=>this._fetchJsonInternal(e),3,2e3,`getFollowedArtistIds: ${t}`);return!r||!r.collection?null:r.collection}async getTracks(t){const e=`${this.baseUrl}/tracks?ids=${t.join(",")}`;this.logger.logInfo("Fetching tracks with Ids",{trackIds:t});const r=await this.retryWithBackoff(()=>this._fetchJsonInternal(e),3,2e3,`getTracks: ${t.length} IDs`);return t.reduce((s,i,n)=>(s[i]=r[n],s),{})}async getStreamDetails(t){const e=await this.retryWithBackoff(()=>this._fetchJsonInternal(t),3,2e3,`getStreamDetails: ${t}`);if(!e||!e.url)return this.logger.logError("Invalid stream response",e),null;let r,s=!1;const i=/(?:(\w{3,4})\/playlist)?\.(\w{3,4})(?:$|\?)/.exec(e.url);return i.length>=2&&(i[2]==="m3u8"?(r=i[1],s=!0):r=i[2]),{url:e.url,extension:r,hls:s}}async getOriginalDownloadUrl(t){const e=`${this.baseUrl}/tracks/${t}/download`;this.logger.logInfo("Getting original download URL for track with Id",t);try{const r=await this.retryWithBackoff(()=>this._fetchJsonInternal(e),3,2e3,`getOriginalDownloadUrl: ${t}`);return!r||!r.redirectUri?(this.logger.logError("Invalid original file response",r),null):r.redirectUri}catch(r){return this.logger.logError(`Failed to get original download URL for track ${t} after retries`,r),null}}async downloadArtwork(t){const[e]=await this.retryWithBackoff(()=>this._fetchArrayBufferInternal(t),3,2e3,`downloadArtwork: ${t}`);return e}downloadStream(t,e){return this.retryWithBackoff(()=>this._fetchArrayBufferInternal(t,e),3,1e3,`downloadStream: ${t}`)}async _fetchArrayBufferInternal(t,e){try{const r=await fetch(t);if(!r.ok){if(r.status===404)return this.logger.logDebug(`[fetchArrayBuffer] Resource not found (404) for ${t}`),[null,r.headers];if(r.status===429)throw this.logger.logWarn(`[fetchArrayBuffer] Rate limited (429) while fetching ${t}.`),new le(`Rate limited (status 429) on ${t}`);const b=`[fetchArrayBuffer] HTTP error for ${t} - Status: ${r.status} ${r.statusText}`;throw new Error(b)}if(!r.body)throw this.logger.logError(`Response for ${t} has no body, despite response.ok being true.`),new Error(`Response for ${t} has no body.`);const s=r.headers.get("Content-Length"),i=s?parseInt(s,10):0;let n=0;const o=[],u=r.body.getReader();for(e&&i>0&&e(0);;){const{done:b,value:D}=await u.read();if(b)break;o.push(D),n+=D.byteLength,e&&i>0&&e(Math.round(n/i*100))}e&&e(100);const c=new ArrayBuffer(n),f=new Uint8Array(c);let p=0;for(const b of o)f.set(b,p),p+=b.byteLength;return n===0&&r.status===200&&this.logger.logWarn(`[fetchArrayBuffer] Fetched ${t} (Status: ${r.status}) but received an empty (0 bytes) buffer.`),[c,r.headers]}catch(r){throw this.logger.logError(`[fetchArrayBuffer] Generic error for ${t}:`,r),r instanceof le?r:new Error(`Failed to fetch array buffer from ${t}: ${r instanceof Error?r.message:String(r)}`)}}async _fetchJsonInternal(t){try{const e=await fetch(t);if(!e.ok)if(e.status===429){const s=`Rate limited while fetching from ${t}. Please wait and try again later.`;throw this.logger.logWarn(s),new le(s)}else{const s=`HTTP error ${e.status} while fetching from ${t}`;throw this.logger.logError(s),new Error(s)}return await e.json()||null}catch{return this.logger.logError("Failed to fetch JSON from",t),null}}}const ut="DOWNLOAD_SET",dt="DOWNLOAD",ft="DOWNLOAD_SET_RANGE",ht="PAUSE_DOWNLOAD",mt="RESUME_DOWNLOAD",he="GET_QUEUE_DATA",ge="GET_EXTENSION_CONFIG",Oe={},O=B.create("MessageHandler",X.Debug);async function pt(a,t){let e={};try{e=JSON.parse(JSON.stringify(a))}catch{e={errorParsingMessage:!0,rawMessage:String(a)}}O.logDebug("[MessageHandler DEBUG] Received message:",e);const r=[ge,he];(!a||a.downloadId===void 0&&a.type!==void 0&&!r.includes(a.type))&&O.logError(`CRITICAL: MessageHandler received message with type ${a.type} that requires a downloadId, but it was missing!`,e);const s=t.tab?.id,{downloadId:i,url:n,type:o}=a,u=[ge,he];if(!s&&o&&!u.includes(o))return O.logWarn(`Message type ${o} received without a valid tab ID and is not allowed.`,{sender:t,message:a}),{error:`No valid tab ID found for message type ${o}`};if(o===ge){O.logDebug(`[MessageHandler] Received GET_EXTENSION_CONFIG request from tab ${s}`);try{const c=await $e(!1),f={};for(const p of gt)c[p].secret||(f[p]={value:c[p].value});return O.logDebug("[MessageHandler] Sending non-secret configuration to content script:",f),Promise.resolve(f)}catch(c){return O.logError("[MessageHandler] Error loading or preparing configuration for content script:",c),Promise.reject({error:"Failed to retrieve extension configuration."})}}if(o&&!u.includes(o)&&!s)return O.logError(`CRITICAL: Message type ${o} requires a tabId, but it was missing after initial checks.`,{sender:t,message:a}),{error:`Missing tab ID for message type ${o}`};if(o===dt||o===ut||o===ft){if(!s)return O.logError(`CRITICAL: Download operation ${o} missing tabId.`),{error:"Download operations require a tabId."};O.logInfo(`[MessageHandler] Queuing request: ${o} for URL: ${n} with ID: ${i}`);const c={id:i,type:o,url:n,originalMessage:a,status:"pending",tabId:s,addedAt:Date.now()};M.push(c),O.logDebug(`[MessageHandler] Item added to queue. Current queue size: ${M.length}`,c),ae();const f={success:!0,message:`${o} request added to queue.`,originalDownloadId:i};return ne(s,f).then(()=>O.logInfo(`[MessageHandler TX Ack] Queued ACK for ${i} sent to tab ${s}.`)).catch(p=>O.logError(`[MessageHandler TX Ack] Queued ACK for ${i} FAILED to send to tab ${s}:`,p)),Ae(),Promise.resolve(f)}else if(o===ht){if(!s)return{error:"Pause ops require tabId"};const c=a;return O.logInfo(`Received pause request for download: ${c.downloadId}`),Oe[c.downloadId]=!0,G(s,c.downloadId,void 0,void 0,"Paused"),{success:!0,action:"paused",downloadId:c.downloadId}}else if(o===mt){if(!s)return{error:"Resume ops require tabId"};const c=a;O.logInfo(`Received resume request for download: ${c.downloadId}`),delete Oe[c.downloadId];const f=M.find(p=>p.id===c.downloadId);return f&&f.status==="pending"?O.logInfo(`Resume for pending item ${f.id}. Will be picked by processor.`):f&&f.status==="processing"&&O.logInfo(`Resume for actively processing item ${f.id}. Processor will handle.`),Ae(),G(s,c.downloadId,void 0,void 0,"Resuming"),{success:!0,action:"resumed",downloadId:c.downloadId}}else{if(o===he)return O.logInfo("[MessageHandler] Received GET_QUEUE_DATA request (likely from popup)."),Promise.resolve(M);if(o!==ge)return O.logWarn(`[MessageHandler] Unknown message type received: ${o}`,a),Promise.reject({error:`Unknown message type: ${o}`})}}var T;(function(a){a.LOAD="LOAD",a.EXEC="EXEC",a.FFPROBE="FFPROBE",a.WRITE_FILE="WRITE_FILE",a.READ_FILE="READ_FILE",a.DELETE_FILE="DELETE_FILE",a.RENAME="RENAME",a.CREATE_DIR="CREATE_DIR",a.LIST_DIR="LIST_DIR",a.DELETE_DIR="DELETE_DIR",a.ERROR="ERROR",a.DOWNLOAD="DOWNLOAD",a.PROGRESS="PROGRESS",a.LOG="LOG",a.MOUNT="MOUNT",a.UNMOUNT="UNMOUNT"})(T||(T={}));const wt=(()=>{let a=0;return()=>a++})(),Et=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),bt=new Error("called FFmpeg.terminate()");class yt{#t=null;#a={};#r={};#s=[];#i=[];loaded=!1;#n=()=>{this.#t&&(this.#t.onmessage=({data:{id:t,type:e,data:r}})=>{switch(e){case T.LOAD:this.loaded=!0,this.#a[t](r);break;case T.MOUNT:case T.UNMOUNT:case T.EXEC:case T.FFPROBE:case T.WRITE_FILE:case T.READ_FILE:case T.DELETE_FILE:case T.RENAME:case T.CREATE_DIR:case T.LIST_DIR:case T.DELETE_DIR:this.#a[t](r);break;case T.LOG:this.#s.forEach(s=>s(r));break;case T.PROGRESS:this.#i.forEach(s=>s(r));break;case T.ERROR:this.#r[t](r);break}delete this.#a[t],delete this.#r[t]})};#e=({type:t,data:e},r=[],s)=>this.#t?new Promise((i,n)=>{const o=wt();this.#t&&this.#t.postMessage({id:o,type:t,data:e},r),this.#a[o]=i,this.#r[o]=n,s?.addEventListener("abort",()=>{n(new DOMException(`Message # ${o} was aborted`,"AbortError"))},{once:!0})}):Promise.reject(Et);on(t,e){t==="log"?this.#s.push(e):t==="progress"&&this.#i.push(e)}off(t,e){t==="log"?this.#s=this.#s.filter(r=>r!==e):t==="progress"&&(this.#i=this.#i.filter(r=>r!==e))}load=({classWorkerURL:t,...e}={},{signal:r}={})=>(this.#t||(this.#t=t?new Worker(new URL(t,import.meta.url),{type:"module"}):new Worker(new URL("/assets/worker-BAOIWoxA.js",import.meta.url),{type:"module"}),this.#n()),this.#e({type:T.LOAD,data:e},void 0,r));exec=(t,e=-1,{signal:r}={})=>this.#e({type:T.EXEC,data:{args:t,timeout:e}},void 0,r);ffprobe=(t,e=-1,{signal:r}={})=>this.#e({type:T.FFPROBE,data:{args:t,timeout:e}},void 0,r);terminate=()=>{const t=Object.keys(this.#r);for(const e of t)this.#r[e](bt),delete this.#r[e],delete this.#a[e];this.#t&&(this.#t.terminate(),this.#t=null,this.loaded=!1)};writeFile=(t,e,{signal:r}={})=>{const s=[];return e instanceof Uint8Array&&s.push(e.buffer),this.#e({type:T.WRITE_FILE,data:{path:t,data:e}},s,r)};mount=(t,e,r)=>{const s=[];return this.#e({type:T.MOUNT,data:{fsType:t,options:e,mountPoint:r}},s)};unmount=t=>{const e=[];return this.#e({type:T.UNMOUNT,data:{mountPoint:t}},e)};readFile=(t,e="binary",{signal:r}={})=>this.#e({type:T.READ_FILE,data:{path:t,encoding:e}},void 0,r);deleteFile=(t,{signal:e}={})=>this.#e({type:T.DELETE_FILE,data:{path:t}},void 0,e);rename=(t,e,{signal:r}={})=>this.#e({type:T.RENAME,data:{oldPath:t,newPath:e}},void 0,r);createDir=(t,{signal:e}={})=>this.#e({type:T.CREATE_DIR,data:{path:t}},void 0,e);listDir=(t,{signal:e}={})=>this.#e({type:T.LIST_DIR,data:{path:t}},void 0,e);deleteDir=(t,{signal:e}={})=>this.#e({type:T.DELETE_DIR,data:{path:t}},void 0,e)}var Ne;(function(a){a.MEMFS="MEMFS",a.NODEFS="NODEFS",a.NODERAWFS="NODERAWFS",a.IDBFS="IDBFS",a.WORKERFS="WORKERFS",a.PROXYFS="PROXYFS"})(Ne||(Ne={}));const Tt=new Error("failed to get response body reader"),It=new Error("failed to complete download"),At="Content-Length",Dt=async(a,t)=>{const e=await fetch(a);let r;try{const s=parseInt(e.headers.get(At)||"-1"),i=e.body?.getReader();if(!i)throw Tt;const n=[];let o=0;for(;;){const{done:f,value:p}=await i.read(),b=p?p.length:0;if(f){if(s!=-1&&s!==o)throw It;t&&t({url:a,total:s,received:o,delta:b,done:f});break}n.push(p),o+=b,t&&t({url:a,total:s,received:o,delta:b,done:f})}const u=new Uint8Array(o);let c=0;for(const f of n)u.set(f,c),c+=f.length;r=u.buffer}catch(s){console.log("failed to send download progress event: ",s),r=await e.arrayBuffer()}return r},me=async(a,t,e=!1,r)=>{const s=e?await Dt(a,r):await(await fetch(a)).arrayBuffer(),i=new Blob([s],{type:t});return URL.createObjectURL(i)},$t=B.create("FFmpegInstance",X.Debug);async function Pe(a){const t=a?B.create(`FFmpegInstance:${a}`,X.Debug):$t,e=new yt;e.on("log",({message:r})=>{r.startsWith("frame=")||t.logDebug(`[FFMPEG_WASM_LOG] ${r}`)}),t.logInfo("[FFMPEG_WASM] Initializing new FFmpeg.wasm instance from local files (using toBlobURL strategy)...");try{const r=Ze("ffmpeg-core/");if(!r)return t.logError("[FFMPEG_WASM] Failed to get base URL for FFmpeg core files."),null;const s=r+"ffmpeg-core.js",i=r+"ffmpeg-core.wasm",n=r+"worker.js";t.logInfo(`[FFMPEG_WASM] Base URL for Blob: ${r}`),t.logInfo("[FFMPEG_WASM] Attempting to create Blob URLs for core files (including worker)...");const o=await me(s,"text/javascript"),u=await me(i,"application/wasm"),c=await me(n,"text/javascript");return t.logInfo("[FFMPEG_WASM] Blob URLs created. Loading FFmpeg instance with worker..."),await e.load({coreURL:o,wasmURL:u,workerURL:c}),t.logInfo("[FFMPEG_WASM] FFmpeg.wasm instance loaded successfully via Blob URLs (worker enabled)."),e}catch(r){return t.logError("[FFMPEG_WASM] Failed to load FFmpeg.wasm instance via Blob URLs",r),null}}const A=B.create("FFmpegManager",X.Debug),Rt=Math.max(1,Math.min(Number(v("maxConcurrentTrackDownloads"))||2,10)),ce=Rt;A.logInfo(`FFmpegManager initialized with MAX_CONCURRENT_OPERATIONS: ${ce}`);const W=[],ue=[];let j=!1,q=null;async function Le(){return j?Promise.resolve():q||(A.logInfo(`Initializing FFmpeg instance pool with size: ${ce}`),q=(async()=>{try{const a=[];for(let e=0;e<ce;e++)a.push(Pe(e));const t=await Promise.all(a);for(let e=0;e<t.length;e++){const r=t[e];r?W.push({id:e,instance:r,isAvailable:!0,isCompromised:!1}):A.logError(`Failed to load FFmpeg instance ${e} for the pool.`)}if(W.length===0&&ce>0)throw new Error("No FFmpeg instances could be initialized for the pool.");j=!0,A.logInfo(`FFmpeg instance pool initialized with ${W.length} instances.`)}catch(a){throw A.logError("Failed to initialize FFmpeg pool",a),j=!1,q=null,a}})(),q)}async function kt(a,t){const{instance:e,id:r}=a,{taskId:s,inputBuffer:i,fileExtension:n,progressCallback:o,resolve:u,reject:c}=t,f=`input_${s}_${r}.${n||"mp4"}`,p=`output_remuxed_${s}_${r}.${n||"mp4"}`;A.logInfo(`[FFmpegManager] Instance ${r} starting remux for task ${s}: ${f} -> ${p}`);let b;try{let D;try{A.logDebug(`[FFmpegManager] Instance ${r}, Task ${s}: Attempting inputBuffer.slice(0). Input buffer byteLength: ${i?.byteLength}`);const $=i.slice(0);A.logDebug(`[FFmpegManager] Instance ${r}, Task ${s}: Successfully sliced buffer. Slice byteLength: ${$?.byteLength}. Attempting new Uint8Array().`),D=new Uint8Array($),A.logDebug(`[FFmpegManager] Instance ${r}, Task ${s}: Created Uint8Array with byteLength: ${D?.byteLength}. About to call instance.writeFile with ${f}.`)}catch($){throw A.logError(`[FFmpegManager] Instance ${r}, Task ${s}: ERROR during buffer slice or Uint8Array creation:`,$),$}await e.writeFile(f,D),A.logDebug(`[FFmpegManager] Instance ${r}, Task ${s}: Successfully called instance.writeFile with ${f}.`);const y=["-loglevel","debug","-i",f,"-c","copy",p];if(A.logDebug(`[FFmpegManager] Instance ${r}, Task ${s}: FFmpeg exec arguments:`,y),o){let $=-1;b=({progress:S})=>{const g=Math.round(S*100);g>$&&g<=100&&(o(g),$=g)},e.on("progress",b)}await e.exec(y);const l=await e.readFile(p);if(typeof l=="string")throw new Error("FFmpeg remux output was a string, expected Uint8Array");A.logInfo(`[FFmpegManager] Instance ${r} finished remux for task ${s}`),u(l.buffer.slice(0))}catch(D){A.logError(`[FFmpegManager] Instance ${r} FAILED remux for task ${s}`,D),a.isCompromised=!0,c(D)}finally{b&&typeof e.off=="function"&&e.off("progress",b);try{await e.deleteFile(f),await e.deleteFile(p)}catch(D){A.logWarn(`[FFmpegManager] Instance ${r} failed to cleanup files for task ${s}`,D),a.isCompromised=!0}}}function Me(){if(!j||ue.length===0)return;const a=W.find(e=>e.isAvailable);if(!a){A.logDebug("No FFmpeg instance available right now, queue length: "+ue.length);return}const t=ue.shift();t&&(a.isAvailable=!1,A.logDebug(`Assigning task ${t.taskId} to FFmpeg instance ${a.id}`),kt(a,t).finally(async()=>{if(a.isCompromised){A.logWarn(`[FFmpegManager] Instance ${a.id} is compromised. Terminating and attempting to replace.`);try{await a.instance.terminate(),A.logInfo(`[FFmpegManager] Terminated compromised instance ${a.id}.`)}catch(s){A.logError(`[FFmpegManager] Error terminating compromised instance ${a.id}:`,s)}const e=W.findIndex(s=>s.id===a.id);e>-1&&W.splice(e,1),A.logInfo(`[FFmpegManager] Attempting to create new FFmpeg instance to replace ${a.id}.`);const r=await Pe(a.id);r?(W.push({id:a.id,instance:r,isAvailable:!0,isCompromised:!1}),A.logInfo(`[FFmpegManager] Successfully replaced instance ${a.id}. Pool size: ${W.length}`)):A.logError(`[FFmpegManager] Failed to create new FFmpeg instance to replace ${a.id}. Pool size will be reduced.`)}else a.isAvailable=!0,A.logDebug(`FFmpeg instance ${a.id} is now available.`);Me()}))}async function St(a,t,e,r){return!j&&!q&&Le().catch(s=>{A.logError("FFmpeg Pool Initialization failed lazily, subsequent requests might fail.",s)}),q&&await q,!j||W.length===0?Promise.reject(new Error("FFmpegManager: Pool not initialized or no instances available after init attempt.")):new Promise((s,i)=>{A.logDebug(`Task ${a} added to FFmpeg remux queue.`),ue.push({taskId:a,inputBuffer:t,fileExtension:e,progressCallback:r,resolve:s,reject:i}),Me()})}function Ft(){!j&&!q&&Le().catch(a=>{A.logError("Pre-initialization of FFmpeg Pool failed.",a)})}function _e(a){return String(a).split("").map(t=>t.charCodeAt(0))}function K(a){return new Uint8Array(_e(a))}function V(a){const t=new ArrayBuffer(2*a.length),e=new Uint8Array(t);return new Uint16Array(t).set(_e(a)),e}function Ue(a){return[a>>>24&255,a>>>16&255,a>>>8&255,a&255]}function xe(a){return 11+a}function vt(a,t,e,r){return 11+t+1+1+(r?2+2*(e+1):e+1)+a}function Ot(a){let t=0;return a.forEach(e=>{t+=2+2*e[0].length+2+2+2*e[1].length+2}),11+t}function Nt(a,t){const e=2*t;let r=0;return a.forEach(s=>{r+=2+2*s[0].length+2+4}),18+e+2+r}class Pt{_setIntegerFrame(t,e){const r=parseInt(e,10);this.frames.push({name:t,value:r,size:xe(r.toString().length)})}_setStringFrame(t,e){const r=e.toString();let s=13+2*r.length;t==="TDAT"&&(s=xe(r.length)),this.frames.push({name:t,value:r,size:s})}_setPictureFrame(t,e,r,s){const i=function(o){if(!o||!o.length)return null;if(o[0]===255&&o[1]===216&&o[2]===255)return"image/jpeg";if(o[0]===137&&o[1]===80&&o[2]===78&&o[3]===71)return"image/png";if(o[0]===71&&o[1]===73&&o[2]===70)return"image/gif";if(o[8]===87&&o[9]===69&&o[10]===66&&o[11]===80)return"image/webp";const u=o[0]===73&&o[1]===73&&o[2]===42&&o[3]===0,c=o[0]===77&&o[1]===77&&o[2]===0&&o[3]===42;return u||c?"image/tiff":o[0]===66&&o[1]===77?"image/bmp":o[0]===0&&o[1]===0&&o[2]===1&&o[3]===0?"image/x-icon":null}(new Uint8Array(e)),n=r.toString();if(!i)throw new Error("Unknown picture MIME type");r||(s=!1),this.frames.push({name:"APIC",value:e,pictureType:t,mimeType:i,useUnicodeEncoding:s,description:n,size:vt(e.byteLength,i.length,n.length,s)})}_setLyricsFrame(t,e,r){const s=t.split("").map(c=>c.charCodeAt(0)),i=e.toString(),n=r.toString();var o,u;this.frames.push({name:"USLT",value:n,language:s,description:i,size:(o=i.length,u=n.length,16+2*o+2+2+2*u)})}_setCommentFrame(t,e,r){const s=t.split("").map(c=>c.charCodeAt(0)),i=e.toString(),n=r.toString();var o,u;this.frames.push({name:"COMM",value:n,language:s,description:i,size:(o=i.length,u=n.length,16+2*o+2+2+2*u)})}_setPrivateFrame(t,e){const r=t.toString();var s,i;this.frames.push({name:"PRIV",value:e,id:r,size:(s=r.length,i=e.byteLength,10+s+1+i)})}_setUserStringFrame(t,e){const r=t.toString(),s=e.toString();var i,n;this.frames.push({name:"TXXX",description:r,value:s,size:(i=r.length,n=s.length,13+2*i+2+2+2*n)})}_setUrlLinkFrame(t,e){const r=e.toString();var s;this.frames.push({name:t,value:r,size:(s=r.length,10+s)})}_setPairedTextFrame(t,e){this.frames.push({name:t,value:e,size:Ot(e)})}_setSynchronisedLyricsFrame(t,e,r,s,i){const n=i.toString(),o=s.split("").map(u=>u.charCodeAt(0));this.frames.push({name:"SYLT",value:e,language:o,description:n,type:t,timestampFormat:r,size:Nt(e,n.length)})}constructor(t){if(!t||typeof t!="object"||!("byteLength"in t))throw new Error("First argument should be an instance of ArrayBuffer or Buffer");this.arrayBuffer=t,this.padding=4096,this.frames=[],this.url=""}setFrame(t,e){switch(t){case"TPE1":case"TCOM":case"TCON":{if(!Array.isArray(e))throw new Error(`${t} frame value should be an array of strings`);const r=t==="TCON"?";":"/",s=e.join(r);this._setStringFrame(t,s);break}case"TLAN":case"TIT1":case"TIT2":case"TIT3":case"TALB":case"TPE2":case"TPE3":case"TPE4":case"TRCK":case"TPOS":case"TMED":case"TPUB":case"TCOP":case"TKEY":case"TEXT":case"TDAT":case"TCMP":case"TSRC":this._setStringFrame(t,e);break;case"TBPM":case"TLEN":case"TYER":this._setIntegerFrame(t,e);break;case"USLT":if(e.language=e.language||"eng",typeof e!="object"||!("description"in e)||!("lyrics"in e))throw new Error("USLT frame value should be an object with keys description and lyrics");if(e.language&&!e.language.match(/[a-z]{3}/i))throw new Error("Language must be coded following the ISO 639-2 standards");this._setLyricsFrame(e.language,e.description,e.lyrics);break;case"APIC":if(typeof e!="object"||!("type"in e)||!("data"in e)||!("description"in e))throw new Error("APIC frame value should be an object with keys type, data and description");if(e.type<0||e.type>20)throw new Error("Incorrect APIC frame picture type");this._setPictureFrame(e.type,e.data,e.description,!!e.useUnicodeEncoding);break;case"TXXX":if(typeof e!="object"||!("description"in e)||!("value"in e))throw new Error("TXXX frame value should be an object with keys description and value");this._setUserStringFrame(e.description,e.value);break;case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":this._setUrlLinkFrame(t,e);break;case"COMM":if(e.language=e.language||"eng",typeof e!="object"||!("description"in e)||!("text"in e))throw new Error("COMM frame value should be an object with keys description and text");if(e.language&&!e.language.match(/[a-z]{3}/i))throw new Error("Language must be coded following the ISO 639-2 standards");this._setCommentFrame(e.language,e.description,e.text);break;case"PRIV":if(typeof e!="object"||!("id"in e)||!("data"in e))throw new Error("PRIV frame value should be an object with keys id and data");this._setPrivateFrame(e.id,e.data);break;case"IPLS":if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("IPLS frame value should be an array of pairs");this._setPairedTextFrame(t,e);break;case"SYLT":if(typeof e!="object"||!("type"in e)||!("text"in e)||!("timestampFormat"in e))throw new Error("SYLT frame value should be an object with keys type, text and timestampFormat");if(!Array.isArray(e.text)||!Array.isArray(e.text[0]))throw new Error("SYLT frame text value should be an array of pairs");if(e.type<0||e.type>6)throw new Error("Incorrect SYLT frame content type");if(e.timestampFormat<1||e.timestampFormat>2)throw new Error("Incorrect SYLT frame time stamp format");e.language=e.language||"eng",e.description=e.description||"",this._setSynchronisedLyricsFrame(e.type,e.text,e.timestampFormat,e.language,e.description);break;default:throw new Error(`Unsupported frame ${t}`)}return this}removeTag(){if(this.arrayBuffer.byteLength<10)return;const t=new Uint8Array(this.arrayBuffer),e=t[3],r=((s=[t[6],t[7],t[8],t[9]])[0]<<21)+(s[1]<<14)+(s[2]<<7)+s[3]+10;var s,i;(i=t)[0]!==73||i[1]!==68||i[2]!==51||e<2||e>4||(this.arrayBuffer=new Uint8Array(t.subarray(r)).buffer)}addTag(){this.removeTag();const t=[255,254],e=10+this.frames.reduce((o,u)=>o+u.size,0)+this.padding,r=new ArrayBuffer(this.arrayBuffer.byteLength+e),s=new Uint8Array(r);let i=0,n=[];return n=[73,68,51,3],s.set(n,i),i+=n.length,i++,i++,n=function(o){return[o>>>21&127,o>>>14&127,o>>>7&127,o&127]}(e-10),s.set(n,i),i+=n.length,this.frames.forEach(o=>{switch(n=K(o.name),s.set(n,i),i+=n.length,n=Ue(o.size-10),s.set(n,i),i+=n.length,i+=2,o.name){case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":n=K(o.value),s.set(n,i),i+=n.length;break;case"TPE1":case"TCOM":case"TCON":case"TLAN":case"TIT1":case"TIT2":case"TIT3":case"TALB":case"TPE2":case"TPE3":case"TPE4":case"TRCK":case"TPOS":case"TKEY":case"TMED":case"TPUB":case"TCOP":case"TEXT":case"TSRC":n=[1].concat(t),s.set(n,i),i+=n.length,n=V(o.value),s.set(n,i),i+=n.length;break;case"TXXX":case"USLT":case"COMM":n=[1],o.name!=="USLT"&&o.name!=="COMM"||(n=n.concat(o.language)),n=n.concat(t),s.set(n,i),i+=n.length,n=V(o.description),s.set(n,i),i+=n.length,n=[0,0].concat(t),s.set(n,i),i+=n.length,n=V(o.value),s.set(n,i),i+=n.length;break;case"TBPM":case"TLEN":case"TDAT":case"TYER":i++,n=K(o.value),s.set(n,i),i+=n.length;break;case"PRIV":n=K(o.id),s.set(n,i),i+=n.length,i++,s.set(new Uint8Array(o.value),i),i+=o.value.byteLength;break;case"APIC":n=[o.useUnicodeEncoding?1:0],s.set(n,i),i+=n.length,n=K(o.mimeType),s.set(n,i),i+=n.length,n=[0,o.pictureType],s.set(n,i),i+=n.length,o.useUnicodeEncoding?(n=[].concat(t),s.set(n,i),i+=n.length,n=V(o.description),s.set(n,i),i+=n.length,i+=2):(n=K(o.description),s.set(n,i),i+=n.length,i++),s.set(new Uint8Array(o.value),i),i+=o.value.byteLength;break;case"IPLS":n=[1],s.set(n,i),i+=n.length,o.value.forEach(u=>{n=[].concat(t),s.set(n,i),i+=n.length,n=V(u[0].toString()),s.set(n,i),i+=n.length,n=[0,0].concat(t),s.set(n,i),i+=n.length,n=V(u[1].toString()),s.set(n,i),i+=n.length,n=[0,0],s.set(n,i),i+=n.length});break;case"SYLT":n=[1].concat(o.language).concat(o.timestampFormat).concat(o.type),s.set(n,i),i+=n.length,n=[].concat(t),s.set(n,i),i+=n.length,n=V(o.description),s.set(n,i),i+=n.length,i+=2,o.value.forEach(u=>{n=[].concat(t),s.set(n,i),i+=n.length,n=V(u[0].toString()),s.set(n,i),i+=n.length,n=[0,0],s.set(n,i),i+=n.length,n=Ue(u[1]),s.set(n,i),i+=n.length})}}),i+=this.padding,s.set(new Uint8Array(this.arrayBuffer),i),this.arrayBuffer=r,r}getBlob(){return new Blob([this.arrayBuffer],{type:"audio/mpeg"})}getURL(){return this.url||(this.url=URL.createObjectURL(this.getBlob())),this.url}revokeURL(){URL.revokeObjectURL(this.url)}}class Lt{writer;constructor(t){this.writer=new Pt(t)}setTitle(t){if(!t)throw new Error("Invalid value for title");this.writer.setFrame("TIT2",t)}setArtists(t){if(!t||t.length<1)throw new Error("Invalid value for artists");this.writer.setFrame("TPE1",t)}setAlbum(t){if(!t)throw new Error("Invalid value for album");this.writer.setFrame("TALB",t)}setComment(t){if(!t)throw new Error("Invalid value for comment");this.writer.setFrame("COMM",{text:t,description:""})}setTrackNumber(t){if(t<1||t>32767)throw new Error("Invalid value for trackNumber");this.writer.setFrame("TRCK",t.toString())}setYear(t){if(t<1)throw new Error("Invalud value for year");this.writer.setFrame("TYER",t)}setGrouping(t){if(!t)throw new Error("Invalid value for grouping");this.writer.setFrame("TIT1",t)}setArtwork(t){if(!t||t.byteLength<1)throw new Error("Invalid value for artworkBuffer");this.writer.setFrame("APIC",{type:3,data:t,description:""})}getBuffer(){return this.writer.addTag(),this.writer.getBlob().arrayBuffer().then(t=>({buffer:t,tagsApplied:!0}))}}const H=8,Ce=16,Be=H+Ce;class Mt{_metadataPath=["moov","udta","meta","ilst"];_buffer;_bufferView;_atoms=[];_loggedErrors=new Set;_hasValidStructure=!1;_logger;get hasValidMp4Structure(){return this._hasValidStructure}_logError(t){this._loggedErrors.has(t)||(this._logger.logDebug(`MP4 metadata: ${t}`),this._loggedErrors.add(t))}constructor(t){this._buffer=t,this._bufferView=new DataView(t),this._logger=B.create("MP4TagWriterInternals",X.Debug)}parse(){if(!this._buffer)throw new Error("Buffer can not be null");if(this._atoms.length>0)throw new Error("Buffer already parsed");this._logger.logDebug("Starting MP4 parse...");let t=0,e,r=[];for(;;){if(e=this._readAtom(t),!e||e.length<1||t>=this._buffer.byteLength){t<this._buffer.byteLength?this._logger.logDebug(`Parsing stopped: _readAtom returned invalid atom or zero length at offset ${t}.`):this._logger.logDebug(`Parsing stopped: Reached end of buffer at offset ${t}.`);break}if(r.push({name:e.name||"undefined",length:e.length,offset:e.offset}),this._atoms.push(e),t=e.offset+e.length,t<=e.offset){this._logger.logError(`Parsing stopped: Invalid offset progression. Current offset ${e.offset}, next offset calculated as ${t}.`);break}}if(this._logger.logDebug(`Finished MP4 parse. Found ${this._atoms.length} top-level atoms.`),this._logger.logDebug(`Top-level atoms summary: ${JSON.stringify(r)}`),this._atoms.length<1){this._logError("Buffer could not be parsed - no valid top-level atoms found."),this._hasValidStructure=!1;return}const s=this._atoms.find(i=>i.name?.toLowerCase()==="moov");this._hasValidStructure=!!s,this._hasValidStructure?this._logger.logDebug("File structure check passed: Found top-level 'moov' atom (case-insensitive check)."):this._logError("File structure check failed: Did not find a top-level 'moov' atom (checked case-insensitively).")}setDuration(t){try{if(!this._hasValidStructure){this._logError("Cannot set duration - file doesn't have a valid MP4 structure");return}const e=this._findAtom(this._atoms,["moov","mvhd"]);if(!e)throw new Error("'mvhd' atom could not be found");this._bufferView.setUint32(e.offset+H+16,t)}catch(e){this._logError(`Failed to set duration: ${e.message}`)}}addMetadataAtom(t,e){try{if(!this._hasValidStructure){this._logError(`Cannot add ${t} metadata - file doesn't have a valid MP4 structure`);return}if(t.length>4||t.length<1)throw new Error(`Unsupported atom name: '${t}'`);let r;if(e instanceof ArrayBuffer)r=e;else if(typeof e=="string")r=this._getBufferFromString(e);else if(typeof e=="number")r=new ArrayBuffer(4),new DataView(r).setUint32(0,e);else throw new Error(`Unsupported data: '${e}'`);const s={name:t,length:Be+r.byteLength,data:r};this._insertAtom(s,this._metadataPath)}catch(r){this._logError(`Failed to add metadata atom '${t}': ${r.message}`)}}getBuffer(){const t=[];let e=0;for(const r of this._atoms){if(!r.children){const n=this._buffer.slice(r.offset,r.offset+r.length);t.push(n),e++;continue}r.length=H;const s=[{parent:r,offset:e,childIndex:0}];let i=0;for(;;){const{parent:n,offset:o,childIndex:u}=s[i];if(u>=n.children.length){i--,s.pop();let f=H;n.name==="meta"?(n.length+=4,f+=4):n.name==="stsd"&&(n.length+=8,f+=8),this._bufferView.setUint32(n.offset,n.length);const p=this._buffer.slice(n.offset,n.offset+f);if(t.splice(o,0,p),i<0)break;const b=s[i].parent;b.length+=n.length,s[i].childIndex++;continue}const c=n.children[u];if(c.children){c.length=H,s.push({parent:c,offset:e,childIndex:0}),i++;continue}else if(c.data){const f=this._getHeaderBufferFromAtom(c);t.push(f),t.push(c.data)}else{const f=this._buffer.slice(c.offset,c.offset+c.length);t.push(f)}e++,n.length+=c.length,s[i].childIndex++}}return this._bufferView=null,this._buffer=null,this._atoms=[],Re(t)}_insertAtom(t,e){try{if(this._logger.logDebug(`Attempting to insert atom '${t.name}' at path '${e.join(" > ")}'.`),!e||e[e.length-1]!=="ilst"){this._logError(`Cannot insert tag atom '${t.name}': Path does not end in 'ilst'.`);return}const r=this._createMetadataPath();if(!r){this._logError(`Cannot insert atom '${t.name}': Failed to find or create parent 'ilst' atom.`);return}r.children===void 0&&(r.children=this._readChildAtoms(r),this._logger.logDebug(`Loaded children for '${r.name}' in _insertAtom.`));const s=r.children.findIndex(n=>n.name===t.name);s!==-1&&(this._logger.logDebug(`Replacing existing atom '${t.name}' in '${r.name}'.`),r.children.splice(s,1));let i=r.offset+this._getAtomHeaderLength(r);if(r.children.length>0){const n=r.children[r.children.length-1];i=n.offset+n.length}t.offset=i,r.children.push(t),this._logger.logDebug(`Successfully prepared atom '${t.name}' for insertion into '${r.name}'.`)}catch(r){this._logError(`Error during _insertAtom for '${t.name}': ${r.message}`)}}_findAtom(t,e){if(!e||e.length<1)throw new Error("Path can not be empty");const r=[...e],s=r.shift(),i=t.find(n=>n.name===s);return r.length<1?i:!i||(i.children===void 0&&(i.children=this._readChildAtoms(i)),i.children.length<1)?null:this._findAtom(i.children,r)}_readChildAtoms(t){const e=[],r=t.offset+t.length;let s=t.offset+H;for(t.name==="meta"?s+=4:t.name==="stsd"&&(s+=8);!(s>=r);){const i=this._readAtom(s);if(!i||i.length<1)break;s=i.offset+i.length,e.push(i)}return e}_readAtom(t){const e=t,r=t+H,s=this._buffer.slice(e,r);if(s.byteLength<H)return{length:s.byteLength,offset:t};const i=new DataView(s);let n=i.getUint32(0,!1),o="";for(let u=0;u<4;u++)o+=String.fromCharCode(i.getUint8(4+u));return{name:o,length:n,offset:t}}_getHeaderBufferFromAtom(t){if(!t||t.length<1||!t.name||!t.data)throw new Error("Can not compute header buffer for this atom");const e=new ArrayBuffer(Be),r=new DataView(e);r.setUint32(0,t.length);const s=this._getCharCodes(t.name);for(let n=0;n<s.length;n++)r.setUint8(4+n,s[n]);r.setUint32(8,Ce+t.data.byteLength);const i=this._getCharCodes("data");for(let n=0;n<i.length;n++)r.setUint8(12+n,i[n]);return r.setUint32(16,this._getFlags(t.name)),e}_getBufferFromString(t){const e=new ArrayBuffer(t.length),r=new DataView(e),s=this._getCharCodes(t);for(let i=0;i<s.length;i++)r.setUint8(i,s[i]);return e}_getCharCodes(t){const e=[];for(let r=0;r<t.length;r++)e.push(t.charCodeAt(r));return e}_getFlags(t){switch(t){case"covr":return 13;case"trkn":case"disk":return 0;case"tmpo":case"cpil":case"rtng":return 21;default:return 1}}_createMetadataPath(){try{this._logger.logDebug("Attempting to ensure metadata path moov > udta > meta > ilst exists.");const t=this._findAtom(this._atoms,["moov"]);if(!t)return this._logError("Cannot create metadata path: Required 'moov' atom not found."),null;t.children===void 0&&(t.children=this._readChildAtoms(t));let e=t;const r=["udta","meta","ilst"];for(const s of r){let i=this._findAtom(e.children,[s]);if(i)this._logger.logDebug(`Found existing '${s}' atom.`),i.children===void 0&&(i.children=this._readChildAtoms(i));else{this._logger.logDebug(`Creating missing '${s}' atom.`);let n=e.offset+this._getAtomHeaderLength(e);if(e.children.length>0){const u=e.children[e.children.length-1];n=u.offset+u.length}const o=this._getAtomHeaderLength({name:s});i={name:s,length:o,offset:n,children:[]},e.children.push(i),this._logger.logDebug(`Created '${s}' atom.`)}e=i}return this._logger.logDebug("Metadata path creation/verification successful. Returning 'ilst' atom."),e}catch(t){return this._logError(`Failed during _createMetadataPath: ${t.message}`),null}}_getAtomHeaderLength(t){let e=H;return t.name==="meta"?e+=4:t.name==="stsd"&&(e+=8),e}}class R{_originalBuffer;_mp4;_hasValidMp4=!1;static _loggedErrors=new Set;static _logger=B.create("MP4TagWriter",X.Debug);static _logError(t){R._loggedErrors.has(t)||(R._logger.logDebug(`MP4 metadata: ${t}`),R._loggedErrors.add(t))}constructor(t){try{this._originalBuffer=t.slice(0),R._logger.logDebug(`Creating Mp4TagWriter with buffer of size: ${this._originalBuffer.byteLength}`);try{this._mp4=new Mt(this._originalBuffer),this._mp4.parse(),this._hasValidMp4=this._mp4.hasValidMp4Structure,this._hasValidMp4?R._logger.logDebug("MP4 structure validation passed. TagWriter ready for use."):R._logError("MP4 structure validation failed. Tags will not be applied but original audio will still be saved.")}catch(e){this._hasValidMp4=!1,R._logError(`Failed to initialize MP4 parser: ${e.message}`)}}catch(e){R._logError(`Mp4TagWriter constructor error: ${e.message}`),this._originalBuffer=new ArrayBuffer(0),this._hasValidMp4=!1}}setTitle(t){try{if(!t)throw new Error("Invalid value for title");this._mp4.addMetadataAtom("\xA9nam",t)}catch(e){R._logError(`Failed to set title: ${e.message}`)}}setArtists(t){try{if(!t||t.length<1)throw new Error("Invalid value for artists");this._mp4.addMetadataAtom("\xA9ART",t.join(", "))}catch(e){R._logError(`Failed to set artists: ${e.message}`)}}setAlbum(t){try{if(!t)throw new Error("Invalid value for album");this._mp4.addMetadataAtom("\xA9alb",t)}catch(e){R._logError(`Failed to set album: ${e.message}`)}}setComment(t){try{if(!t)throw new Error("Invalid value for comment");this._mp4.addMetadataAtom("\xA9cmt",t)}catch(e){R._logError(`Failed to set comment: ${e.message}`)}}setTrackNumber(t){try{if(t<1||t>32767)throw new Error("Invalid value for trackNumber");this._mp4.addMetadataAtom("trkn",t)}catch(e){R._logError(`Failed to set track number: ${e.message}`)}}setYear(t){try{if(t<1)throw new Error("Invalid value for year");this._mp4.addMetadataAtom("\xA9day",t.toString())}catch(e){R._logError(`Failed to set year: ${e.message}`)}}setGrouping(t){try{if(!t)throw new Error("Invalid value for grouping");this._mp4.addMetadataAtom("\xA9grp",t)}catch(e){R._logError(`Failed to set grouping: ${e.message}`)}}setArtwork(t){try{if(!t||t.byteLength<1)throw new Error("Invalid value for artworkBuffer");this._mp4.addMetadataAtom("covr",t)}catch(e){R._logError(`Failed to set artwork: ${e.message}`)}}setDuration(t){try{if(t<1)throw new Error("Invalid value for duration");this._mp4.setDuration(t)}catch(e){R._logError(`Failed to set duration: ${e.message}`)}}getBuffer(){try{if(!this._originalBuffer||this._originalBuffer.byteLength===0)throw new Error("Original buffer is missing or empty");if(!this._mp4||!this._hasValidMp4)return R._logError("MP4 structure check failed. Returning original buffer without applying tags."),Promise.resolve({buffer:this._originalBuffer.slice(0),tagsApplied:!1,message:"Invalid MP4 structure for tagging."});let t;try{if(t=this._mp4.getBuffer(),!t||t.byteLength===0)throw new Error("Processed buffer is empty or null");t=t.slice(0)}catch(s){return R._logError(`Failed to get processed buffer: ${s.message}`),Promise.resolve({buffer:this._originalBuffer.slice(0),tagsApplied:!1,message:`Failed to process MP4 buffer: ${s.message}`})}let e=!0,r;return t.byteLength!==this._originalBuffer.byteLength&&(e=!0,r=`Successfully applied tags (original: ${this._originalBuffer.byteLength}, new: ${t.byteLength})`),Promise.resolve({buffer:t,tagsApplied:e,message:r})}catch(t){const e=`Failed to get processed buffer: ${t.message}. Using original buffer as fallback.`;R._logError(e);try{return Promise.resolve({buffer:this._originalBuffer.slice(0),tagsApplied:!1,message:e})}catch(r){return R._logError(`CRITICAL: Failed to create copy of original buffer: ${r.message}`),Promise.resolve({buffer:new ArrayBuffer(0),tagsApplied:!1,message:`CRITICAL ERROR: ${e} + ${r.message}`})}}}}function _t(a){if(typeof a!="string")throw new TypeError("Expected a string");return a.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}var pe=(a=>(a[a.Main=0]="Main",a[a.Feature=1]="Feature",a[a.Remixer=2]="Remixer",a[a.Producer=3]="Producer",a))(pe||{}),we=(a=>(a[a.Remix=0]="Remix",a[a.Flip=1]="Flip",a[a.Bootleg=2]="Bootleg",a[a.Mashup=3]="Mashup",a[a.Edit=4]="Edit",a))(we||{});function Ut(a){switch(a.toLowerCase().trim()){case"flip":return 1;case"bootleg":return 2;case"mashup":return 3;case"edit":return 4;case"remix":default:return 0}}function xt(a,t){return a.map((e,r)=>({data:e,index:r})).sort((e,r)=>e.data[t]<r.data[t]?-1:e.data[t]>r.data[t]?1:e.index-r.index).map(e=>e.data)}class _{constructor(t,e,r){this.title=t,this.username=e,this.userPermalink=r}static titleSeparators=["-","\u2013","\u2014","~"];static featureSeparators=["featuring","feat.","feat","ft."," ft ","w/"," w /"," w ","+"];static combiningFeatureSeparators=[..._.featureSeparators,", "," & "," x "];static remixIndicators=["remix","flip","bootleg","mashup","edit"];static producerIndicators=["prod. by ","prod by ","prod. ","p. ","prod "];static promotions=["free download","video in description","video in desc","vid in desc","Original Mix"];getArtists(){const t=this.preprocessTitle(this.title);let e=[];const r=this.splitByTitleSeparators(t,!0);e=e.concat(r.artistNames.map((c,f)=>({name:c,type:f===0?0:1})));const s=this.splitByProducer(r.title,!0);e=e.concat(s.artistNames.map(c=>({name:c,type:3})));const i=this.splitByRemix(s.title,!0);e=e.concat(i.artists);const n=this.splitByUnsafeProducers(i.title,!0);e=e.concat(n.artistNames.map(c=>({name:c,type:3})));const o=this.splitByFeatures(i.title,!0);if(e=e.concat(o.artistNames.map(c=>({name:c,type:1}))),!e.some(c=>c.type===0)){const c={name:this.sanitizeArtistName(this.username)||this.userPermalink,type:0};c.name&&(e.length>0?e=[c,...e]:e.push(c))}e=e.map(c=>this.removeTwitterHandle(c));const u=[];for(const c of e)u.some(f=>f.name==c.name)||u.push(c);return xt(u,"type")}getTitle(){let t=this.preprocessTitle(this.title);return t=this.splitByTitleSeparators(t,!1).title,t=this.splitByProducer(t,!1).title,t=this.splitByRemix(t,!1).title,t=this.splitByFeatures(t,!1).title,t=this.splitByUnsafeProducers(t,!1).title,this.sanitizeTitle(t)}removeTwitterHandle(t){t.name=t.name.replace(/^[@]+/,"");const e=/^([^(]+)\s?\(\s?@.+\)?$/.exec(t.name);return e&&e.length>1&&(t.name=e[1].trimEnd()),t}splitByTitleSeparators(t,e){let r=[];if(this.includes(t,_.titleSeparators)){const s=this.escapeRegexArray(_.titleSeparators),i=new RegExp(`^((.+)\\s[${s}]\\s)(.+)$`).exec(t);if(i&&i.length>0){const[n,o,u]=i;e&&(r=this.getArtistNames(u)),t=t.replace(o,"")}}return{artistNames:r,title:t}}splitByFeatures(t,e){let r=[];if(this.includes(t,_.featureSeparators)){const s=this.escapeRegexArray(_.featureSeparators).join("|"),i=new RegExp(`(?:${s})([^\\[\\]\\(\\)]+)`,"i").exec(t);if(i&&i.length>0){const[n,o]=i;e&&(r=this.getArtistNames(o)),t=t.replace(n,"")}}return{artistNames:r,title:t}}splitByProducer(t,e){let r=[];if(this.includes(t,_.producerIndicators)){const s=this.escapeRegexArray(_.producerIndicators).join("|"),i=new RegExp(`(?:${s})([^\\[\\]\\(\\)]+)`,"i").exec(t);if(i&&i.length>0){const[n,o]=i;e&&(r=this.getArtistNames(o)),t=t.replace(n,"")}}return{artistNames:r,title:t}}splitByUnsafeProducers(t,e){let r=[];const s=this.escapeRegexArray(_.featureSeparators).join("|"),i=new RegExp(`[\\(\\[](?!${s})(.+)[\\)\\]]`,"i").exec(t);if(i&&i.length>0){const[n,o]=i;e&&(r=this.getArtistNames(o)),t=t.replace(n,"")}return{artistNames:r,title:t}}splitByRemix(t,e){let r=[];if(this.includes(t,_.remixIndicators)){const s=this.escapeRegexArray(_.remixIndicators).join("|"),i=new RegExp(`[\\[\\(](.+)(${s})[\\]\\)]`,"i").exec(t);if(i&&i.length>0){const[n,o,u]=i;if(e){const c=this.getArtistNames(o),f=Ut(u);r=c.map(p=>({name:p,type:2,remixType:f}))}t=t.replace(n,"")}}return{artists:r,title:t}}getArtistNames(t){const e=this.escapeRegexArray(_.combiningFeatureSeparators).join("|"),r=new RegExp(`(.+)\\s?(${e})\\s?(.+)`,"i"),s=[];for(;;){const i=r.exec(t);if(!i){s.push(this.sanitizeArtistName(t));break}s.push(this.sanitizeArtistName(i[3])),t=i[1]}return s.reverse()}preprocessTitle(t){t=t.replace(/\+([+]+)/g,"+");const e=_.promotions.join("|"),r=new RegExp(`[\\[\\(]?\\s*(${e})\\s*[\\]\\)]?`,"i");return t.replace(r,"")}sanitizeArtistName(t){return this.removeNonAsciiCharacters(t).trim()}sanitizeTitle(t){let e=this.removeNonAsciiCharacters(t);return e=e.replace("()","").replace("[]",""),e.trim()}removeNonAsciiCharacters(t){return ke.replace(t,ke("[^\\p{L}\\p{N}\\p{Zs}\0-\x7F]","g"),"")}includes(t,e){const r=t.toLowerCase();return e.some(s=>r.includes(s))}escapeRegexArray(t){return t.map(e=>_t(e))}}var Ee=function(){function a(){this.listeners={}}var t=a.prototype;return t.on=function(e,r){this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push(r)},t.off=function(e,r){if(!this.listeners[e])return!1;var s=this.listeners[e].indexOf(r);return this.listeners[e]=this.listeners[e].slice(0),this.listeners[e].splice(s,1),s>-1},t.trigger=function(e){var r=this.listeners[e];if(r)if(arguments.length===2)for(var s=r.length,i=0;i<s;++i)r[i].call(this,arguments[1]);else for(var n=Array.prototype.slice.call(arguments,1),o=r.length,u=0;u<o;++u)r[u].apply(this,n)},t.dispose=function(){this.listeners={}},t.pipe=function(e){this.on("data",function(r){e.push(r)})},a}();function J(){return J=Object.assign?Object.assign.bind():function(a){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)({}).hasOwnProperty.call(e,r)&&(a[r]=e[r])}return a},J.apply(null,arguments)}var be,Xe;function Ct(){if(Xe)return be;Xe=1;var a;return typeof window<"u"?a=window:typeof Se<"u"?a=Se:typeof self<"u"?a=self:a={},be=a,be}var Bt=Ct();const We=ct(Bt);var Xt=function(a){return We.atob?We.atob(a):Buffer.from(a,"base64").toString("binary")};function Wt(a){for(var t=Xt(a),e=new Uint8Array(t.length),r=0;r<t.length;r++)e[r]=t.charCodeAt(r);return e}/*! @name m3u8-parser @version 7.2.0 @license Apache-2.0 */class Ht extends Ee{constructor(){super(),this.buffer=""}push(t){let e;for(this.buffer+=t,e=this.buffer.indexOf(`
`);e>-1;e=this.buffer.indexOf(`
`))this.trigger("data",this.buffer.substring(0,e)),this.buffer=this.buffer.substring(e+1)}}const Gt="	",ye=function(a){const t=/([0-9.]*)?@?([0-9.]*)?/.exec(a||""),e={};return t[1]&&(e.length=parseInt(t[1],10)),t[2]&&(e.offset=parseInt(t[2],10)),e},qt=function(){const a='(?:[^=]*)=(?:"[^"]*"|[^,]*)';return new RegExp("(?:^|,)("+a+")")},L=function(a){const t={};if(!a)return t;const e=a.split(qt());let r=e.length,s;for(;r--;)e[r]!==""&&(s=/([^=]*)=(.*)/.exec(e[r]).slice(1),s[0]=s[0].replace(/^\s+|\s+$/g,""),s[1]=s[1].replace(/^\s+|\s+$/g,""),s[1]=s[1].replace(/^['"](.*)['"]$/g,"$1"),t[s[0]]=s[1]);return t},He=a=>{const t=a.split("x"),e={};return t[0]&&(e.width=parseInt(t[0],10)),t[1]&&(e.height=parseInt(t[1],10)),e};class Vt extends Ee{constructor(){super(),this.customParsers=[],this.tagMappers=[]}push(t){let e,r;if(t=t.trim(),t.length!==0){if(t[0]!=="#"){this.trigger("data",{type:"uri",uri:t});return}this.tagMappers.reduce((s,i)=>{const n=i(t);return n===t?s:s.concat([n])},[t]).forEach(s=>{for(let i=0;i<this.customParsers.length;i++)if(this.customParsers[i].call(this,s))return;if(s.indexOf("#EXT")!==0){this.trigger("data",{type:"comment",text:s.slice(1)});return}if(s=s.replace("\r",""),e=/^#EXTM3U/.exec(s),e){this.trigger("data",{type:"tag",tagType:"m3u"});return}if(e=/^#EXTINF:([0-9\.]*)?,?(.*)?$/.exec(s),e){r={type:"tag",tagType:"inf"},e[1]&&(r.duration=parseFloat(e[1])),e[2]&&(r.title=e[2]),this.trigger("data",r);return}if(e=/^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(s),e){r={type:"tag",tagType:"targetduration"},e[1]&&(r.duration=parseInt(e[1],10)),this.trigger("data",r);return}if(e=/^#EXT-X-VERSION:([0-9.]*)?/.exec(s),e){r={type:"tag",tagType:"version"},e[1]&&(r.version=parseInt(e[1],10)),this.trigger("data",r);return}if(e=/^#EXT-X-MEDIA-SEQUENCE:(\-?[0-9.]*)?/.exec(s),e){r={type:"tag",tagType:"media-sequence"},e[1]&&(r.number=parseInt(e[1],10)),this.trigger("data",r);return}if(e=/^#EXT-X-DISCONTINUITY-SEQUENCE:(\-?[0-9.]*)?/.exec(s),e){r={type:"tag",tagType:"discontinuity-sequence"},e[1]&&(r.number=parseInt(e[1],10)),this.trigger("data",r);return}if(e=/^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(s),e){r={type:"tag",tagType:"playlist-type"},e[1]&&(r.playlistType=e[1]),this.trigger("data",r);return}if(e=/^#EXT-X-BYTERANGE:(.*)?$/.exec(s),e){r=J(ye(e[1]),{type:"tag",tagType:"byterange"}),this.trigger("data",r);return}if(e=/^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(s),e){r={type:"tag",tagType:"allow-cache"},e[1]&&(r.allowed=!/NO/.test(e[1])),this.trigger("data",r);return}if(e=/^#EXT-X-MAP:(.*)$/.exec(s),e){if(r={type:"tag",tagType:"map"},e[1]){const i=L(e[1]);i.URI&&(r.uri=i.URI),i.BYTERANGE&&(r.byterange=ye(i.BYTERANGE))}this.trigger("data",r);return}if(e=/^#EXT-X-STREAM-INF:(.*)$/.exec(s),e){r={type:"tag",tagType:"stream-inf"},e[1]&&(r.attributes=L(e[1]),r.attributes.RESOLUTION&&(r.attributes.RESOLUTION=He(r.attributes.RESOLUTION)),r.attributes.BANDWIDTH&&(r.attributes.BANDWIDTH=parseInt(r.attributes.BANDWIDTH,10)),r.attributes["FRAME-RATE"]&&(r.attributes["FRAME-RATE"]=parseFloat(r.attributes["FRAME-RATE"])),r.attributes["PROGRAM-ID"]&&(r.attributes["PROGRAM-ID"]=parseInt(r.attributes["PROGRAM-ID"],10))),this.trigger("data",r);return}if(e=/^#EXT-X-MEDIA:(.*)$/.exec(s),e){r={type:"tag",tagType:"media"},e[1]&&(r.attributes=L(e[1])),this.trigger("data",r);return}if(e=/^#EXT-X-ENDLIST/.exec(s),e){this.trigger("data",{type:"tag",tagType:"endlist"});return}if(e=/^#EXT-X-DISCONTINUITY/.exec(s),e){this.trigger("data",{type:"tag",tagType:"discontinuity"});return}if(e=/^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(s),e){r={type:"tag",tagType:"program-date-time"},e[1]&&(r.dateTimeString=e[1],r.dateTimeObject=new Date(e[1])),this.trigger("data",r);return}if(e=/^#EXT-X-KEY:(.*)$/.exec(s),e){r={type:"tag",tagType:"key"},e[1]&&(r.attributes=L(e[1]),r.attributes.IV&&(r.attributes.IV.substring(0,2).toLowerCase()==="0x"&&(r.attributes.IV=r.attributes.IV.substring(2)),r.attributes.IV=r.attributes.IV.match(/.{8}/g),r.attributes.IV[0]=parseInt(r.attributes.IV[0],16),r.attributes.IV[1]=parseInt(r.attributes.IV[1],16),r.attributes.IV[2]=parseInt(r.attributes.IV[2],16),r.attributes.IV[3]=parseInt(r.attributes.IV[3],16),r.attributes.IV=new Uint32Array(r.attributes.IV))),this.trigger("data",r);return}if(e=/^#EXT-X-START:(.*)$/.exec(s),e){r={type:"tag",tagType:"start"},e[1]&&(r.attributes=L(e[1]),r.attributes["TIME-OFFSET"]=parseFloat(r.attributes["TIME-OFFSET"]),r.attributes.PRECISE=/YES/.test(r.attributes.PRECISE)),this.trigger("data",r);return}if(e=/^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(s),e){r={type:"tag",tagType:"cue-out-cont"},e[1]?r.data=e[1]:r.data="",this.trigger("data",r);return}if(e=/^#EXT-X-CUE-OUT:(.*)?$/.exec(s),e){r={type:"tag",tagType:"cue-out"},e[1]?r.data=e[1]:r.data="",this.trigger("data",r);return}if(e=/^#EXT-X-CUE-IN:?(.*)?$/.exec(s),e){r={type:"tag",tagType:"cue-in"},e[1]?r.data=e[1]:r.data="",this.trigger("data",r);return}if(e=/^#EXT-X-SKIP:(.*)$/.exec(s),e&&e[1]){r={type:"tag",tagType:"skip"},r.attributes=L(e[1]),r.attributes.hasOwnProperty("SKIPPED-SEGMENTS")&&(r.attributes["SKIPPED-SEGMENTS"]=parseInt(r.attributes["SKIPPED-SEGMENTS"],10)),r.attributes.hasOwnProperty("RECENTLY-REMOVED-DATERANGES")&&(r.attributes["RECENTLY-REMOVED-DATERANGES"]=r.attributes["RECENTLY-REMOVED-DATERANGES"].split(Gt)),this.trigger("data",r);return}if(e=/^#EXT-X-PART:(.*)$/.exec(s),e&&e[1]){r={type:"tag",tagType:"part"},r.attributes=L(e[1]),["DURATION"].forEach(function(i){r.attributes.hasOwnProperty(i)&&(r.attributes[i]=parseFloat(r.attributes[i]))}),["INDEPENDENT","GAP"].forEach(function(i){r.attributes.hasOwnProperty(i)&&(r.attributes[i]=/YES/.test(r.attributes[i]))}),r.attributes.hasOwnProperty("BYTERANGE")&&(r.attributes.byterange=ye(r.attributes.BYTERANGE)),this.trigger("data",r);return}if(e=/^#EXT-X-SERVER-CONTROL:(.*)$/.exec(s),e&&e[1]){r={type:"tag",tagType:"server-control"},r.attributes=L(e[1]),["CAN-SKIP-UNTIL","PART-HOLD-BACK","HOLD-BACK"].forEach(function(i){r.attributes.hasOwnProperty(i)&&(r.attributes[i]=parseFloat(r.attributes[i]))}),["CAN-SKIP-DATERANGES","CAN-BLOCK-RELOAD"].forEach(function(i){r.attributes.hasOwnProperty(i)&&(r.attributes[i]=/YES/.test(r.attributes[i]))}),this.trigger("data",r);return}if(e=/^#EXT-X-PART-INF:(.*)$/.exec(s),e&&e[1]){r={type:"tag",tagType:"part-inf"},r.attributes=L(e[1]),["PART-TARGET"].forEach(function(i){r.attributes.hasOwnProperty(i)&&(r.attributes[i]=parseFloat(r.attributes[i]))}),this.trigger("data",r);return}if(e=/^#EXT-X-PRELOAD-HINT:(.*)$/.exec(s),e&&e[1]){r={type:"tag",tagType:"preload-hint"},r.attributes=L(e[1]),["BYTERANGE-START","BYTERANGE-LENGTH"].forEach(function(i){if(r.attributes.hasOwnProperty(i)){r.attributes[i]=parseInt(r.attributes[i],10);const n=i==="BYTERANGE-LENGTH"?"length":"offset";r.attributes.byterange=r.attributes.byterange||{},r.attributes.byterange[n]=r.attributes[i],delete r.attributes[i]}}),this.trigger("data",r);return}if(e=/^#EXT-X-RENDITION-REPORT:(.*)$/.exec(s),e&&e[1]){r={type:"tag",tagType:"rendition-report"},r.attributes=L(e[1]),["LAST-MSN","LAST-PART"].forEach(function(i){r.attributes.hasOwnProperty(i)&&(r.attributes[i]=parseInt(r.attributes[i],10))}),this.trigger("data",r);return}if(e=/^#EXT-X-DATERANGE:(.*)$/.exec(s),e&&e[1]){r={type:"tag",tagType:"daterange"},r.attributes=L(e[1]),["ID","CLASS"].forEach(function(n){r.attributes.hasOwnProperty(n)&&(r.attributes[n]=String(r.attributes[n]))}),["START-DATE","END-DATE"].forEach(function(n){r.attributes.hasOwnProperty(n)&&(r.attributes[n]=new Date(r.attributes[n]))}),["DURATION","PLANNED-DURATION"].forEach(function(n){r.attributes.hasOwnProperty(n)&&(r.attributes[n]=parseFloat(r.attributes[n]))}),["END-ON-NEXT"].forEach(function(n){r.attributes.hasOwnProperty(n)&&(r.attributes[n]=/YES/i.test(r.attributes[n]))}),["SCTE35-CMD"," SCTE35-OUT","SCTE35-IN"].forEach(function(n){r.attributes.hasOwnProperty(n)&&(r.attributes[n]=r.attributes[n].toString(16))});const i=/^X-([A-Z]+-)+[A-Z]+$/;for(const n in r.attributes){if(!i.test(n))continue;const o=/[0-9A-Fa-f]{6}/g.test(r.attributes[n]),u=/^\d+(\.\d+)?$/.test(r.attributes[n]);r.attributes[n]=o?r.attributes[n].toString(16):u?parseFloat(r.attributes[n]):String(r.attributes[n])}this.trigger("data",r);return}if(e=/^#EXT-X-INDEPENDENT-SEGMENTS/.exec(s),e){this.trigger("data",{type:"tag",tagType:"independent-segments"});return}if(e=/^#EXT-X-I-FRAMES-ONLY/.exec(s),e){this.trigger("data",{type:"tag",tagType:"i-frames-only"});return}if(e=/^#EXT-X-CONTENT-STEERING:(.*)$/.exec(s),e){r={type:"tag",tagType:"content-steering"},r.attributes=L(e[1]),this.trigger("data",r);return}if(e=/^#EXT-X-I-FRAME-STREAM-INF:(.*)$/.exec(s),e){r={type:"tag",tagType:"i-frame-playlist"},r.attributes=L(e[1]),r.attributes.URI&&(r.uri=r.attributes.URI),r.attributes.BANDWIDTH&&(r.attributes.BANDWIDTH=parseInt(r.attributes.BANDWIDTH,10)),r.attributes.RESOLUTION&&(r.attributes.RESOLUTION=He(r.attributes.RESOLUTION)),r.attributes["AVERAGE-BANDWIDTH"]&&(r.attributes["AVERAGE-BANDWIDTH"]=parseInt(r.attributes["AVERAGE-BANDWIDTH"],10)),r.attributes["FRAME-RATE"]&&(r.attributes["FRAME-RATE"]=parseFloat(r.attributes["FRAME-RATE"])),this.trigger("data",r);return}if(e=/^#EXT-X-DEFINE:(.*)$/.exec(s),e){r={type:"tag",tagType:"define"},r.attributes=L(e[1]),this.trigger("data",r);return}this.trigger("data",{type:"tag",data:s.slice(4)})})}}addParser({expression:t,customType:e,dataParser:r,segment:s}){typeof r!="function"&&(r=i=>i),this.customParsers.push(i=>{if(t.exec(i))return this.trigger("data",{type:"custom",data:r(i),customType:e,segment:s}),!0})}addTagMapper({expression:t,map:e}){const r=s=>t.test(s)?e(s):s;this.tagMappers.push(r)}}const Yt=a=>a.toLowerCase().replace(/-(\w)/g,t=>t[1].toUpperCase()),Y=function(a){const t={};return Object.keys(a).forEach(function(e){t[Yt(e)]=a[e]}),t},Te=function(a){const{serverControl:t,targetDuration:e,partTargetDuration:r}=a;if(!t)return;const s="#EXT-X-SERVER-CONTROL",i="holdBack",n="partHoldBack",o=e&&e*3,u=r&&r*2;e&&!t.hasOwnProperty(i)&&(t[i]=o,this.trigger("info",{message:`${s} defaulting HOLD-BACK to targetDuration * 3 (${o}).`})),o&&t[i]<o&&(this.trigger("warn",{message:`${s} clamping HOLD-BACK (${t[i]}) to targetDuration * 3 (${o})`}),t[i]=o),r&&!t.hasOwnProperty(n)&&(t[n]=r*3,this.trigger("info",{message:`${s} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${t[n]}).`})),r&&t[n]<u&&(this.trigger("warn",{message:`${s} clamping PART-HOLD-BACK (${t[n]}) to partTargetDuration * 2 (${u}).`}),t[n]=u)};class jt extends Ee{constructor(t={}){super(),this.lineStream=new Ht,this.parseStream=new Vt,this.lineStream.pipe(this.parseStream),this.mainDefinitions=t.mainDefinitions||{},this.params=new URL(t.uri,"https://a.com").searchParams,this.lastProgramDateTime=null;const e=this,r=[];let s={},i,n,o=!1;const u=function(){},c={AUDIO:{},VIDEO:{},"CLOSED-CAPTIONS":{},SUBTITLES:{}},f="urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";let p=0;this.manifest={allowCache:!0,discontinuityStarts:[],dateRanges:[],iFramePlaylists:[],segments:[]};let b=0,D=0;const y={};this.on("end",()=>{s.uri||!s.parts&&!s.preloadHints||(!s.map&&i&&(s.map=i),!s.key&&n&&(s.key=n),!s.timeline&&typeof p=="number"&&(s.timeline=p),this.manifest.preloadSegment=s)}),this.parseStream.on("data",function(l){let $,S;if(e.manifest.definitions){for(const g in e.manifest.definitions)if(l.uri&&(l.uri=l.uri.replace(`{$${g}}`,e.manifest.definitions[g])),l.attributes)for(const d in l.attributes)typeof l.attributes[d]=="string"&&(l.attributes[d]=l.attributes[d].replace(`{$${g}}`,e.manifest.definitions[g]))}({tag(){({version(){l.version&&(this.manifest.version=l.version)},"allow-cache"(){this.manifest.allowCache=l.allowed,"allowed"in l||(this.trigger("info",{message:"defaulting allowCache to YES"}),this.manifest.allowCache=!0)},byterange(){const g={};"length"in l&&(s.byterange=g,g.length=l.length,"offset"in l||(l.offset=b)),"offset"in l&&(s.byterange=g,g.offset=l.offset),b=g.offset+g.length},endlist(){this.manifest.endList=!0},inf(){"mediaSequence"in this.manifest||(this.manifest.mediaSequence=0,this.trigger("info",{message:"defaulting media sequence to zero"})),"discontinuitySequence"in this.manifest||(this.manifest.discontinuitySequence=0,this.trigger("info",{message:"defaulting discontinuity sequence to zero"})),l.title&&(s.title=l.title),l.duration>0&&(s.duration=l.duration),l.duration===0&&(s.duration=.01,this.trigger("info",{message:"updating zero segment duration to a small value"})),this.manifest.segments=r},key(){if(!l.attributes){this.trigger("warn",{message:"ignoring key declaration without attribute list"});return}if(l.attributes.METHOD==="NONE"){n=null;return}if(!l.attributes.URI){this.trigger("warn",{message:"ignoring key declaration without URI"});return}if(l.attributes.KEYFORMAT==="com.apple.streamingkeydelivery"){this.manifest.contentProtection=this.manifest.contentProtection||{},this.manifest.contentProtection["com.apple.fps.1_0"]={attributes:l.attributes};return}if(l.attributes.KEYFORMAT==="com.microsoft.playready"){this.manifest.contentProtection=this.manifest.contentProtection||{},this.manifest.contentProtection["com.microsoft.playready"]={uri:l.attributes.URI};return}if(l.attributes.KEYFORMAT===f){if(["SAMPLE-AES","SAMPLE-AES-CTR","SAMPLE-AES-CENC"].indexOf(l.attributes.METHOD)===-1){this.trigger("warn",{message:"invalid key method provided for Widevine"});return}if(l.attributes.METHOD==="SAMPLE-AES-CENC"&&this.trigger("warn",{message:"SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead"}),l.attributes.URI.substring(0,23)!=="data:text/plain;base64,"){this.trigger("warn",{message:"invalid key URI provided for Widevine"});return}if(!(l.attributes.KEYID&&l.attributes.KEYID.substring(0,2)==="0x")){this.trigger("warn",{message:"invalid key ID provided for Widevine"});return}this.manifest.contentProtection=this.manifest.contentProtection||{},this.manifest.contentProtection["com.widevine.alpha"]={attributes:{schemeIdUri:l.attributes.KEYFORMAT,keyId:l.attributes.KEYID.substring(2)},pssh:Wt(l.attributes.URI.split(",")[1])};return}l.attributes.METHOD||this.trigger("warn",{message:"defaulting key method to AES-128"}),n={method:l.attributes.METHOD||"AES-128",uri:l.attributes.URI},typeof l.attributes.IV<"u"&&(n.iv=l.attributes.IV)},"media-sequence"(){if(!isFinite(l.number)){this.trigger("warn",{message:"ignoring invalid media sequence: "+l.number});return}this.manifest.mediaSequence=l.number},"discontinuity-sequence"(){if(!isFinite(l.number)){this.trigger("warn",{message:"ignoring invalid discontinuity sequence: "+l.number});return}this.manifest.discontinuitySequence=l.number,p=l.number},"playlist-type"(){if(!/VOD|EVENT/.test(l.playlistType)){this.trigger("warn",{message:"ignoring unknown playlist type: "+l.playlist});return}this.manifest.playlistType=l.playlistType},map(){i={},l.uri&&(i.uri=l.uri),l.byterange&&(i.byterange=l.byterange),n&&(i.key=n)},"stream-inf"(){if(this.manifest.playlists=r,this.manifest.mediaGroups=this.manifest.mediaGroups||c,!l.attributes){this.trigger("warn",{message:"ignoring empty stream-inf attributes"});return}s.attributes||(s.attributes={}),J(s.attributes,l.attributes)},media(){if(this.manifest.mediaGroups=this.manifest.mediaGroups||c,!(l.attributes&&l.attributes.TYPE&&l.attributes["GROUP-ID"]&&l.attributes.NAME)){this.trigger("warn",{message:"ignoring incomplete or missing media group"});return}const g=this.manifest.mediaGroups[l.attributes.TYPE];g[l.attributes["GROUP-ID"]]=g[l.attributes["GROUP-ID"]]||{},$=g[l.attributes["GROUP-ID"]],S={default:/yes/i.test(l.attributes.DEFAULT)},S.default?S.autoselect=!0:S.autoselect=/yes/i.test(l.attributes.AUTOSELECT),l.attributes.LANGUAGE&&(S.language=l.attributes.LANGUAGE),l.attributes.URI&&(S.uri=l.attributes.URI),l.attributes["INSTREAM-ID"]&&(S.instreamId=l.attributes["INSTREAM-ID"]),l.attributes.CHARACTERISTICS&&(S.characteristics=l.attributes.CHARACTERISTICS),l.attributes.FORCED&&(S.forced=/yes/i.test(l.attributes.FORCED)),$[l.attributes.NAME]=S},discontinuity(){p+=1,s.discontinuity=!0,this.manifest.discontinuityStarts.push(r.length)},"program-date-time"(){typeof this.manifest.dateTimeString>"u"&&(this.manifest.dateTimeString=l.dateTimeString,this.manifest.dateTimeObject=l.dateTimeObject),s.dateTimeString=l.dateTimeString,s.dateTimeObject=l.dateTimeObject;const{lastProgramDateTime:g}=this;this.lastProgramDateTime=new Date(l.dateTimeString).getTime(),g===null&&this.manifest.segments.reduceRight((d,E)=>(E.programDateTime=d-E.duration*1e3,E.programDateTime),this.lastProgramDateTime)},targetduration(){if(!isFinite(l.duration)||l.duration<0){this.trigger("warn",{message:"ignoring invalid target duration: "+l.duration});return}this.manifest.targetDuration=l.duration,Te.call(this,this.manifest)},start(){if(!l.attributes||isNaN(l.attributes["TIME-OFFSET"])){this.trigger("warn",{message:"ignoring start declaration without appropriate attribute list"});return}this.manifest.start={timeOffset:l.attributes["TIME-OFFSET"],precise:l.attributes.PRECISE}},"cue-out"(){s.cueOut=l.data},"cue-out-cont"(){s.cueOutCont=l.data},"cue-in"(){s.cueIn=l.data},skip(){this.manifest.skip=Y(l.attributes),this.warnOnMissingAttributes_("#EXT-X-SKIP",l.attributes,["SKIPPED-SEGMENTS"])},part(){o=!0;const g=this.manifest.segments.length,d=Y(l.attributes);s.parts=s.parts||[],s.parts.push(d),d.byterange&&(d.byterange.hasOwnProperty("offset")||(d.byterange.offset=D),D=d.byterange.offset+d.byterange.length);const E=s.parts.length-1;this.warnOnMissingAttributes_(`#EXT-X-PART #${E} for segment #${g}`,l.attributes,["URI","DURATION"]),this.manifest.renditionReports&&this.manifest.renditionReports.forEach((w,I)=>{w.hasOwnProperty("lastPart")||this.trigger("warn",{message:`#EXT-X-RENDITION-REPORT #${I} lacks required attribute(s): LAST-PART`})})},"server-control"(){const g=this.manifest.serverControl=Y(l.attributes);g.hasOwnProperty("canBlockReload")||(g.canBlockReload=!1,this.trigger("info",{message:"#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false"})),Te.call(this,this.manifest),g.canSkipDateranges&&!g.hasOwnProperty("canSkipUntil")&&this.trigger("warn",{message:"#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set"})},"preload-hint"(){const g=this.manifest.segments.length,d=Y(l.attributes),E=d.type&&d.type==="PART";s.preloadHints=s.preloadHints||[],s.preloadHints.push(d),d.byterange&&(d.byterange.hasOwnProperty("offset")||(d.byterange.offset=E?D:0,E&&(D=d.byterange.offset+d.byterange.length)));const w=s.preloadHints.length-1;if(this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${w} for segment #${g}`,l.attributes,["TYPE","URI"]),!!d.type)for(let I=0;I<s.preloadHints.length-1;I++){const N=s.preloadHints[I];N.type&&N.type===d.type&&this.trigger("warn",{message:`#EXT-X-PRELOAD-HINT #${w} for segment #${g} has the same TYPE ${d.type} as preload hint #${I}`})}},"rendition-report"(){const g=Y(l.attributes);this.manifest.renditionReports=this.manifest.renditionReports||[],this.manifest.renditionReports.push(g);const d=this.manifest.renditionReports.length-1,E=["LAST-MSN","URI"];o&&E.push("LAST-PART"),this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${d}`,l.attributes,E)},"part-inf"(){this.manifest.partInf=Y(l.attributes),this.warnOnMissingAttributes_("#EXT-X-PART-INF",l.attributes,["PART-TARGET"]),this.manifest.partInf.partTarget&&(this.manifest.partTargetDuration=this.manifest.partInf.partTarget),Te.call(this,this.manifest)},daterange(){this.manifest.dateRanges.push(Y(l.attributes));const g=this.manifest.dateRanges.length-1;this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${g}`,l.attributes,["ID","START-DATE"]);const d=this.manifest.dateRanges[g];d.endDate&&d.startDate&&new Date(d.endDate)<new Date(d.startDate)&&this.trigger("warn",{message:"EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE"}),d.duration&&d.duration<0&&this.trigger("warn",{message:"EXT-X-DATERANGE DURATION must not be negative"}),d.plannedDuration&&d.plannedDuration<0&&this.trigger("warn",{message:"EXT-X-DATERANGE PLANNED-DURATION must not be negative"});const E=!!d.endOnNext;if(E&&!d.class&&this.trigger("warn",{message:"EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute"}),E&&(d.duration||d.endDate)&&this.trigger("warn",{message:"EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes"}),d.duration&&d.endDate){const w=d.startDate.getTime()+d.duration*1e3;this.manifest.dateRanges[g].endDate=new Date(w)}if(!y[d.id])y[d.id]=d;else{for(const I in y[d.id])if(d[I]&&JSON.stringify(y[d.id][I])!==JSON.stringify(d[I])){this.trigger("warn",{message:"EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values"});break}const w=this.manifest.dateRanges.findIndex(I=>I.id===d.id);this.manifest.dateRanges[w]=J(this.manifest.dateRanges[w],d),y[d.id]=J(y[d.id],d),this.manifest.dateRanges.pop()}},"independent-segments"(){this.manifest.independentSegments=!0},"i-frames-only"(){this.manifest.iFramesOnly=!0,this.requiredCompatibilityversion(this.manifest.version,4)},"content-steering"(){this.manifest.contentSteering=Y(l.attributes),this.warnOnMissingAttributes_("#EXT-X-CONTENT-STEERING",l.attributes,["SERVER-URI"])},define(){this.manifest.definitions=this.manifest.definitions||{};const g=(d,E)=>{if(d in this.manifest.definitions){this.trigger("error",{message:`EXT-X-DEFINE: Duplicate name ${d}`});return}this.manifest.definitions[d]=E};if("QUERYPARAM"in l.attributes){if("NAME"in l.attributes||"IMPORT"in l.attributes){this.trigger("error",{message:"EXT-X-DEFINE: Invalid attributes"});return}const d=this.params.get(l.attributes.QUERYPARAM);if(!d){this.trigger("error",{message:`EXT-X-DEFINE: No query param ${l.attributes.QUERYPARAM}`});return}g(l.attributes.QUERYPARAM,decodeURIComponent(d));return}if("NAME"in l.attributes){if("IMPORT"in l.attributes){this.trigger("error",{message:"EXT-X-DEFINE: Invalid attributes"});return}if(!("VALUE"in l.attributes)||typeof l.attributes.VALUE!="string"){this.trigger("error",{message:`EXT-X-DEFINE: No value for ${l.attributes.NAME}`});return}g(l.attributes.NAME,l.attributes.VALUE);return}if("IMPORT"in l.attributes){if(!this.mainDefinitions[l.attributes.IMPORT]){this.trigger("error",{message:`EXT-X-DEFINE: No value ${l.attributes.IMPORT} to import, or IMPORT used on main playlist`});return}g(l.attributes.IMPORT,this.mainDefinitions[l.attributes.IMPORT]);return}this.trigger("error",{message:"EXT-X-DEFINE: No attribute"})},"i-frame-playlist"(){this.manifest.iFramePlaylists.push({attributes:l.attributes,uri:l.uri,timeline:p}),this.warnOnMissingAttributes_("#EXT-X-I-FRAME-STREAM-INF",l.attributes,["BANDWIDTH","URI"])}}[l.tagType]||u).call(e)},uri(){s.uri=l.uri,r.push(s),this.manifest.targetDuration&&!("duration"in s)&&(this.trigger("warn",{message:"defaulting segment duration to the target duration"}),s.duration=this.manifest.targetDuration),n&&(s.key=n),s.timeline=p,i&&(s.map=i),D=0,this.lastProgramDateTime!==null&&(s.programDateTime=this.lastProgramDateTime,this.lastProgramDateTime+=s.duration*1e3),s={}},comment(){},custom(){l.segment?(s.custom=s.custom||{},s.custom[l.customType]=l.data):(this.manifest.custom=this.manifest.custom||{},this.manifest.custom[l.customType]=l.data)}})[l.type].call(e)})}requiredCompatibilityversion(t,e){(t<e||!t)&&this.trigger("warn",{message:`manifest must be at least version ${e}`})}warnOnMissingAttributes_(t,e,r){const s=[];r.forEach(function(i){e.hasOwnProperty(i)||s.push(i)}),s.length&&this.trigger("warn",{message:`${t} lacks required attribute(s): ${s.join(", ")}`})}push(t){this.lineStream.push(t)}end(){this.lineStream.push(`
`),this.manifest.dateRanges.length&&this.lastProgramDateTime===null&&this.trigger("warn",{message:"A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag"}),this.lastProgramDateTime=null,this.trigger("end")}addParser(t){this.parseStream.addParser(t)}addTagMapper(t){this.parseStream.addTagMapper(t)}}class C extends Error{constructor(t,e){super(`${t} (TrackId: ${e})`)}}const h=B.create("DownloadHandler",X.Debug),Z=new ve;function zt(a){return a&&a.kind==="track"&&a.state==="finished"&&(a.streamable||a.downloadable)}function Qt(a){return typeof a=="object"&&a!==null&&"protocol"in a}function Kt(a){if(a?.media?.transcodings?.length<1)return h.logDebug(`[DownloadHandler TrackId: ${a.id}] No transcodings array or empty in track.media.`),null;h.logDebug(`[DownloadHandler TrackId: ${a.id}] Raw transcodings:`,JSON.stringify(a.media.transcodings,null,2));const t=a.media.transcodings.filter(r=>(r.format?.protocol==="progressive"||r.format?.protocol==="hls")&&(r.format?.mime_type?.startsWith("audio/mpeg")||r.format?.mime_type?.startsWith("audio/mp4"))&&!r.snipped).map(r=>({protocol:r.format.protocol,url:r.url,quality:r.quality}));if(t.length<1)return h.logWarn("[DownloadHandler] No transcodings streams could be determined for Track "+a.id),null;let e=t.sort((r,s)=>r.quality==="hq"&&s.quality==="sq"?-1:r.quality==="sq"&&s.quality==="hq"?1:r.protocol==="progressive"&&s.protocol==="hls"?-1:r.protocol==="hls"&&s.protocol==="progressive"?1:0);return v("download-hq-version")||(e=e.filter(r=>r.quality!=="hq")),e.some(r=>r.quality==="hq")&&h.logInfo("[DownloadHandler] Including high quality streams for Track "+a.id),e}async function Ge(a,t,e,r,s){if(!zt(a))throw h.logError("[DownloadHandler] Track does not satisfy constraints needed to be downloadable",a),new C("Track does not satisfy constraints needed to be downloadable",a.id);const i=[];if(v("download-original-version")&&a.downloadable&&a.has_downloads_left){const o=await Z.getOriginalDownloadUrl(a.id);if(o){const u={url:o,hls:!1,extension:void 0};i.push(u)}}const n=Kt(a);if(n&&i.push(...n),i.length<1){const o=`[DownloadHandler] No download details could be determined for track: "${a.title}"`;throw new C(o,a.id)}for(const o of i){let u=null,c=!1,f=null,p;try{if(Qt(o))if(h.logDebug(`[DownloadHandler TrackId: ${a.id}] Getting stream details for transcoding`,o),u=await Z.getStreamDetails(o.url),u)c=u.hls,f=u.url,p=u.extension;else{h.logWarn(`[DownloadHandler TrackId: ${a.id}] Failed to get stream details for transcoding option (url: ${o.url}), trying next...`);continue}else u=o,f=u.url,c=u.hls,p=u.extension,h.logDebug(`[DownloadHandler TrackId: ${a.id}] Using direct download detail (original file?)`,{url:f,hls:c,extension:p});if(!f){h.logWarn(`[DownloadHandler TrackId: ${a.id}] No stream URL resolved, trying next...`,{downloadDetail:o});continue}let b=f,D=c;const y={trackId:a.id,duration:a.duration,uploadDate:new Date(a.display_date),streamUrl:b,fileExtension:p,title:a.title,username:a.user.username,userPermalink:a.user.permalink,artworkUrl:a.artwork_url,avatarUrl:a.user.avatar_url,trackNumber:t,albumName:e,playlistName:r,hls:D,wasOriginallyHls:c};h.logDebug(`[DownloadHandler TrackId: ${a.id}] Calling handleDownload with data`,{downloadData:y});const l=await Jt(y,s);return h.logInfo(`[DownloadHandler TrackId: ${a.id}] handleDownload returned browserDownloadId: ${l} for stream: ${b}`),s(101,l),l}catch(b){h.logWarn(`[DownloadHandler TrackId: ${a.id}] Download attempt failed for option. Error: ${b?.message||b}`,{downloadDetail:o,streamUrl:f})}}throw h.logError(`[DownloadHandler TrackId: ${a.id}] All download attempts failed after trying ${i.length} options.`),s(102),new C("No version of this track could be downloaded",a.id)}async function Jt(a,t){h.logDebug(`[handleDownload ENTRY] Processing TrackId: ${a.trackId}. History check comes later.`);let e=a.username,r=a.title,s,i=a.artworkUrl,n,o,u,c,f,p,b,D,y;try{try{if(h.logInfo(`Initiating metadata processing for ${a.trackId} with payload`,{payload:a}),v("normalize-track")){const g=new _(a.title,a.username,a.userPermalink);let d=g.getArtists();v("include-producers")||(d=d.filter(w=>w.type!==pe.Producer)),e=d.map(w=>w.name).join(", "),r=g.getTitle();const E=d.filter(w=>w.type===pe.Remixer);if(E.length>0){const w=E.map(N=>N.name).join(" & "),I=we[E[0].remixType||we.Remix].toString();r+=` (${w} ${I})`}}e||(e="Unknown"),r||(r="Unknown"),s=oe(`${e} - ${r}`)}catch(g){throw h.logError(`[DownloadHandler TrackId: ${a.trackId}] Error during metadata processing:`,g),new C(`Metadata processing failed for track ${a.trackId}: ${g.message}`,a.trackId)}u=!v("download-without-prompt"),c=v("default-download-location"),f=v("skipExistingFiles");try{const g=a.fileExtension||"mp3";if(y=s+"."+g,!u&&c)if(a.playlistName){const d=oe(a.playlistName);y=c+"/"+d+"/"+y}else y=c+"/"+y;if(f){let d="";if(c)if(a.playlistName){const P=oe(a.playlistName);d=c+"/"+P+"/"}else d=c+"/";const E=`track-${a.trackId}`,w=await Fe("track-download-history")||{};if(h.logDebug(`[History Check] shouldSkipExisting=${f}, trackIdKey=${E}, history exists=${!!w}`),Object.keys(w).length>0&&h.logDebug(`[History Check] History has ${Object.keys(w).length} entries`),w&&w[E]){const P=w[E];h.logInfo(`Skipping download for TrackId: ${a.trackId}. Previously downloaded as: ${P.filename} at ${new Date(P.timestamp).toLocaleString()}`),t(101);const U=Math.floor(Math.random()*1e6)+1e3;return h.logInfo(`Using fake download ID ${U} for skipped track ${a.trackId}`),U}const I={filename:`${d}${s}.${a.fileExtension||"mp3"}`};h.logDebug(`[History Check] Searching downloads with exactQuery: ${JSON.stringify(I)}`);const N=await de(I);h.logDebug(`[History Check] exactMatches found: ${N.length}`);const se=d.replace(/[-/^$*+?.()|[\]{}]/g,"\\$&"),z=s.replace(/[-/^$*+?.()|[\]{}]/g,"\\$&"),ie={filenameRegex:`^${se}${z}\\..+$`};h.logDebug(`[History Check] Searching downloads with regexQuery: ${JSON.stringify(ie)}`);const te=N.length===0?await de(ie):[];h.logDebug(`[History Check] regexMatches found: ${te.length}`);const Q={filenameRegex:`${z}\\..+$`};h.logDebug(`[History Check] Searching downloads with titleArtistQuery: ${JSON.stringify(Q)}`);const k=N.length===0&&te.length===0?await de(Q):[];h.logDebug(`[History Check] titleArtistMatches found: ${k.length}`);const F=[...N,...te,...k].filter(P=>P.state==="complete");if(F.length>0){h.logInfo(`Skipping download for TrackId: ${a.trackId}. File already exists in download history: ${F[0].filename}`),F.length>0&&F.slice(0,3).forEach((U,Je)=>{h.logDebug(`[History Check] Match ${Je}: filename=${U.filename}, state=${U.state}`)}),w[E]={filename:F[0].filename,timestamp:Date.now()},await x("track-download-history",w),t(101);const P=Math.floor(Math.random()*1e6)+1e3;return h.logInfo(`Using fake download ID ${P} for already downloaded track ${a.trackId}`),P}else h.logDebug(`No matching downloads found for TrackId: ${a.trackId} with filename base "${s}"`)}else h.logDebug("[History Check] Skip existing files check is disabled")}catch(g){throw h.logError(`[DownloadHandler TrackId: ${a.trackId}] Error during filename/skip logic:`,g),new C(`Filename/skip logic failed for track ${a.trackId}: ${g.message}`,a.trackId)}try{i||(h.logInfo(`No Artwork URL in data. Fallback to User Avatar (TrackId: ${a.trackId})`),i=a.avatarUrl)}catch(g){h.logWarn(`[DownloadHandler TrackId: ${a.trackId}] Error checking/falling back artwork URL: ${g.message}. Will attempt with current value.`)}h.logInfo(`Starting download of '${s}' (TrackId: ${a.trackId})...`);let l;try{if(a.hls){h.logInfo(`[TrackId: ${a.trackId}] Starting HLS segment fetching from: ${a.streamUrl}`);const[g,d]=await Z.downloadStream(a.streamUrl,k=>{k!==void 0&&t(k*.1)});if(o=d,!g)throw new Error("HLS playlist download failed or returned empty buffer.");const E=new TextDecoder().decode(g),w=new jt;w.push(E),w.end();let I=null;if(w.manifest?.segments?.length>0){const k=w.manifest.segments.find(F=>F.map?.uri);if(k?.map?.uri){let F=k.map.uri;try{F.startsWith("http://")||F.startsWith("https://")||(F=new URL(F,a.streamUrl).href)}catch{if(!(F.startsWith("http://")||F.startsWith("https://")))throw new Error(`Failed to resolve relative HLS init segment URI: ${F}`)}const[P]=await Z.downloadStream(F,U=>{U!==void 0&&t(5+U*.05)});if(!P)throw new Error(`Failed to download HLS init segment: ${F}`);I=P}}let N=[];if(w.manifest?.segments?.length>0&&(N=w.manifest.segments.map(k=>{try{return new URL(k.uri,a.streamUrl).href}catch{if(k.uri.startsWith("http://")||k.uri.startsWith("https://"))return k.uri;throw new Error(`Failed to resolve relative HLS segment URI: ${k.uri}`)}})),N.length===0&&!I)throw new Error("HLS playlist contains no media segments or init segment.");const se=[],z=N.length,ie=I?10:5,te=I?80:85;for(let k=0;k<z;k++){const[F]=await Z.downloadStream(N[k],U=>{U!==void 0&&t(ie+(k+U/100)/z*te)});if(!F)throw new Error(`Failed to download HLS segment: ${N[k]}`);se.push(F);const P=v("hls-rate-limit-delay-ms")??0;P>0&&k<z-1&&await new Promise(U=>setTimeout(U,P))}const Q=[];I&&Q.push(I),Q.push(...se),n=Re(Q),a.hls=!1}else[n,o]=await Z.downloadStream(a.streamUrl,t);if(!n)throw new C("Stream buffer is undefined after download attempts",a.trackId);if(l=n.slice(0),h.logDebug(`[DownloadHandler TrackId: ${a.trackId}] Initial streamBuffer byteLength: ${n?.byteLength}, originalStreamBuffer byteLength: ${l?.byteLength}`),a.wasOriginallyHls&&a.fileExtension&&/^[a-f0-9]{4}$/i.test(a.fileExtension)&&a.streamUrl.includes("/aac")?(h.logWarn(`[DownloadHandler TrackId: ${a.trackId}] Correcting likely bogus HLS AAC extension '${a.fileExtension}' to 'm4a'.`),a.fileExtension="m4a"):a.wasOriginallyHls&&a.fileExtension&&a.fileExtension.toLowerCase()==="m3u8"&&(h.logWarn(`[DownloadHandler TrackId: ${a.trackId}] Correcting HLS extension from 'm3u8' to 'm4a' (assuming AAC).`),a.fileExtension="m4a"),!a.fileExtension&&o){p=o.get("content-type");let g="mp3";p==="audio/mp4"?g="m4a":(p==="audio/x-wav"||p==="audio/wav")&&(g="wav"),a.fileExtension=g}else a.fileExtension||(a.fileExtension="mp3");if(v("ffmpeg-remux-hls-mp4")&&(a.fileExtension==="m4a"||a.fileExtension==="mp4")){t(85);const g=d=>{const E=85+Math.floor(d*.13);t(E)};try{h.logInfo(`[DownloadHandler TrackId: ${a.trackId}] Sending remux task to FFmpegManager. Original streamBuffer byteLength before remux: ${l?.byteLength}`),n=await St(a.trackId.toString(),l,a.fileExtension||"mp4",g),(a.fileExtension==="m4a"||a.fileExtension==="mp4")&&(p="audio/mp4"),t(99),h.logInfo(`[DownloadHandler TrackId: ${a.trackId}] Remux task completed by FFmpegManager.`)}catch(d){h.logError(`[FFMPEG_MANAGER] Error during remux via manager. Proceeding with original. TrackId: ${a.trackId}`,d),n=l.slice(0),h.logDebug(`[DownloadHandler TrackId: ${a.trackId}] FFmpeg failed. Fallen back to originalStreamBuffer. ByteLength: ${n?.byteLength}`)}}else h.logDebug(`[DownloadHandler TrackId: ${a.trackId}] FFmpeg remux skipped (disabled or not applicable filetype).`)}catch(g){throw h.logError(`[DownloadHandler TrackId: ${a.trackId}] Error during download/FFmpeg stage:`,g),new C(`Download/FFmpeg failed for track ${a.trackId}: ${g.message}`,a.trackId)}let $;try{if(v("set-metadata")&&n){let g;const d=n.slice(0);if(a.fileExtension==="mp3"?g=new Lt(d):(a.fileExtension==="m4a"||a.fileExtension==="mp4")&&(g=new R(d)),g){if(r&&g.setTitle(r),e&&g.setArtists([e]),a.albumName?g.setAlbum(a.albumName):a.playlistName&&g.setAlbum(a.playlistName),a.uploadDate){const w=a.uploadDate.getFullYear();isNaN(w)||g.setYear(w)}if(a.trackNumber&&g.setTrackNumber(a.trackNumber),i)try{const w=i.replace("-large.jpg","-t500x500.jpg"),I=await fetch(w);if(!I.ok)throw new Error(`Artwork fetch failed: ${I.statusText}`);const N=await I.arrayBuffer();g.setArtwork(N)}catch(w){h.logWarn(`[Artwork] Failed to fetch/set artwork for tagging TrackId: ${a.trackId}`,w)}const E=await g.getBuffer();E?.buffer?.byteLength>0?$=E.buffer:(h.logWarn("[Metadata] TagWriter returned invalid buffer. Using untagged buffer."),$=n.slice(0))}else h.logWarn(`[TrackId: ${a.trackId}] No TagWriter for ext '${a.fileExtension}'. Using untagged buffer.`),$=n.slice(0)}else h.logInfo(`[TrackId: ${a.trackId}] Metadata disabled or no streamBuffer. Using untagged.`),$=n?.slice(0)}catch(g){h.logError(`[DownloadHandler TrackId: ${a.trackId}] Error during metadata tagging:`,g),$=n?.slice(0)}let S;try{S=$?.byteLength>0?$:n?.byteLength>0?n.slice(0):l?.byteLength>0?l.slice(0):(()=>{throw new C(`All buffers invalid for ${a.trackId}`,a.trackId)})(),S.byteLength<100&&h.logWarn(`Final buffer small: ${S.byteLength} bytes.`),h.logDebug(`[DownloadHandler TrackId: ${a.trackId}] Final bufferToSave byteLength before Blob creation: ${S?.byteLength}`);const g={};p?g.type=p:a.fileExtension==="mp3"?g.type="audio/mpeg":a.fileExtension==="m4a"||a.fileExtension==="mp4"?g.type="audio/mp4":a.fileExtension==="wav"&&(g.type="audio/wav");const d=new Blob([S],g);h.logInfo(`Creating URL for download (TrackId: ${a.trackId}). Service worker context: ${et()}`),D=await tt(d)}catch(g){throw h.logError(`[DownloadHandler TrackId: ${a.trackId}] Error preparing final buffer or Blob/DataURL:`,g),new C(`Failed to prepare buffer/DataURL for track ${a.trackId}: ${g.message}`,a.trackId)}if(b=s+"."+(a.fileExtension||"mp3"),!u&&c){const g=c.endsWith("/")?c.slice(0,-1):c,d=a.playlistName?`/${oe(a.playlistName)}`:"",E=b.split("/").pop()||b;b=`${g}${d}/${E}`}try{h.logInfo(`Downloading track as '${b}' (TrackId: ${a.trackId}). SaveAs: ${u}`);const g=D;if(!g)throw new Error("Data URL for download is undefined.");const d=await rt(g,b,u);if(h.logInfo(`Successfully initiated browser download for '${s}' (TrackId: ${a.trackId}) with browserDownloadId: ${d}`),f){const E=`track-${a.trackId}`,w=await Fe("track-download-history")||{};w[E]={filename:b,timestamp:Date.now()},await x("track-download-history",w)}return d}catch(g){throw h.logError(`[DownloadHandler TrackId: ${a.trackId}] Download save stage error:`,g),new C(`Save failed for track ${a.trackId}: ${g.message}`,a.trackId)}}catch(l){throw h.logError(`[DownloadHandler TrackId: ${a.trackId}] Uncaught error in handleDownload`,l),l instanceof C?l:new C(`Unknown error during download: ${l?.message||l}`,a.trackId)}}const ee=B.create("Semaphore",X.Debug);class qe{tasks=[];count;maxCount;constructor(t){if(t<=0)throw new Error("Semaphore count must be a positive integer.");this.count=t,this.maxCount=t}async acquire(){return ee.logDebug(`Acquire attempt: current count ${this.count}, tasks in queue ${this.tasks.length}`),this.count>0?(this.count--,ee.logDebug(`Acquired immediately. New count ${this.count}`),Promise.resolve()):new Promise(t=>{this.tasks.push(t),ee.logDebug(`Queued. New queue length ${this.tasks.length}`)})}release(){if(this.count++,ee.logDebug(`Released. New count ${this.count}`),this.tasks.length>0){const t=this.tasks.shift();t&&(this.count--,ee.logDebug(`Processing queued task. New count ${this.count}, New queue length ${this.tasks.length}`),t())}this.count>this.maxCount&&(ee.logWarn(`Semaphore count (${this.count}) exceeded maxCount (${this.maxCount}) after release. This might indicate an issue.`),this.count=this.maxCount)}async withLock(t){await this.acquire();try{return await t()}finally{this.release()}}getAvailablePermits(){return this.count}getQueueLength(){return this.tasks.length}}const re=new ve,m=B.create("Background",X.Debug),Zt=at(),M=[];let Ie=!1;const ae=()=>{m.logDebug("[Queue Broadcast] Sending queue update."),chrome?.runtime?.sendMessage?chrome.runtime.sendMessage({type:"QUEUE_UPDATED_BROADCAST",queuePayload:M},a=>{if(chrome.runtime.lastError){const t=chrome.runtime.lastError.message?.toLowerCase()||"";!t.includes("message port closed")&&!t.includes("receiving end does not exist")&&m.logWarn("[Queue Broadcast] Error sending queue update:",chrome.runtime.lastError.message)}}):m.logWarn("[Queue Broadcast] chrome.runtime.sendMessage not available?")},er=async a=>{m.logInfo(`[QueueProcessor _executeDownloadTask] Starting task for ID: ${a.id}, Type: ${a.type}, URL: ${a.url}`),a.status="processing",ae(),a.tabId&&G(a.tabId,a.id,0,void 0,"Resuming");const t=(e,r)=>{e!==void 0&&(a.progress=e,a.tabId&&G(a.tabId,a.id,e,void 0,r?void 0:"Resuming",r),ae())};try{if(a.type==="DOWNLOAD"){const e=a.originalMessage.url;if(!e)throw new Error("Missing URL in original message for DOWNLOAD item");m.logInfo(`[QueueProcessor _executeDownloadTask] Resolving track URL: ${e} for item ${a.id}`);const r=await re.resolveUrl(e);if(!r||r.kind!=="track")throw new Error(`Failed to resolve URL to a valid track: ${e}`);m.logInfo(`[QueueProcessor _executeDownloadTask] Track resolved: ${r.title}. Starting download for item ${a.id}`),await Ge(r,void 0,void 0,void 0,t),a.status="completed",m.logInfo(`[QueueProcessor _executeDownloadTask] DOWNLOAD complete for item ${a.id}: ${r.title}`)}else if(a.type==="DOWNLOAD_SET"){const e=a.originalMessage.url;if(!e)throw new Error("Missing URL in original message for DOWNLOAD_SET item");m.logInfo(`[QueueProcessor _executeDownloadTask] Resolving set URL: ${e} for item ${a.id}`);const r=await re.resolveUrl(e);if(!r||!r.tracks||r.tracks.length===0)throw new Error(`Failed to resolve URL to a valid playlist or playlist is empty: ${e}`);const s=r.tracks.map(y=>y.id);if(s.length===0){m.logWarn(`[Queue Set ${a.id}] Playlist resolved but contains no track IDs?`),a.status="completed";return}m.logInfo(`[QueueProcessor _executeDownloadTask] Set resolved: ${r.title}. Fetching full details for ${s.length} tracks for item ${a.id}`);const i=rr(s,50),n=[];for(const y of i){const l=await re.getTracks(y);n.push(...Object.values(l))}m.logInfo(`[QueueProcessor _executeDownloadTask] Fetched full details for ${n.length} tracks.`);const o={};let u=!1,c=null;const f=()=>{const y=Object.values(o).reduce((l,$)=>l+$,0);return n.length>0?y/n.length:0};a.progress=0,t(0);const p=r.set_type==="album"||r.set_type==="ep"?r.title:void 0,b=r.set_type!=="album"&&r.set_type!=="ep"?r.title:void 0,D=[];for(let y=0;y<n.length;y++){const l=n[y],$=y+1,S=(g,d)=>{if(g!==void 0){o[l.id]=g;const E=f();t(E,d)}};D.push(Ye.withLock(()=>(m.logDebug(`[Queue Set ${a.id}] Starting download for track ${$}/${n.length}: ${l.title} (ID: ${l.id})`),Ge(l,$,p,b,S))).catch(g=>{m.logWarn(`[Queue Set ${a.id}] Failed to download track ${$}: ${l.title}`,g),u=!0,c=g?.message||String(g),o[l.id]=100;const d=f();t(d)}))}m.logInfo(`[Queue Set ${a.id}] Waiting for ${D.length} track downloads to complete...`),await Promise.all(D),m.logInfo(`[Queue Set ${a.id}] All track download attempts finished.`),u?(a.status="error",a.error="One or more tracks failed to download within the set.",m.logWarn(`[Queue Set ${a.id}] DOWNLOAD_SET completed with errors. Last individual error logged was: ${c||"None recorded"}`),a.tabId&&G(a.tabId,a.id,102,a.error)):(a.status="completed",a.progress=101,m.logInfo(`[Queue Set ${a.id}] DOWNLOAD_SET completed successfully.`),a.tabId&&G(a.tabId,a.id,101))}else a.type==="DOWNLOAD_SET_RANGE"?(m.logWarn(`[QueueProcessor _executeDownloadTask] DOWNLOAD_SET_RANGE for ${a.id} not yet implemented in queue processor.`),a.status="error",a.error="Set range downloads via queue not yet implemented.",a.tabId&&G(a.tabId,a.id,void 0,a.error)):(m.logError(`[QueueProcessor _executeDownloadTask] Unknown item type: ${a.type} for item ID: ${a.id}`),a.status="error",a.error="Unknown download type",a.tabId&&G(a.tabId,a.id,void 0,a.error))}catch(e){m.logError(`[QueueProcessor _executeDownloadTask] Error processing item ${a.id}:`,e),a.status="error",a.error=e.message||"Unknown error during processing",a.tabId&&G(a.tabId,a.id,void 0,a.error,void 0)}finally{ae()}},tr=async()=>{if(Ie)return;Ie=!0;const a=M.findIndex(t=>t.status==="pending");if(a!==-1){const t=M[a];await er(t);const e=M.findIndex(r=>r.id===t.id);e!==-1&&(M[e].status==="completed"||M[e].status==="error")&&(m.logInfo(`[QueueProcessor] Removing finalized item ${M[e].id} (Status: ${M[e].status}) from queue.`),M.splice(e,1),ae())}Ie=!1,M.some(t=>t.status==="pending")&&Ae()},Ae=()=>{setTimeout(()=>{m.logInfo("[QueueProcessor trigger] Checking queue..."),tr()},0)},Ve=()=>Math.max(1,Math.min(Number(v("maxConcurrentTrackDownloads"))||3,10));let Ye=new qe(Ve());m.logInfo(`Download track semaphore initialized with concurrency: ${Ve()}`),fe("maxConcurrentTrackDownloads",a=>{const t=Math.max(1,Math.min(Number(a)||3,10));m.logInfo(`Updating download track semaphore concurrency to: ${t}`),Ye=new qe(t)});async function je(a){await ot(a)}async function ze(a){await lt(a)}m.logInfo("Starting with version: "+Zt.version),st(pt),m.logInfo("Initial message listener registered."),$e(!0).then(async()=>{m.logInfo("Initial configuration loaded. Setting initial DNR rules.");const a=v("oauth-token");await je(a);const t=v("client-id");await ze(t),a&&await Ke(a),Ft()});function G(a,t,e,r,s,i){if(!t||typeof t!="string"||t.trim()===""){m.logError(`Attempted to send download progress with invalid downloadId: ${JSON.stringify(t)}`);const u=new Error().stack;if(m.logError(`Call stack for invalid downloadId: ${u}`),e===101||e===102){m.logWarn(`Attempting to send COMPLETION message (${e}) even with missing downloadId`);const c={downloadId:"undefined_completion",progress:e,error:typeof r=="string"?r:r instanceof Error?r.message:"",status:s,completionWithoutId:!0,timestamp:Date.now(),browserDownloadId:i};ne(a,c).catch(f=>{m.logError(`Failed to send fallback completion message: ${f}`)})}return}let n="";r instanceof Error?n=r.message:typeof r=="string"&&(n=r),e===101||e===102?m.logInfo(`Sending COMPLETION message for download ${t} to tab ${a}, progress=${e}`):e===100&&m.logInfo(`Sending FINISHING message for download ${t} to tab ${a}`);const o={downloadId:t,progress:e,error:n,status:s,timestamp:Date.now(),browserDownloadId:i};e===101||e===102?(m.logInfo(`Sending SINGLE COMPLETION message for download ${t} to tab ${a}, progress=${e} (BrowserDownloadId: ${i||"N/A"})`),ne(a,o).catch(u=>{m.logWarn(`Failed to send completion message to tab ${a}:`,u)})):ne(a,o).catch(u=>{m.logWarn(`Failed to send progress/status message to tab ${a}:`,u)})}function rr(a,t){const e=[];for(let r=0;r<a.length;r+=t){const s=a.slice(r,r+t);e.push(s)}return e}const Qe=new RegExp("OAuth (.+)"),ar=new RegExp("/me/followings/(\\d+)");it(a=>{if(De()){const r=v("oauth-token");if(a.requestHeaders){for(let s=0;s<a.requestHeaders.length;s++)if(a.requestHeaders[s].name.toLowerCase()==="authorization"){const i=a.requestHeaders[s].value,n=Qe.exec(i);n&&n.length>=2&&n[1]!==r&&(m.logInfo("Sniffed and storing OAuth token from request header (all envs)."),x("oauth-token",n[1]));break}}return{}}let t=!1;const e=v("oauth-token");if(a.requestHeaders){for(let r=0;r<a.requestHeaders.length;r++)if(a.requestHeaders[r].name.toLowerCase()==="authorization"){t=!0;const s=a.requestHeaders[r].value,i=Qe.exec(s);i&&i.length>=2&&i[1]!==e&&(m.logInfo("Sniffed and storing OAuth token (Firefox/non-DNR)."),x("oauth-token",i[1]));break}if(!t&&e)return a.requestHeaders.push({name:"Authorization",value:"OAuth "+e}),{requestHeaders:a.requestHeaders}}return{}},["*://api-v2.soundcloud.com/*"],["blocking","requestHeaders"]),nt(a=>{const t=new URL(a.url);if(t.pathname==="/connect/session"&&v("oauth-token")===null)m.logInfo("User logged in - clearing potentially stale token."),x("oauth-token",void 0);else if(t.pathname==="/sign-out")m.logInfo("User logged out"),x("oauth-token",null),x("user-id",null),x("followed-artists",[]);else if(t.pathname.startsWith("/me/followings/")){const e=ar.exec(t.pathname);if(e&&e.length===2){const r=+e[1];if(r){let s=v("followed-artists")||[];a.method==="POST"?s.includes(r)||s.push(r):a.method==="DELETE"&&(s=s.filter(i=>i!==r)),x("followed-artists",s)}}}else{const e=t.searchParams.get("client_id");if(e){const r=v("client-id");e!==r&&(m.logInfo(`Found new client_id: ${e}. Storing it.`),x("client-id",e))}else if(!De()){const r=v("client-id");if(r)return m.logDebug(`Adding ClientId to ${a.url} via redirect (Firefox/non-DNR)`),t.searchParams.append("client_id",r),{redirectUrl:t.toString()}}}return{}},["*://api-v2.soundcloud.com/*","*://api-auth.soundcloud.com/*"],["blocking"]);const Ke=async a=>{if(!a){x("user-id",null),m.logInfo("OAuth token cleared, user ID cleared.");return}const t=await re.getCurrentUser();if(!t){m.logError("Failed to fetch currently logged in user (after token change/init)");return}x("user-id",t.id),m.logInfo("Logged in as",t.username);const e=await re.getFollowedArtistIds(t.id);if(!e){m.logError("Failed to fetch ids of followed artists");return}x("followed-artists",e)};fe("oauth-token",async a=>{await je(a),await Ke(a)}),fe("client-id",async a=>{m.logInfo(`client-id config changed to: ${a}. Updating DNR rule.`),await ze(a)});
