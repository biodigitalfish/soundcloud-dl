{"version":3,"file":"repostBlocker.js","sources":["../../../src/content/repostBlocker.ts"],"sourcesContent":["import { Config } from \"../settings/config\";\nimport { Logger } from \"../utils/logger\";\nconst logger = Logger.create(\"Repost Blocker\");\n\nfunction isStreamUrl(url: URL) {\n  return url && url.hostname === \"api-v2.soundcloud.com\" && url.pathname === \"/stream\";\n}\n\nfunction getFromLocalStorage<TKey extends keyof Config>(key: TKey) {\n  const item = window.localStorage.getItem(\"SOUNDCLOUD-DL-\" + key);\n\n  return JSON.parse(item) as Config[TKey][\"value\"];\n}\n\nconst twentyDaysInSeconds = 864000;\n\nfunction filterReposts(collection: any[]) {\n  if (!collection) return [];\n\n  const nowTimestamp = new Date().getTime() / 1000;\n  const blockPlaylists = getFromLocalStorage(\"block-playlists\");\n  const followedArtistIds = getFromLocalStorage(\"followed-artists\") ?? [];\n  const filtered = [];\n\n  for (const item of collection) {\n    if (item.type === \"track-promoted\") continue;\n\n    if (item.type === \"track-repost\") {\n      // if a track has been reposted in the stream by a user it won't be shown afterwards\n      // so we show the track, if it is a repost of a artist we follow\n      if (!followedArtistIds.includes(item.track.user_id)) continue;\n\n      const trackCreatedAtTimestamp = new Date(item.track.created_at).getTime() / 1000;\n\n      if (nowTimestamp - trackCreatedAtTimestamp > twentyDaysInSeconds) continue;\n\n      item.type = \"track\";\n      item.user = item.track.user;\n      item.created_at = item.track.display_date;\n    }\n\n    if (blockPlaylists && item.type === \"playlist\") continue;\n\n    if (item.type === \"playlist-repost\") {\n      if (blockPlaylists) continue;\n\n      // if a playlist has been reposted in the stream by a user it won't be shown afterwards\n      // so we show the playlist, if it is a repost of a artist we follow\n      if (!followedArtistIds.includes(item.playlist.user_id)) continue;\n\n      const playlistCreatedAtTimestamp = new Date(item.playlist.created_at).getTime() / 1000;\n\n      if (nowTimestamp - playlistCreatedAtTimestamp > twentyDaysInSeconds) continue;\n\n      item.type = \"playlist\";\n      item.user = item.playlist.user;\n      item.created_at = item.playlist.display_date;\n    }\n\n    filtered.push(item);\n  }\n\n  return filtered;\n}\n\nfunction removeReposts(json: string) {\n  if (!json) return json;\n\n  const data = JSON.parse(json);\n\n  const filteredData = {\n    ...data,\n    collection: filterReposts(data.collection),\n  };\n\n  return JSON.stringify(filteredData);\n}\n\nconst originalSendMethod = XMLHttpRequest.prototype.send;\n\nfunction hijackedSendMethod(body: any) {\n  try {\n    if (this.__state) {\n      const url = new URL(this.__state.url);\n      const onload = this.onload;\n\n      if (onload && isStreamUrl(url)) {\n        this.onload = function (event: ProgressEvent) {\n          Object.defineProperty(this, \"responseText\", {\n            value: removeReposts(this.responseText),\n          });\n\n          onload.call(this, event);\n        };\n      }\n    }\n  } catch (error) {\n    logger.logError(\"Error in hijackedSendMethod:\", error);\n  }\n\n  return originalSendMethod.call(this, body);\n}\n\nXMLHttpRequest.prototype.send = hijackedSendMethod;\n\nObject.defineProperty(XMLHttpRequest.prototype, \"resetSend\", {\n  value: () => (XMLHttpRequest.prototype.send = originalSendMethod),\n});\n"],"names":["logger","Logger","isStreamUrl","url","getFromLocalStorage","key","item","twentyDaysInSeconds","filterReposts","collection","nowTimestamp","blockPlaylists","followedArtistIds","filtered","trackCreatedAtTimestamp","playlistCreatedAtTimestamp","removeReposts","json","data","filteredData","originalSendMethod","hijackedSendMethod","body","onload","event","error"],"mappings":"yCAEA,MAAMA,EAASC,EAAO,OAAO,gBAAgB,EAE7C,SAASC,EAAYC,EAAU,CAC7B,OAAOA,GAAOA,EAAI,WAAa,yBAA2BA,EAAI,WAAa,SAC7E,CAEA,SAASC,EAA+CC,EAAW,CACjE,MAAMC,EAAO,OAAO,aAAa,QAAQ,iBAAmBD,CAAG,EAExD,OAAA,KAAK,MAAMC,CAAI,CACxB,CAEA,MAAMC,EAAsB,MAE5B,SAASC,EAAcC,EAAmB,CACpC,GAAA,CAACA,EAAY,MAAO,CAAC,EAEzB,MAAMC,EAAe,IAAI,KAAK,EAAE,QAAY,EAAA,IACtCC,EAAiBP,EAAoB,iBAAiB,EACtDQ,EAAoBR,EAAoB,kBAAkB,GAAK,CAAC,EAChES,EAAW,CAAC,EAElB,UAAWP,KAAQG,EACb,GAAAH,EAAK,OAAS,iBAEd,IAAAA,EAAK,OAAS,eAAgB,CAGhC,GAAI,CAACM,EAAkB,SAASN,EAAK,MAAM,OAAO,EAAG,SAE/C,MAAAQ,EAA0B,IAAI,KAAKR,EAAK,MAAM,UAAU,EAAE,UAAY,IAExE,GAAAI,EAAeI,EAA0BP,EAAqB,SAElED,EAAK,KAAO,QACPA,EAAA,KAAOA,EAAK,MAAM,KAClBA,EAAA,WAAaA,EAAK,MAAM,YAAA,CAG3B,GAAA,EAAAK,GAAkBL,EAAK,OAAS,YAEhC,IAAAA,EAAK,OAAS,kBAAmB,CAKnC,GAJIK,GAIA,CAACC,EAAkB,SAASN,EAAK,SAAS,OAAO,EAAG,SAElD,MAAAS,EAA6B,IAAI,KAAKT,EAAK,SAAS,UAAU,EAAE,UAAY,IAE9E,GAAAI,EAAeK,EAA6BR,EAAqB,SAErED,EAAK,KAAO,WACPA,EAAA,KAAOA,EAAK,SAAS,KACrBA,EAAA,WAAaA,EAAK,SAAS,YAAA,CAGlCO,EAAS,KAAKP,CAAI,GAGb,OAAAO,CACT,CAEA,SAASG,EAAcC,EAAc,CAC/B,GAAA,CAACA,EAAa,OAAAA,EAEZ,MAAAC,EAAO,KAAK,MAAMD,CAAI,EAEtBE,EAAe,CACnB,GAAGD,EACH,WAAYV,EAAcU,EAAK,UAAU,CAC3C,EAEO,OAAA,KAAK,UAAUC,CAAY,CACpC,CAEA,MAAMC,EAAqB,eAAe,UAAU,KAEpD,SAASC,EAAmBC,EAAW,CACjC,GAAA,CACF,GAAI,KAAK,QAAS,CAChB,MAAMnB,EAAM,IAAI,IAAI,KAAK,QAAQ,GAAG,EAC9BoB,EAAS,KAAK,OAEhBA,GAAUrB,EAAYC,CAAG,IACtB,KAAA,OAAS,SAAUqB,EAAsB,CACrC,OAAA,eAAe,KAAM,eAAgB,CAC1C,MAAOR,EAAc,KAAK,YAAY,CAAA,CACvC,EAEMO,EAAA,KAAK,KAAMC,CAAK,CACzB,EACF,QAEKC,EAAO,CACPzB,EAAA,SAAS,+BAAgCyB,CAAK,CAAA,CAGhD,OAAAL,EAAmB,KAAK,KAAME,CAAI,CAC3C,CAEA,eAAe,UAAU,KAAOD,EAEhC,OAAO,eAAe,eAAe,UAAW,YAAa,CAC3D,MAAO,IAAO,eAAe,UAAU,KAAOD,CAChD,CAAC"}