{"version":3,"file":"settings.js","sources":["../../../src/settings/settings.ts"],"sourcesContent":["import { configKeys, loadConfiguration, storeConfigValue, getConfigValue, resetConfig } from \"./config\";\nimport { Logger } from \"../utils/logger\";\nimport { eraseDownloadHistoryEntry } from \"../utils/browser\";\n\nconst logger = Logger.create(\"Settings\");\n\nasync function resetSettings(e: Event) {\n  e.preventDefault();\n\n  logger.logInfo(\"Resetting settings...\");\n\n  await resetConfig();\n\n  await restoreSettings();\n}\n\nasync function saveSettings(e: Event) {\n  e.preventDefault();\n\n  logger.logInfo(\"Saving settings...\");\n\n  const savePromises = [];\n  for (const configKey of configKeys) {\n    const elem = document.querySelector<HTMLInputElement>(`#${configKey}`);\n\n    if (elem === null) continue;\n\n    let value: string | number | boolean;\n\n    if (elem.type === \"checkbox\") {\n      value = elem.checked;\n    } else if (elem.type === \"number\") {\n      value = elem.valueAsNumber;\n      if (isNaN(value)) {\n        logger.logWarn(`Invalid number input for ${configKey}, skipping save.`);\n        continue;\n      }\n    } else {\n      value = elem.value;\n    }\n\n    savePromises.push(storeConfigValue(configKey, value));\n  }\n\n  await Promise.all(savePromises);\n\n  const saveButton = document.querySelector<HTMLButtonElement>(\"button[type='submit']\");\n  if (saveButton) {\n    const originalText = saveButton.textContent;\n    saveButton.textContent = \"Saved!\";\n    saveButton.disabled = true;\n    setTimeout(() => {\n      saveButton.textContent = originalText;\n      saveButton.disabled = false;\n    }, 1500);\n  }\n}\n\nasync function restoreSettings() {\n  logger.logInfo(\"Restoring settings...\");\n\n  try {\n    await loadConfiguration();\n    logger.logInfo(\"Configuration loaded.\");\n\n    for (const configKey of configKeys) {\n      const elem = document.querySelector<HTMLInputElement>(`#${configKey}`);\n\n      if (elem === null) continue;\n\n      const value = getConfigValue(configKey);\n      logger.logInfo(`Restoring key: ${configKey}, Value: ${JSON.stringify(value)} (Type: ${typeof value})`);\n\n      if (typeof value === \"boolean\") {\n        elem.checked = value;\n      } else if (typeof value === \"number\") {\n        elem.value = String(value);\n      } else if (typeof value === \"string\") {\n        elem.value = value;\n      } else {\n        logger.logWarn(`Unexpected type for config key ${configKey}: ${typeof value}`);\n        if (elem.type === \"checkbox\") elem.checked = false;\n        else elem.value = \"\";\n      }\n\n      const changeEvent = new Event(\"change\", { bubbles: false, cancelable: true });\n      elem.dispatchEvent(changeEvent);\n    }\n  } catch (error) {\n    logger.logError(\"Failed to restore settings!\", error);\n  }\n}\n\nconst downloadWithoutPromptElem = document.querySelector<HTMLInputElement>(\"#download-without-prompt\");\nconst defaultDownloadLocationElem = document.querySelector<HTMLInputElement>(\"#default-download-location\");\n\ndownloadWithoutPromptElem.onchange = (event: any) => {\n  defaultDownloadLocationElem.disabled = !event.target.checked;\n};\n\nconst blockReposts = document.querySelector<HTMLInputElement>(\"#block-reposts\");\nconst blockPlaylists = document.querySelector<HTMLInputElement>(\"#block-playlists\");\n\nblockReposts.onchange = (event: any) => {\n  if (!event.target.checked) blockPlaylists.checked = false;\n};\n\n// --- HLS Rate Limiting UI Logic Start ---\nconst enableHlsRateLimitingElem = document.querySelector<HTMLInputElement>(\"#enable-hls-rate-limiting\");\nconst hlsRateLimitDelayMsElem = document.querySelector<HTMLInputElement>(\"#hls-rate-limit-delay-ms\");\n\nenableHlsRateLimitingElem.onchange = (event: any) => {\n  hlsRateLimitDelayMsElem.disabled = !event.target.checked;\n};\n// --- HLS Rate Limiting UI Logic End ---\n\n// --- Clear Download History Logic Start ---\nconst clearHistoryButton = document.querySelector<HTMLButtonElement>(\"#clear-download-history\");\n\nasync function clearDownloadHistory() {\n  logger.logInfo(\"Clearing download history...\");\n\n  try {\n    // First, clear our internal history database\n    await storeConfigValue(\"track-download-history\", {});\n\n    // Now try to clear entries from Chrome's download history database\n    logger.logInfo(\"Attempting to clear browser download history for SoundCloud files...\");\n    // Option 1: Try to clear all .mp3/.m4a files from SoundCloud \n    const soundcloudRegexPattern = \"SoundCloud.*\\\\.(mp3|m4a|wav)$\";\n    eraseDownloadHistoryEntry(soundcloudRegexPattern);\n\n    // Option 2: Try a broader search for any audio files (fallback)\n    const audioRegexPattern = \"\\\\.(mp3|m4a|wav)$\";\n    eraseDownloadHistoryEntry(audioRegexPattern);\n\n    const originalText = clearHistoryButton.textContent;\n    clearHistoryButton.textContent = \"History Cleared!\";\n    clearHistoryButton.disabled = true;\n    setTimeout(() => {\n      clearHistoryButton.textContent = originalText;\n      clearHistoryButton.disabled = false;\n    }, 2000); // Keep disabled for 2 seconds\n  } catch (error) {\n    logger.logError(\"Failed to clear download history\", error);\n    clearHistoryButton.textContent = \"Error! See Console\";\n    clearHistoryButton.style.backgroundColor = \"#d30029\";\n    setTimeout(() => {\n      clearHistoryButton.textContent = \"Clear Download History\";\n      clearHistoryButton.style.backgroundColor = \"\";\n      clearHistoryButton.disabled = false;\n    }, 3000);\n  }\n}\n\nclearHistoryButton.addEventListener(\"click\", clearDownloadHistory);\n// --- Clear Download History Logic End ---\n\ndocument.addEventListener(\"DOMContentLoaded\", restoreSettings);\ndocument.querySelector(\"form\").addEventListener(\"submit\", saveSettings);\ndocument.querySelector(\"form\").addEventListener(\"reset\", resetSettings);\n"],"names":["logger","Logger","resetSettings","resetConfig","restoreSettings","saveSettings","savePromises","configKey","configKeys","elem","value","storeConfigValue","saveButton","originalText","loadConfiguration","getConfigValue","changeEvent","error","downloadWithoutPromptElem","defaultDownloadLocationElem","event","blockReposts","blockPlaylists","enableHlsRateLimitingElem","hlsRateLimitDelayMsElem","clearHistoryButton","clearDownloadHistory","eraseDownloadHistoryEntry"],"mappings":"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"}