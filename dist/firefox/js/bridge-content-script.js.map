{"version":3,"file":"bridge-content-script.js","sources":["../../../src/content/bridge-content-script.ts"],"sourcesContent":["/**\n * This script acts as a bridge between the main page world (where content.js runs after injection)\n * and the extension's background script. It runs in the isolated content script world\n * and has access to chrome.runtime APIs.\n */\n\nconst SCRIPT_ID = \"soundcloud-dl-bridge\"; // For identifying messages\n\n// Listen for messages from the page (content.js)\nwindow.addEventListener(\"message\", (event) => {\n    // We only accept messages from ourselves\n    if (event.source !== window || !event.data || event.data.source !== SCRIPT_ID || event.data.direction !== \"to-background-via-bridge\") {\n        return;\n    }\n\n    const message = event.data.payload;\n    const originalMessageId = event.data.messageId; // Capture the messageId\n\n    if (message && message.type && originalMessageId) { // Basic validation + check for messageId\n        console.debug(`[Bridge] Received from page for background (ID: ${originalMessageId}):`, message);\n        chrome.runtime.sendMessage(message, (response) => {\n            // Send response from background back to the page, including the original messageId\n            if (chrome.runtime.lastError) {\n                console.error(\"[Bridge] Error sending message to background or receiving response:\", chrome.runtime.lastError);\n                window.postMessage({\n                    source: SCRIPT_ID,\n                    direction: \"from-background-via-bridge\",\n                    payload: { error: chrome.runtime.lastError.message, originalMessage: message },\n                    messageId: originalMessageId // Include messageId in error response\n                }, \"*\");\n            } else {\n                console.debug(`[Bridge] Received response from background for ID ${originalMessageId}, sending to page:`, response);\n                window.postMessage({\n                    source: SCRIPT_ID,\n                    direction: \"from-background-via-bridge\",\n                    payload: response,\n                    messageId: originalMessageId // Include the messageId in the success response\n                }, \"*\");\n            }\n        });\n    } else {\n        console.warn(\"[Bridge] Received message from page is invalid or missing messageId:\", event.data);\n    }\n});\n\n// Listen for messages from the background script (broadcasts/pushes)\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    // Ensure it's from our extension's background\n    if (sender.id === chrome.runtime.id && (!sender.tab)) { // sender.tab check ensures it's from background/popup\n        // console.debug(\"[Bridge] Received broadcast from background, sending to page:\", message);\n        // Broadcast messages don't have a specific messageId to correlate\n        window.postMessage({\n            source: SCRIPT_ID,\n            direction: \"from-background-via-bridge\",\n            payload: message,\n            // No messageId needed here as it wasn't a request-response\n        }, \"*\");\n    }\n    return false; // Indicate we are not sending an async response from this specific listener.\n});\n\nconsole.debug(\"[SoundCloud DL] Bridge content script loaded and listening.\"); "],"names":["SCRIPT_ID","event","message","originalMessageId","response","sender","sendResponse"],"mappings":"AAMA,MAAMA,EAAY,uBAGlB,OAAO,iBAAiB,UAAYC,GAAU,CAE1C,GAAIA,EAAM,SAAW,QAAU,CAACA,EAAM,MAAQA,EAAM,KAAK,SAAWD,GAAaC,EAAM,KAAK,YAAc,2BACtG,OAGE,MAAAC,EAAUD,EAAM,KAAK,QACrBE,EAAoBF,EAAM,KAAK,UAEjCC,GAAWA,EAAQ,MAAQC,GAC3B,QAAQ,MAAM,mDAAmDA,CAAiB,KAAMD,CAAO,EAC/F,OAAO,QAAQ,YAAYA,EAAUE,GAAa,CAE1C,OAAO,QAAQ,WACf,QAAQ,MAAM,sEAAuE,OAAO,QAAQ,SAAS,EAC7G,OAAO,YAAY,CACf,OAAQJ,EACR,UAAW,6BACX,QAAS,CAAE,MAAO,OAAO,QAAQ,UAAU,QAAS,gBAAiBE,CAAQ,EAC7E,UAAWC,GACZ,GAAG,IAEN,QAAQ,MAAM,qDAAqDA,CAAiB,qBAAsBC,CAAQ,EAClH,OAAO,YAAY,CACf,OAAQJ,EACR,UAAW,6BACX,QAASI,EACT,UAAWD,GACZ,GAAG,EACV,CACH,GAEO,QAAA,KAAK,uEAAwEF,EAAM,IAAI,CAEvG,CAAC,EAGD,OAAO,QAAQ,UAAU,YAAY,CAACC,EAASG,EAAQC,KAE/CD,EAAO,KAAO,OAAO,QAAQ,IAAO,CAACA,EAAO,KAG5C,OAAO,YAAY,CACf,OAAQL,EACR,UAAW,6BACX,QAASE,GAEV,GAAG,EAEH,GACV,EAED,QAAQ,MAAM,6DAA6D"}