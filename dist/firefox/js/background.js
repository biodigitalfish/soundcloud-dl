import{L as z,a as K}from"./logger-B3xayXxI.js";import{g as Zt,a as L,c as Dt,X as $t,b as kt,d as te,s as ct,l as ht,e as mt,f as C,i as ee,h as re,j as ae,k as Rt,m as ie,n as rt,o as se,p as ne,q as oe,r as le,t as ge,u as ce,v as St,w as de,x as ue,y as vt,z as fe}from"./config-CxTPZUIz.js";class dt extends Error{constructor(r){super(r),this.name="RateLimitError"}}class pt{baseUrl="https://api-v2.soundcloud.com";logger;globalBackoffUntil=null;globalBackoffDurationMs=61*1e3;constructor(){this.logger=z.create("SoundCloudApi")}async retryWithBackoff(r,t=30,e=2e3,a){if(this.globalBackoffUntil&&Date.now()<this.globalBackoffUntil){const g=this.globalBackoffUntil-Date.now();this.logger.logWarn(`[Global Backoff] Active. Waiting for ${g/1e3}s before proceeding with ${a||"operation"}.`),await new Promise(u=>setTimeout(u,g))}let s=0,n=e;for(;s<=t;)try{if(this.globalBackoffUntil&&Date.now()<this.globalBackoffUntil){const g=this.globalBackoffUntil-Date.now();this.logger.logWarn(`[Global Backoff] Active during retry attempt. Waiting for ${g/1e3}s for ${a||"operation"}.`),await new Promise(u=>setTimeout(u,g))}return this.logger.logDebug(`[Retry] Attempt ${s+1}/${t+1} for ${a||"operation"}`),await r()}catch(g){if(g instanceof dt)if(s<t)s++,this.logger.logWarn(`[Retry] Rate limit hit for ${a||"operation"}. Retrying in ${n/1e3}s... (Attempt ${s+1}/${t+1})`),await new Promise(u=>setTimeout(u,n)),n*=2;else throw this.logger.logError(`[Retry] Failed for ${a||"operation"} after ${s+1} attempts due to rate limit. Activating global backoff.`),this.globalBackoffUntil=Date.now()+this.globalBackoffDurationMs,this.logger.logWarn(`[Global Backoff] Activated for ${this.globalBackoffDurationMs/1e3}s due to persistent rate limiting on ${a||"operation"}.`),g;else throw this.logger.logError(`[Retry] Failed for ${a||"operation"} after ${s+1} attempts or non-retryable error:`,g),g}const o=`[Retry] Exhausted retries for ${a||"operation"} without success (this path should not be reached).`;throw this.logger.logError(o),new Error(o)}resolveUrl(r){const t=`${this.baseUrl}/resolve?url=${r}`;return this.retryWithBackoff(()=>this._fetchJsonInternal(t),3,2e3,`resolveUrl: ${r}`)}getCurrentUser(){const r=`${this.baseUrl}/me`;return this.retryWithBackoff(()=>this._fetchJsonInternal(r),3,2e3,"getCurrentUser")}async getFollowedArtistIds(r){const t=`${this.baseUrl}/users/${r}/followings/ids`,e=await this.retryWithBackoff(()=>this._fetchJsonInternal(t),3,2e3,`getFollowedArtistIds: ${r}`);return!e||!e.collection?null:e.collection}async getTracks(r){const t=`${this.baseUrl}/tracks?ids=${r.join(",")}`;this.logger.logInfo("Fetching tracks with Ids",{trackIds:r});const e=await this.retryWithBackoff(()=>this._fetchJsonInternal(t),3,2e3,`getTracks: ${r.length} IDs`);return r.reduce((a,s,n)=>(a[s]=e[n],a),{})}async getStreamDetails(r){const t=await this.retryWithBackoff(()=>this._fetchJsonInternal(r),3,2e3,`getStreamDetails: ${r}`);if(!t||!t.url)return this.logger.logError("Invalid stream response",t),null;let e,a=!1;const s=/(?:(\w{3,4})\/playlist)?\.(\w{3,4})(?:$|\?)/.exec(t.url);return s.length>=2&&(s[2]==="m3u8"?(e=s[1],a=!0):e=s[2]),{url:t.url,extension:e,hls:a}}async getOriginalDownloadUrl(r){const t=`${this.baseUrl}/tracks/${r}/download`;this.logger.logInfo("Getting original download URL for track with Id",r);try{const e=await this.retryWithBackoff(()=>this._fetchJsonInternal(t),3,2e3,`getOriginalDownloadUrl: ${r}`);return!e||!e.redirectUri?(this.logger.logError("Invalid original file response",e),null):e.redirectUri}catch(e){return this.logger.logError(`Failed to get original download URL for track ${r} after retries`,e),null}}async downloadArtwork(r){const[t]=await this.retryWithBackoff(()=>this._fetchArrayBufferInternal(r),3,2e3,`downloadArtwork: ${r}`);return t}downloadStream(r,t){return this.retryWithBackoff(()=>this._fetchArrayBufferInternal(r,t),3,1e3,`downloadStream: ${r}`)}async _fetchArrayBufferInternal(r,t){try{const e=await fetch(r);if(!e.ok){if(e.status===404)return this.logger.logDebug(`[fetchArrayBuffer] Resource not found (404) for ${r}`),[null,e.headers];if(e.status===429)throw this.logger.logWarn(`[fetchArrayBuffer] Rate limited (429) while fetching ${r}.`),new dt(`Rate limited (status 429) on ${r}`);const E=`[fetchArrayBuffer] HTTP error for ${r} - Status: ${e.status} ${e.statusText}`;throw new Error(E)}if(!e.body)throw this.logger.logError(`Response for ${r} has no body, despite response.ok being true.`),new Error(`Response for ${r} has no body.`);const a=e.headers.get("Content-Length"),s=a?parseInt(a,10):0;let n=0;const o=[],g=e.body.getReader();for(t&&s>0&&t(0);;){const{done:E,value:y}=await g.read();if(E)break;o.push(y),n+=y.byteLength,t&&s>0&&t(Math.round(n/s*100))}t&&t(100);const u=new ArrayBuffer(n),f=new Uint8Array(u);let m=0;for(const E of o)f.set(E,m),m+=E.byteLength;return n===0&&e.status===200&&this.logger.logWarn(`[fetchArrayBuffer] Fetched ${r} (Status: ${e.status}) but received an empty (0 bytes) buffer.`),[u,e.headers]}catch(e){throw this.logger.logError(`[fetchArrayBuffer] Generic error for ${r}:`,e),e instanceof dt?e:new Error(`Failed to fetch array buffer from ${r}: ${e instanceof Error?e.message:String(e)}`)}}async _fetchJsonInternal(r){try{const t=await fetch(r);if(!t.ok)if(t.status===429){const a=`Rate limited while fetching from ${r}. Please wait and try again later.`;throw this.logger.logWarn(a),new dt(a)}else{const a=`HTTP error ${t.status} while fetching from ${r}`;throw this.logger.logError(a),new Error(a)}return await t.json()||null}catch{return this.logger.logError("Failed to fetch JSON from",r),null}}}var $;(function(i){i.LOAD="LOAD",i.EXEC="EXEC",i.FFPROBE="FFPROBE",i.WRITE_FILE="WRITE_FILE",i.READ_FILE="READ_FILE",i.DELETE_FILE="DELETE_FILE",i.RENAME="RENAME",i.CREATE_DIR="CREATE_DIR",i.LIST_DIR="LIST_DIR",i.DELETE_DIR="DELETE_DIR",i.ERROR="ERROR",i.DOWNLOAD="DOWNLOAD",i.PROGRESS="PROGRESS",i.LOG="LOG",i.MOUNT="MOUNT",i.UNMOUNT="UNMOUNT"})($||($={}));const he=(()=>{let i=0;return()=>i++})(),me=new Error("ffmpeg is not loaded, call `await ffmpeg.load()` first"),pe=new Error("called FFmpeg.terminate()");class we{#e=null;#a={};#r={};#i=[];#s=[];loaded=!1;#n=()=>{this.#e&&(this.#e.onmessage=({data:{id:r,type:t,data:e}})=>{switch(t){case $.LOAD:this.loaded=!0,this.#a[r](e);break;case $.MOUNT:case $.UNMOUNT:case $.EXEC:case $.FFPROBE:case $.WRITE_FILE:case $.READ_FILE:case $.DELETE_FILE:case $.RENAME:case $.CREATE_DIR:case $.LIST_DIR:case $.DELETE_DIR:this.#a[r](e);break;case $.LOG:this.#i.forEach(a=>a(e));break;case $.PROGRESS:this.#s.forEach(a=>a(e));break;case $.ERROR:this.#r[r](e);break}delete this.#a[r],delete this.#r[r]})};#t=({type:r,data:t},e=[],a)=>this.#e?new Promise((s,n)=>{const o=he();this.#e&&this.#e.postMessage({id:o,type:r,data:t},e),this.#a[o]=s,this.#r[o]=n,a?.addEventListener("abort",()=>{n(new DOMException(`Message # ${o} was aborted`,"AbortError"))},{once:!0})}):Promise.reject(me);on(r,t){r==="log"?this.#i.push(t):r==="progress"&&this.#s.push(t)}off(r,t){r==="log"?this.#i=this.#i.filter(e=>e!==t):r==="progress"&&(this.#s=this.#s.filter(e=>e!==t))}load=({classWorkerURL:r,...t}={},{signal:e}={})=>(this.#e||(this.#e=r?new Worker(new URL(r,import.meta.url),{type:"module"}):new Worker(new URL("/assets/worker-BAOIWoxA.js",import.meta.url),{type:"module"}),this.#n()),this.#t({type:$.LOAD,data:t},void 0,e));exec=(r,t=-1,{signal:e}={})=>this.#t({type:$.EXEC,data:{args:r,timeout:t}},void 0,e);ffprobe=(r,t=-1,{signal:e}={})=>this.#t({type:$.FFPROBE,data:{args:r,timeout:t}},void 0,e);terminate=()=>{const r=Object.keys(this.#r);for(const t of r)this.#r[t](pe),delete this.#r[t],delete this.#a[t];this.#e&&(this.#e.terminate(),this.#e=null,this.loaded=!1)};writeFile=(r,t,{signal:e}={})=>{const a=[];return t instanceof Uint8Array&&a.push(t.buffer),this.#t({type:$.WRITE_FILE,data:{path:r,data:t}},a,e)};mount=(r,t,e)=>{const a=[];return this.#t({type:$.MOUNT,data:{fsType:r,options:t,mountPoint:e}},a)};unmount=r=>{const t=[];return this.#t({type:$.UNMOUNT,data:{mountPoint:r}},t)};readFile=(r,t="binary",{signal:e}={})=>this.#t({type:$.READ_FILE,data:{path:r,encoding:t}},void 0,e);deleteFile=(r,{signal:t}={})=>this.#t({type:$.DELETE_FILE,data:{path:r}},void 0,t);rename=(r,t,{signal:e}={})=>this.#t({type:$.RENAME,data:{oldPath:r,newPath:t}},void 0,e);createDir=(r,{signal:t}={})=>this.#t({type:$.CREATE_DIR,data:{path:r}},void 0,t);listDir=(r,{signal:t}={})=>this.#t({type:$.LIST_DIR,data:{path:r}},void 0,t);deleteDir=(r,{signal:t}={})=>this.#t({type:$.DELETE_DIR,data:{path:r}},void 0,t)}var Ft;(function(i){i.MEMFS="MEMFS",i.NODEFS="NODEFS",i.NODERAWFS="NODERAWFS",i.IDBFS="IDBFS",i.WORKERFS="WORKERFS",i.PROXYFS="PROXYFS"})(Ft||(Ft={}));const Ee=new Error("failed to get response body reader"),be=new Error("failed to complete download"),ye="Content-Length",Te=async(i,r)=>{const t=await fetch(i);let e;try{const a=parseInt(t.headers.get(ye)||"-1"),s=t.body?.getReader();if(!s)throw Ee;const n=[];let o=0;for(;;){const{done:f,value:m}=await s.read(),E=m?m.length:0;if(f){if(a!=-1&&a!==o)throw be;r&&r({url:i,total:a,received:o,delta:E,done:f});break}n.push(m),o+=E,r&&r({url:i,total:a,received:o,delta:E,done:f})}const g=new Uint8Array(o);let u=0;for(const f of n)g.set(f,u),u+=f.length;e=g.buffer}catch(a){console.log("failed to send download progress event: ",a),e=await t.arrayBuffer()}return e},Nt=async(i,r,t=!1,e)=>{const a=t?await Te(i,e):await(await fetch(i)).arrayBuffer(),s=new Blob([a],{type:r});return URL.createObjectURL(s)},Ie=z.create("FFmpegInstance",K.Debug);async function Ot(i){const r=i?z.create(`FFmpegInstance:${i}`,K.Debug):Ie,t=new we;t.on("log",({message:e})=>{e.startsWith("frame=")||r.logDebug(`[FFMPEG_WASM_LOG] ${e}`)}),r.logInfo("[FFMPEG_WASM] Initializing new FFmpeg.wasm instance from local files (using toBlobURL strategy)...");try{const e=Zt("ffmpeg-core/");if(!e)return r.logError("[FFMPEG_WASM] Failed to get base URL for FFmpeg core files."),null;const a=e+"ffmpeg-core.js",s=e+"ffmpeg-core.wasm";r.logInfo(`[FFMPEG_WASM] Base URL for Blob: ${e}`),r.logInfo("[FFMPEG_WASM] Attempting to create Blob URLs for core files...");const n=await Nt(a,"text/javascript"),o=await Nt(s,"application/wasm");return r.logInfo("[FFMPEG_WASM] Blob URLs created. Loading FFmpeg instance..."),await t.load({coreURL:n,wasmURL:o}),r.logInfo("[FFMPEG_WASM] FFmpeg.wasm instance loaded successfully via Blob URLs."),t}catch(e){return r.logError("[FFMPEG_WASM] Failed to load FFmpeg.wasm instance via Blob URLs",e),null}}const R=z.create("FFmpegManager",K.Debug),Ae=Math.max(1,Math.min(Number(L("maxConcurrentTrackDownloads"))||2,10)),ut=Ae;R.logInfo(`FFmpegManager initialized with MAX_CONCURRENT_OPERATIONS: ${ut}`);const J=[],ft=[];let at=!1,Z=null;async function Pt(){return at?Promise.resolve():Z||(R.logInfo(`Initializing FFmpeg instance pool with size: ${ut}`),Z=(async()=>{try{const i=[];for(let t=0;t<ut;t++)i.push(Ot(t));const r=await Promise.all(i);for(let t=0;t<r.length;t++){const e=r[t];e?J.push({id:t,instance:e,isAvailable:!0,isCompromised:!1}):R.logError(`Failed to load FFmpeg instance ${t} for the pool.`)}if(J.length===0&&ut>0)throw new Error("No FFmpeg instances could be initialized for the pool.");at=!0,R.logInfo(`FFmpeg instance pool initialized with ${J.length} instances.`)}catch(i){throw R.logError("Failed to initialize FFmpeg pool",i),at=!1,Z=null,i}})(),Z)}async function De(i,r){const{instance:t,id:e}=i,{taskId:a,inputBuffer:s,fileExtension:n,progressCallback:o,resolve:g,reject:u}=r,f=`input_${a}_${e}.${n||"mp4"}`,m=`output_remuxed_${a}_${e}.${n||"mp4"}`;R.logInfo(`[FFmpegManager] Instance ${e} starting remux for task ${a}: ${f} -> ${m}`);let E;try{let y;try{R.logDebug(`[FFmpegManager] Instance ${e}, Task ${a}: Attempting inputBuffer.slice(0). Input buffer byteLength: ${s?.byteLength}`);const I=s.slice(0);R.logDebug(`[FFmpegManager] Instance ${e}, Task ${a}: Successfully sliced buffer. Slice byteLength: ${I?.byteLength}. Attempting new Uint8Array().`),y=new Uint8Array(I),R.logDebug(`[FFmpegManager] Instance ${e}, Task ${a}: Created Uint8Array with byteLength: ${y?.byteLength}. About to call instance.writeFile with ${f}.`)}catch(I){throw R.logError(`[FFmpegManager] Instance ${e}, Task ${a}: ERROR during buffer slice or Uint8Array creation:`,I),I}await t.writeFile(f,y),R.logDebug(`[FFmpegManager] Instance ${e}, Task ${a}: Successfully called instance.writeFile with ${f}.`);const A=["-loglevel","debug","-i",f,"-c","copy",m];if(R.logDebug(`[FFmpegManager] Instance ${e}, Task ${a}: FFmpeg exec arguments:`,A),o){let I=-1;E=({progress:D})=>{const c=Math.round(D*100);c>I&&c<=100&&(o(c),I=c)},t.on("progress",E)}await t.exec(A);const l=await t.readFile(m);if(typeof l=="string")throw new Error("FFmpeg remux output was a string, expected Uint8Array");R.logInfo(`[FFmpegManager] Instance ${e} finished remux for task ${a}`),g(l.buffer.slice(0))}catch(y){R.logError(`[FFmpegManager] Instance ${e} FAILED remux for task ${a}`,y),i.isCompromised=!0,u(y)}finally{E&&typeof t.off=="function"&&t.off("progress",E);try{await t.deleteFile(f),await t.deleteFile(m)}catch(y){R.logWarn(`[FFmpegManager] Instance ${e} failed to cleanup files for task ${a}`,y),i.isCompromised=!0}}}function Lt(){if(!at||ft.length===0)return;const i=J.find(t=>t.isAvailable);if(!i){R.logDebug("No FFmpeg instance available right now, queue length: "+ft.length);return}const r=ft.shift();r&&(i.isAvailable=!1,R.logDebug(`Assigning task ${r.taskId} to FFmpeg instance ${i.id}`),De(i,r).finally(async()=>{if(i.isCompromised){R.logWarn(`[FFmpegManager] Instance ${i.id} is compromised. Terminating and attempting to replace.`);try{await i.instance.terminate(),R.logInfo(`[FFmpegManager] Terminated compromised instance ${i.id}.`)}catch(a){R.logError(`[FFmpegManager] Error terminating compromised instance ${i.id}:`,a)}const t=J.findIndex(a=>a.id===i.id);t>-1&&J.splice(t,1),R.logInfo(`[FFmpegManager] Attempting to create new FFmpeg instance to replace ${i.id}.`);const e=await Ot(i.id);e?(J.push({id:i.id,instance:e,isAvailable:!0,isCompromised:!1}),R.logInfo(`[FFmpegManager] Successfully replaced instance ${i.id}. Pool size: ${J.length}`)):R.logError(`[FFmpegManager] Failed to create new FFmpeg instance to replace ${i.id}. Pool size will be reduced.`)}else i.isAvailable=!0,R.logDebug(`FFmpeg instance ${i.id} is now available.`);Lt()}))}async function $e(i,r,t,e){return!at&&!Z&&Pt().catch(a=>{R.logError("FFmpeg Pool Initialization failed lazily, subsequent requests might fail.",a)}),Z&&await Z,!at||J.length===0?Promise.reject(new Error("FFmpegManager: Pool not initialized or no instances available after init attempt.")):new Promise((a,s)=>{R.logDebug(`Task ${i} added to FFmpeg remux queue.`),ft.push({taskId:i,inputBuffer:r,fileExtension:t,progressCallback:e,resolve:a,reject:s}),Lt()})}function ke(){!at&&!Z&&Pt().catch(i=>{R.logError("Pre-initialization of FFmpeg Pool failed.",i)})}function Mt(i){return String(i).split("").map(r=>r.charCodeAt(0))}function it(i){return new Uint8Array(Mt(i))}function tt(i){const r=new ArrayBuffer(2*i.length),t=new Uint8Array(r);return new Uint16Array(r).set(Mt(i)),t}function _t(i){return[i>>>24&255,i>>>16&255,i>>>8&255,i&255]}function Ut(i){return 11+i}function Re(i,r,t,e){return 11+r+1+1+(e?2+2*(t+1):t+1)+i}function Se(i){let r=0;return i.forEach(t=>{r+=2+2*t[0].length+2+2+2*t[1].length+2}),11+r}function ve(i,r){const t=2*r;let e=0;return i.forEach(a=>{e+=2+2*a[0].length+2+4}),18+t+2+e}class Fe{_setIntegerFrame(r,t){const e=parseInt(t,10);this.frames.push({name:r,value:e,size:Ut(e.toString().length)})}_setStringFrame(r,t){const e=t.toString();let a=13+2*e.length;r==="TDAT"&&(a=Ut(e.length)),this.frames.push({name:r,value:e,size:a})}_setPictureFrame(r,t,e,a){const s=function(o){if(!o||!o.length)return null;if(o[0]===255&&o[1]===216&&o[2]===255)return"image/jpeg";if(o[0]===137&&o[1]===80&&o[2]===78&&o[3]===71)return"image/png";if(o[0]===71&&o[1]===73&&o[2]===70)return"image/gif";if(o[8]===87&&o[9]===69&&o[10]===66&&o[11]===80)return"image/webp";const g=o[0]===73&&o[1]===73&&o[2]===42&&o[3]===0,u=o[0]===77&&o[1]===77&&o[2]===0&&o[3]===42;return g||u?"image/tiff":o[0]===66&&o[1]===77?"image/bmp":o[0]===0&&o[1]===0&&o[2]===1&&o[3]===0?"image/x-icon":null}(new Uint8Array(t)),n=e.toString();if(!s)throw new Error("Unknown picture MIME type");e||(a=!1),this.frames.push({name:"APIC",value:t,pictureType:r,mimeType:s,useUnicodeEncoding:a,description:n,size:Re(t.byteLength,s.length,n.length,a)})}_setLyricsFrame(r,t,e){const a=r.split("").map(u=>u.charCodeAt(0)),s=t.toString(),n=e.toString();var o,g;this.frames.push({name:"USLT",value:n,language:a,description:s,size:(o=s.length,g=n.length,16+2*o+2+2+2*g)})}_setCommentFrame(r,t,e){const a=r.split("").map(u=>u.charCodeAt(0)),s=t.toString(),n=e.toString();var o,g;this.frames.push({name:"COMM",value:n,language:a,description:s,size:(o=s.length,g=n.length,16+2*o+2+2+2*g)})}_setPrivateFrame(r,t){const e=r.toString();var a,s;this.frames.push({name:"PRIV",value:t,id:e,size:(a=e.length,s=t.byteLength,10+a+1+s)})}_setUserStringFrame(r,t){const e=r.toString(),a=t.toString();var s,n;this.frames.push({name:"TXXX",description:e,value:a,size:(s=e.length,n=a.length,13+2*s+2+2+2*n)})}_setUrlLinkFrame(r,t){const e=t.toString();var a;this.frames.push({name:r,value:e,size:(a=e.length,10+a)})}_setPairedTextFrame(r,t){this.frames.push({name:r,value:t,size:Se(t)})}_setSynchronisedLyricsFrame(r,t,e,a,s){const n=s.toString(),o=a.split("").map(g=>g.charCodeAt(0));this.frames.push({name:"SYLT",value:t,language:o,description:n,type:r,timestampFormat:e,size:ve(t,n.length)})}constructor(r){if(!r||typeof r!="object"||!("byteLength"in r))throw new Error("First argument should be an instance of ArrayBuffer or Buffer");this.arrayBuffer=r,this.padding=4096,this.frames=[],this.url=""}setFrame(r,t){switch(r){case"TPE1":case"TCOM":case"TCON":{if(!Array.isArray(t))throw new Error(`${r} frame value should be an array of strings`);const e=r==="TCON"?";":"/",a=t.join(e);this._setStringFrame(r,a);break}case"TLAN":case"TIT1":case"TIT2":case"TIT3":case"TALB":case"TPE2":case"TPE3":case"TPE4":case"TRCK":case"TPOS":case"TMED":case"TPUB":case"TCOP":case"TKEY":case"TEXT":case"TDAT":case"TCMP":case"TSRC":this._setStringFrame(r,t);break;case"TBPM":case"TLEN":case"TYER":this._setIntegerFrame(r,t);break;case"USLT":if(t.language=t.language||"eng",typeof t!="object"||!("description"in t)||!("lyrics"in t))throw new Error("USLT frame value should be an object with keys description and lyrics");if(t.language&&!t.language.match(/[a-z]{3}/i))throw new Error("Language must be coded following the ISO 639-2 standards");this._setLyricsFrame(t.language,t.description,t.lyrics);break;case"APIC":if(typeof t!="object"||!("type"in t)||!("data"in t)||!("description"in t))throw new Error("APIC frame value should be an object with keys type, data and description");if(t.type<0||t.type>20)throw new Error("Incorrect APIC frame picture type");this._setPictureFrame(t.type,t.data,t.description,!!t.useUnicodeEncoding);break;case"TXXX":if(typeof t!="object"||!("description"in t)||!("value"in t))throw new Error("TXXX frame value should be an object with keys description and value");this._setUserStringFrame(t.description,t.value);break;case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":this._setUrlLinkFrame(r,t);break;case"COMM":if(t.language=t.language||"eng",typeof t!="object"||!("description"in t)||!("text"in t))throw new Error("COMM frame value should be an object with keys description and text");if(t.language&&!t.language.match(/[a-z]{3}/i))throw new Error("Language must be coded following the ISO 639-2 standards");this._setCommentFrame(t.language,t.description,t.text);break;case"PRIV":if(typeof t!="object"||!("id"in t)||!("data"in t))throw new Error("PRIV frame value should be an object with keys id and data");this._setPrivateFrame(t.id,t.data);break;case"IPLS":if(!Array.isArray(t)||!Array.isArray(t[0]))throw new Error("IPLS frame value should be an array of pairs");this._setPairedTextFrame(r,t);break;case"SYLT":if(typeof t!="object"||!("type"in t)||!("text"in t)||!("timestampFormat"in t))throw new Error("SYLT frame value should be an object with keys type, text and timestampFormat");if(!Array.isArray(t.text)||!Array.isArray(t.text[0]))throw new Error("SYLT frame text value should be an array of pairs");if(t.type<0||t.type>6)throw new Error("Incorrect SYLT frame content type");if(t.timestampFormat<1||t.timestampFormat>2)throw new Error("Incorrect SYLT frame time stamp format");t.language=t.language||"eng",t.description=t.description||"",this._setSynchronisedLyricsFrame(t.type,t.text,t.timestampFormat,t.language,t.description);break;default:throw new Error(`Unsupported frame ${r}`)}return this}removeTag(){if(this.arrayBuffer.byteLength<10)return;const r=new Uint8Array(this.arrayBuffer),t=r[3],e=((a=[r[6],r[7],r[8],r[9]])[0]<<21)+(a[1]<<14)+(a[2]<<7)+a[3]+10;var a,s;(s=r)[0]!==73||s[1]!==68||s[2]!==51||t<2||t>4||(this.arrayBuffer=new Uint8Array(r.subarray(e)).buffer)}addTag(){this.removeTag();const r=[255,254],t=10+this.frames.reduce((o,g)=>o+g.size,0)+this.padding,e=new ArrayBuffer(this.arrayBuffer.byteLength+t),a=new Uint8Array(e);let s=0,n=[];return n=[73,68,51,3],a.set(n,s),s+=n.length,s++,s++,n=function(o){return[o>>>21&127,o>>>14&127,o>>>7&127,o&127]}(t-10),a.set(n,s),s+=n.length,this.frames.forEach(o=>{switch(n=it(o.name),a.set(n,s),s+=n.length,n=_t(o.size-10),a.set(n,s),s+=n.length,s+=2,o.name){case"WCOM":case"WCOP":case"WOAF":case"WOAR":case"WOAS":case"WORS":case"WPAY":case"WPUB":n=it(o.value),a.set(n,s),s+=n.length;break;case"TPE1":case"TCOM":case"TCON":case"TLAN":case"TIT1":case"TIT2":case"TIT3":case"TALB":case"TPE2":case"TPE3":case"TPE4":case"TRCK":case"TPOS":case"TKEY":case"TMED":case"TPUB":case"TCOP":case"TEXT":case"TSRC":n=[1].concat(r),a.set(n,s),s+=n.length,n=tt(o.value),a.set(n,s),s+=n.length;break;case"TXXX":case"USLT":case"COMM":n=[1],o.name!=="USLT"&&o.name!=="COMM"||(n=n.concat(o.language)),n=n.concat(r),a.set(n,s),s+=n.length,n=tt(o.description),a.set(n,s),s+=n.length,n=[0,0].concat(r),a.set(n,s),s+=n.length,n=tt(o.value),a.set(n,s),s+=n.length;break;case"TBPM":case"TLEN":case"TDAT":case"TYER":s++,n=it(o.value),a.set(n,s),s+=n.length;break;case"PRIV":n=it(o.id),a.set(n,s),s+=n.length,s++,a.set(new Uint8Array(o.value),s),s+=o.value.byteLength;break;case"APIC":n=[o.useUnicodeEncoding?1:0],a.set(n,s),s+=n.length,n=it(o.mimeType),a.set(n,s),s+=n.length,n=[0,o.pictureType],a.set(n,s),s+=n.length,o.useUnicodeEncoding?(n=[].concat(r),a.set(n,s),s+=n.length,n=tt(o.description),a.set(n,s),s+=n.length,s+=2):(n=it(o.description),a.set(n,s),s+=n.length,s++),a.set(new Uint8Array(o.value),s),s+=o.value.byteLength;break;case"IPLS":n=[1],a.set(n,s),s+=n.length,o.value.forEach(g=>{n=[].concat(r),a.set(n,s),s+=n.length,n=tt(g[0].toString()),a.set(n,s),s+=n.length,n=[0,0].concat(r),a.set(n,s),s+=n.length,n=tt(g[1].toString()),a.set(n,s),s+=n.length,n=[0,0],a.set(n,s),s+=n.length});break;case"SYLT":n=[1].concat(o.language).concat(o.timestampFormat).concat(o.type),a.set(n,s),s+=n.length,n=[].concat(r),a.set(n,s),s+=n.length,n=tt(o.description),a.set(n,s),s+=n.length,s+=2,o.value.forEach(g=>{n=[].concat(r),a.set(n,s),s+=n.length,n=tt(g[0].toString()),a.set(n,s),s+=n.length,n=[0,0],a.set(n,s),s+=n.length,n=_t(g[1]),a.set(n,s),s+=n.length})}}),s+=this.padding,a.set(new Uint8Array(this.arrayBuffer),s),this.arrayBuffer=e,e}getBlob(){return new Blob([this.arrayBuffer],{type:"audio/mpeg"})}getURL(){return this.url||(this.url=URL.createObjectURL(this.getBlob())),this.url}revokeURL(){URL.revokeObjectURL(this.url)}}class Ne{writer;constructor(r){this.writer=new Fe(r)}setTitle(r){if(!r)throw new Error("Invalid value for title");this.writer.setFrame("TIT2",r)}setArtists(r){if(!r||r.length<1)throw new Error("Invalid value for artists");this.writer.setFrame("TPE1",r)}setAlbum(r){if(!r)throw new Error("Invalid value for album");this.writer.setFrame("TALB",r)}setComment(r){if(!r)throw new Error("Invalid value for comment");this.writer.setFrame("COMM",{text:r,description:""})}setTrackNumber(r){if(r<1||r>32767)throw new Error("Invalid value for trackNumber");this.writer.setFrame("TRCK",r.toString())}setYear(r){if(r<1)throw new Error("Invalud value for year");this.writer.setFrame("TYER",r)}setGrouping(r){if(!r)throw new Error("Invalid value for grouping");this.writer.setFrame("TIT1",r)}setArtwork(r){if(!r||r.byteLength<1)throw new Error("Invalid value for artworkBuffer");this.writer.setFrame("APIC",{type:3,data:r,description:""})}getBuffer(){return this.writer.addTag(),this.writer.getBlob().arrayBuffer().then(r=>({buffer:r,tagsApplied:!0}))}}const Q=8,xt=16,Ct=Q+xt;class Oe{_metadataPath=["moov","udta","meta","ilst"];_buffer;_bufferView;_atoms=[];_loggedErrors=new Set;_hasValidStructure=!1;_logger;get hasValidMp4Structure(){return this._hasValidStructure}_logError(r){this._loggedErrors.has(r)||(this._logger.logDebug(`MP4 metadata: ${r}`),this._loggedErrors.add(r))}constructor(r){this._buffer=r,this._bufferView=new DataView(r),this._logger=z.create("MP4TagWriterInternals",K.Debug)}parse(){if(!this._buffer)throw new Error("Buffer can not be null");if(this._atoms.length>0)throw new Error("Buffer already parsed");this._logger.logDebug("Starting MP4 parse...");let r=0,t,e=[];for(;;){if(t=this._readAtom(r),!t||t.length<1||r>=this._buffer.byteLength){r<this._buffer.byteLength?this._logger.logDebug(`Parsing stopped: _readAtom returned invalid atom or zero length at offset ${r}.`):this._logger.logDebug(`Parsing stopped: Reached end of buffer at offset ${r}.`);break}if(e.push({name:t.name||"undefined",length:t.length,offset:t.offset}),this._atoms.push(t),r=t.offset+t.length,r<=t.offset){this._logger.logError(`Parsing stopped: Invalid offset progression. Current offset ${t.offset}, next offset calculated as ${r}.`);break}}if(this._logger.logDebug(`Finished MP4 parse. Found ${this._atoms.length} top-level atoms.`),this._logger.logDebug(`Top-level atoms summary: ${JSON.stringify(e)}`),this._atoms.length<1){this._logError("Buffer could not be parsed - no valid top-level atoms found."),this._hasValidStructure=!1;return}const a=this._atoms.find(s=>s.name?.toLowerCase()==="moov");this._hasValidStructure=!!a,this._hasValidStructure?this._logger.logDebug("File structure check passed: Found top-level 'moov' atom (case-insensitive check)."):this._logError("File structure check failed: Did not find a top-level 'moov' atom (checked case-insensitively).")}setDuration(r){try{if(!this._hasValidStructure){this._logError("Cannot set duration - file doesn't have a valid MP4 structure");return}const t=this._findAtom(this._atoms,["moov","mvhd"]);if(!t)throw new Error("'mvhd' atom could not be found");this._bufferView.setUint32(t.offset+Q+16,r)}catch(t){this._logError(`Failed to set duration: ${t.message}`)}}addMetadataAtom(r,t){try{if(!this._hasValidStructure){this._logError(`Cannot add ${r} metadata - file doesn't have a valid MP4 structure`);return}if(r.length>4||r.length<1)throw new Error(`Unsupported atom name: '${r}'`);let e;if(t instanceof ArrayBuffer)e=t;else if(typeof t=="string")e=this._getBufferFromString(t);else if(typeof t=="number")e=new ArrayBuffer(4),new DataView(e).setUint32(0,t);else throw new Error(`Unsupported data: '${t}'`);const a={name:r,length:Ct+e.byteLength,data:e};this._insertAtom(a,this._metadataPath)}catch(e){this._logError(`Failed to add metadata atom '${r}': ${e.message}`)}}getBuffer(){const r=[];let t=0;for(const e of this._atoms){if(!e.children){const n=this._buffer.slice(e.offset,e.offset+e.length);r.push(n),t++;continue}e.length=Q;const a=[{parent:e,offset:t,childIndex:0}];let s=0;for(;;){const{parent:n,offset:o,childIndex:g}=a[s];if(g>=n.children.length){s--,a.pop();let f=Q;n.name==="meta"?(n.length+=4,f+=4):n.name==="stsd"&&(n.length+=8,f+=8),this._bufferView.setUint32(n.offset,n.length);const m=this._buffer.slice(n.offset,n.offset+f);if(r.splice(o,0,m),s<0)break;const E=a[s].parent;E.length+=n.length,a[s].childIndex++;continue}const u=n.children[g];if(u.children){u.length=Q,a.push({parent:u,offset:t,childIndex:0}),s++;continue}else if(u.data){const f=this._getHeaderBufferFromAtom(u);r.push(f),r.push(u.data)}else{const f=this._buffer.slice(u.offset,u.offset+u.length);r.push(f)}t++,n.length+=u.length,a[s].childIndex++}}return this._bufferView=null,this._buffer=null,this._atoms=[],Dt(r)}_insertAtom(r,t){try{if(this._logger.logDebug(`Attempting to insert atom '${r.name}' at path '${t.join(" > ")}'.`),!t||t[t.length-1]!=="ilst"){this._logError(`Cannot insert tag atom '${r.name}': Path does not end in 'ilst'.`);return}const e=this._createMetadataPath();if(!e){this._logError(`Cannot insert atom '${r.name}': Failed to find or create parent 'ilst' atom.`);return}e.children===void 0&&(e.children=this._readChildAtoms(e),this._logger.logDebug(`Loaded children for '${e.name}' in _insertAtom.`));const a=e.children.findIndex(n=>n.name===r.name);a!==-1&&(this._logger.logDebug(`Replacing existing atom '${r.name}' in '${e.name}'.`),e.children.splice(a,1));let s=e.offset+this._getAtomHeaderLength(e);if(e.children.length>0){const n=e.children[e.children.length-1];s=n.offset+n.length}r.offset=s,e.children.push(r),this._logger.logDebug(`Successfully prepared atom '${r.name}' for insertion into '${e.name}'.`)}catch(e){this._logError(`Error during _insertAtom for '${r.name}': ${e.message}`)}}_findAtom(r,t){if(!t||t.length<1)throw new Error("Path can not be empty");const e=[...t],a=e.shift(),s=r.find(n=>n.name===a);return e.length<1?s:!s||(s.children===void 0&&(s.children=this._readChildAtoms(s)),s.children.length<1)?null:this._findAtom(s.children,e)}_readChildAtoms(r){const t=[],e=r.offset+r.length;let a=r.offset+Q;for(r.name==="meta"?a+=4:r.name==="stsd"&&(a+=8);!(a>=e);){const s=this._readAtom(a);if(!s||s.length<1)break;a=s.offset+s.length,t.push(s)}return t}_readAtom(r){const t=r,e=r+Q,a=this._buffer.slice(t,e);if(a.byteLength<Q)return{length:a.byteLength,offset:r};const s=new DataView(a);let n=s.getUint32(0,!1),o="";for(let g=0;g<4;g++)o+=String.fromCharCode(s.getUint8(4+g));return{name:o,length:n,offset:r}}_getHeaderBufferFromAtom(r){if(!r||r.length<1||!r.name||!r.data)throw new Error("Can not compute header buffer for this atom");const t=new ArrayBuffer(Ct),e=new DataView(t);e.setUint32(0,r.length);const a=this._getCharCodes(r.name);for(let n=0;n<a.length;n++)e.setUint8(4+n,a[n]);e.setUint32(8,xt+r.data.byteLength);const s=this._getCharCodes("data");for(let n=0;n<s.length;n++)e.setUint8(12+n,s[n]);return e.setUint32(16,this._getFlags(r.name)),t}_getBufferFromString(r){const t=new ArrayBuffer(r.length),e=new DataView(t),a=this._getCharCodes(r);for(let s=0;s<a.length;s++)e.setUint8(s,a[s]);return t}_getCharCodes(r){const t=[];for(let e=0;e<r.length;e++)t.push(r.charCodeAt(e));return t}_getFlags(r){switch(r){case"covr":return 13;case"trkn":case"disk":return 0;case"tmpo":case"cpil":case"rtng":return 21;default:return 1}}_createMetadataPath(){try{this._logger.logDebug("Attempting to ensure metadata path moov > udta > meta > ilst exists.");const r=this._findAtom(this._atoms,["moov"]);if(!r)return this._logError("Cannot create metadata path: Required 'moov' atom not found."),null;r.children===void 0&&(r.children=this._readChildAtoms(r));let t=r;const e=["udta","meta","ilst"];for(const a of e){let s=this._findAtom(t.children,[a]);if(s)this._logger.logDebug(`Found existing '${a}' atom.`),s.children===void 0&&(s.children=this._readChildAtoms(s));else{this._logger.logDebug(`Creating missing '${a}' atom.`);let n=t.offset+this._getAtomHeaderLength(t);if(t.children.length>0){const g=t.children[t.children.length-1];n=g.offset+g.length}const o=this._getAtomHeaderLength({name:a});s={name:a,length:o,offset:n,children:[]},t.children.push(s),this._logger.logDebug(`Created '${a}' atom.`)}t=s}return this._logger.logDebug("Metadata path creation/verification successful. Returning 'ilst' atom."),t}catch(r){return this._logError(`Failed during _createMetadataPath: ${r.message}`),null}}_getAtomHeaderLength(r){let t=Q;return r.name==="meta"?t+=4:r.name==="stsd"&&(t+=8),t}}class O{_originalBuffer;_mp4;_hasValidMp4=!1;static _loggedErrors=new Set;static _logger=z.create("MP4TagWriter",K.Debug);static _logError(r){O._loggedErrors.has(r)||(O._logger.logDebug(`MP4 metadata: ${r}`),O._loggedErrors.add(r))}constructor(r){try{this._originalBuffer=r.slice(0),O._logger.logDebug(`Creating Mp4TagWriter with buffer of size: ${this._originalBuffer.byteLength}`);try{this._mp4=new Oe(this._originalBuffer),this._mp4.parse(),this._hasValidMp4=this._mp4.hasValidMp4Structure,this._hasValidMp4?O._logger.logDebug("MP4 structure validation passed. TagWriter ready for use."):O._logError("MP4 structure validation failed. Tags will not be applied but original audio will still be saved.")}catch(t){this._hasValidMp4=!1,O._logError(`Failed to initialize MP4 parser: ${t.message}`)}}catch(t){O._logError(`Mp4TagWriter constructor error: ${t.message}`),this._originalBuffer=new ArrayBuffer(0),this._hasValidMp4=!1}}setTitle(r){try{if(!r)throw new Error("Invalid value for title");this._mp4.addMetadataAtom("\xA9nam",r)}catch(t){O._logError(`Failed to set title: ${t.message}`)}}setArtists(r){try{if(!r||r.length<1)throw new Error("Invalid value for artists");this._mp4.addMetadataAtom("\xA9ART",r.join(", "))}catch(t){O._logError(`Failed to set artists: ${t.message}`)}}setAlbum(r){try{if(!r)throw new Error("Invalid value for album");this._mp4.addMetadataAtom("\xA9alb",r)}catch(t){O._logError(`Failed to set album: ${t.message}`)}}setComment(r){try{if(!r)throw new Error("Invalid value for comment");this._mp4.addMetadataAtom("\xA9cmt",r)}catch(t){O._logError(`Failed to set comment: ${t.message}`)}}setTrackNumber(r){try{if(r<1||r>32767)throw new Error("Invalid value for trackNumber");this._mp4.addMetadataAtom("trkn",r)}catch(t){O._logError(`Failed to set track number: ${t.message}`)}}setYear(r){try{if(r<1)throw new Error("Invalid value for year");this._mp4.addMetadataAtom("\xA9day",r.toString())}catch(t){O._logError(`Failed to set year: ${t.message}`)}}setGrouping(r){try{if(!r)throw new Error("Invalid value for grouping");this._mp4.addMetadataAtom("\xA9grp",r)}catch(t){O._logError(`Failed to set grouping: ${t.message}`)}}setArtwork(r){try{if(!r||r.byteLength<1)throw new Error("Invalid value for artworkBuffer");this._mp4.addMetadataAtom("covr",r)}catch(t){O._logError(`Failed to set artwork: ${t.message}`)}}setDuration(r){try{if(r<1)throw new Error("Invalid value for duration");this._mp4.setDuration(r)}catch(t){O._logError(`Failed to set duration: ${t.message}`)}}getBuffer(){try{if(!this._originalBuffer||this._originalBuffer.byteLength===0)throw new Error("Original buffer is missing or empty");if(!this._mp4||!this._hasValidMp4)return O._logError("MP4 structure check failed. Returning original buffer without applying tags."),Promise.resolve({buffer:this._originalBuffer.slice(0),tagsApplied:!1,message:"Invalid MP4 structure for tagging."});let r;try{if(r=this._mp4.getBuffer(),!r||r.byteLength===0)throw new Error("Processed buffer is empty or null");r=r.slice(0)}catch(a){return O._logError(`Failed to get processed buffer: ${a.message}`),Promise.resolve({buffer:this._originalBuffer.slice(0),tagsApplied:!1,message:`Failed to process MP4 buffer: ${a.message}`})}let t=!0,e;return r.byteLength!==this._originalBuffer.byteLength&&(t=!0,e=`Successfully applied tags (original: ${this._originalBuffer.byteLength}, new: ${r.byteLength})`),Promise.resolve({buffer:r,tagsApplied:t,message:e})}catch(r){const t=`Failed to get processed buffer: ${r.message}. Using original buffer as fallback.`;O._logError(t);try{return Promise.resolve({buffer:this._originalBuffer.slice(0),tagsApplied:!1,message:t})}catch(e){return O._logError(`CRITICAL: Failed to create copy of original buffer: ${e.message}`),Promise.resolve({buffer:new ArrayBuffer(0),tagsApplied:!1,message:`CRITICAL ERROR: ${t} + ${e.message}`})}}}}function Pe(i){if(typeof i!="string")throw new TypeError("Expected a string");return i.replace(/[|\\{}()[\]^$+*?.]/g,"\\$&").replace(/-/g,"\\x2d")}var wt=(i=>(i[i.Main=0]="Main",i[i.Feature=1]="Feature",i[i.Remixer=2]="Remixer",i[i.Producer=3]="Producer",i))(wt||{}),Et=(i=>(i[i.Remix=0]="Remix",i[i.Flip=1]="Flip",i[i.Bootleg=2]="Bootleg",i[i.Mashup=3]="Mashup",i[i.Edit=4]="Edit",i))(Et||{});function Le(i){switch(i.toLowerCase().trim()){case"flip":return 1;case"bootleg":return 2;case"mashup":return 3;case"edit":return 4;case"remix":default:return 0}}function Me(i,r){return i.map((t,e)=>({data:t,index:e})).sort((t,e)=>t.data[r]<e.data[r]?-1:t.data[r]>e.data[r]?1:t.index-e.index).map(t=>t.data)}class X{constructor(r,t,e){this.title=r,this.username=t,this.userPermalink=e}static titleSeparators=["-","\u2013","\u2014","~"];static featureSeparators=["featuring","feat.","feat","ft."," ft ","w/"," w /"," w ","+"];static combiningFeatureSeparators=[...X.featureSeparators,", "," & "," x "];static remixIndicators=["remix","flip","bootleg","mashup","edit"];static producerIndicators=["prod. by ","prod by ","prod. ","p. ","prod "];static promotions=["free download","video in description","video in desc","vid in desc","Original Mix"];getArtists(){const r=this.preprocessTitle(this.title);let t=[];const e=this.splitByTitleSeparators(r,!0);t=t.concat(e.artistNames.map((u,f)=>({name:u,type:f===0?0:1})));const a=this.splitByProducer(e.title,!0);t=t.concat(a.artistNames.map(u=>({name:u,type:3})));const s=this.splitByRemix(a.title,!0);t=t.concat(s.artists);const n=this.splitByUnsafeProducers(s.title,!0);t=t.concat(n.artistNames.map(u=>({name:u,type:3})));const o=this.splitByFeatures(s.title,!0);if(t=t.concat(o.artistNames.map(u=>({name:u,type:1}))),!t.some(u=>u.type===0)){const u={name:this.sanitizeArtistName(this.username)||this.userPermalink,type:0};u.name&&(t.length>0?t=[u,...t]:t.push(u))}t=t.map(u=>this.removeTwitterHandle(u));const g=[];for(const u of t)g.some(f=>f.name==u.name)||g.push(u);return Me(g,"type")}getTitle(){let r=this.preprocessTitle(this.title);return r=this.splitByTitleSeparators(r,!1).title,r=this.splitByProducer(r,!1).title,r=this.splitByRemix(r,!1).title,r=this.splitByFeatures(r,!1).title,r=this.splitByUnsafeProducers(r,!1).title,this.sanitizeTitle(r)}removeTwitterHandle(r){r.name=r.name.replace(/^[@]+/,"");const t=/^([^(]+)\s?\(\s?@.+\)?$/.exec(r.name);return t&&t.length>1&&(r.name=t[1].trimEnd()),r}splitByTitleSeparators(r,t){let e=[];if(this.includes(r,X.titleSeparators)){const a=this.escapeRegexArray(X.titleSeparators),s=new RegExp(`^((.+)\\s[${a}]\\s)(.+)$`).exec(r);if(s&&s.length>0){const[n,o,g]=s;t&&(e=this.getArtistNames(g)),r=r.replace(o,"")}}return{artistNames:e,title:r}}splitByFeatures(r,t){let e=[];if(this.includes(r,X.featureSeparators)){const a=this.escapeRegexArray(X.featureSeparators).join("|"),s=new RegExp(`(?:${a})([^\\[\\]\\(\\)]+)`,"i").exec(r);if(s&&s.length>0){const[n,o]=s;t&&(e=this.getArtistNames(o)),r=r.replace(n,"")}}return{artistNames:e,title:r}}splitByProducer(r,t){let e=[];if(this.includes(r,X.producerIndicators)){const a=this.escapeRegexArray(X.producerIndicators).join("|"),s=new RegExp(`(?:${a})([^\\[\\]\\(\\)]+)`,"i").exec(r);if(s&&s.length>0){const[n,o]=s;t&&(e=this.getArtistNames(o)),r=r.replace(n,"")}}return{artistNames:e,title:r}}splitByUnsafeProducers(r,t){let e=[];const a=this.escapeRegexArray(X.featureSeparators).join("|"),s=new RegExp(`[\\(\\[](?!${a})(.+)[\\)\\]]`,"i").exec(r);if(s&&s.length>0){const[n,o]=s;t&&(e=this.getArtistNames(o)),r=r.replace(n,"")}return{artistNames:e,title:r}}splitByRemix(r,t){let e=[];if(this.includes(r,X.remixIndicators)){const a=this.escapeRegexArray(X.remixIndicators).join("|"),s=new RegExp(`[\\[\\(](.+)(${a})[\\]\\)]`,"i").exec(r);if(s&&s.length>0){const[n,o,g]=s;if(t){const u=this.getArtistNames(o),f=Le(g);e=u.map(m=>({name:m,type:2,remixType:f}))}r=r.replace(n,"")}}return{artists:e,title:r}}getArtistNames(r){const t=this.escapeRegexArray(X.combiningFeatureSeparators).join("|"),e=new RegExp(`(.+)\\s?(${t})\\s?(.+)`,"i"),a=[];for(;;){const s=e.exec(r);if(!s){a.push(this.sanitizeArtistName(r));break}a.push(this.sanitizeArtistName(s[3])),r=s[1]}return a.reverse()}preprocessTitle(r){r=r.replace(/\+([+]+)/g,"+");const t=X.promotions.join("|"),e=new RegExp(`[\\[\\(]?\\s*(${t})\\s*[\\]\\)]?`,"i");return r.replace(e,"")}sanitizeArtistName(r){return this.removeNonAsciiCharacters(r).trim()}sanitizeTitle(r){let t=this.removeNonAsciiCharacters(r);return t=t.replace("()","").replace("[]",""),t.trim()}removeNonAsciiCharacters(r){return $t.replace(r,$t("[^\\p{L}\\p{N}\\p{Zs}\0-\x7F]","g"),"")}includes(r,t){const e=r.toLowerCase();return t.some(a=>e.includes(a))}escapeRegexArray(r){return r.map(t=>Pe(t))}}var bt=function(){function i(){this.listeners={}}var r=i.prototype;return r.on=function(t,e){this.listeners[t]||(this.listeners[t]=[]),this.listeners[t].push(e)},r.off=function(t,e){if(!this.listeners[t])return!1;var a=this.listeners[t].indexOf(e);return this.listeners[t]=this.listeners[t].slice(0),this.listeners[t].splice(a,1),a>-1},r.trigger=function(t){var e=this.listeners[t];if(e)if(arguments.length===2)for(var a=e.length,s=0;s<a;++s)e[s].call(this,arguments[1]);else for(var n=Array.prototype.slice.call(arguments,1),o=e.length,g=0;g<o;++g)e[g].apply(this,n)},r.dispose=function(){this.listeners={}},r.pipe=function(t){this.on("data",function(e){t.push(e)})},i}();function st(){return st=Object.assign?Object.assign.bind():function(i){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var e in t)({}).hasOwnProperty.call(t,e)&&(i[e]=t[e])}return i},st.apply(null,arguments)}var yt,Bt;function _e(){if(Bt)return yt;Bt=1;var i;return typeof window<"u"?i=window:typeof kt<"u"?i=kt:typeof self<"u"?i=self:i={},yt=i,yt}var Ue=_e();const Xt=te(Ue);var xe=function(i){return Xt.atob?Xt.atob(i):Buffer.from(i,"base64").toString("binary")};function Ce(i){for(var r=xe(i),t=new Uint8Array(r.length),e=0;e<r.length;e++)t[e]=r.charCodeAt(e);return t}/*! @name m3u8-parser @version 7.2.0 @license Apache-2.0 */class Be extends bt{constructor(){super(),this.buffer=""}push(r){let t;for(this.buffer+=r,t=this.buffer.indexOf(`
`);t>-1;t=this.buffer.indexOf(`
`))this.trigger("data",this.buffer.substring(0,t)),this.buffer=this.buffer.substring(t+1)}}const Xe="	",Tt=function(i){const r=/([0-9.]*)?@?([0-9.]*)?/.exec(i||""),t={};return r[1]&&(t.length=parseInt(r[1],10)),r[2]&&(t.offset=parseInt(r[2],10)),t},He=function(){const i='(?:[^=]*)=(?:"[^"]*"|[^,]*)';return new RegExp("(?:^|,)("+i+")")},B=function(i){const r={};if(!i)return r;const t=i.split(He());let e=t.length,a;for(;e--;)t[e]!==""&&(a=/([^=]*)=(.*)/.exec(t[e]).slice(1),a[0]=a[0].replace(/^\s+|\s+$/g,""),a[1]=a[1].replace(/^\s+|\s+$/g,""),a[1]=a[1].replace(/^['"](.*)['"]$/g,"$1"),r[a[0]]=a[1]);return r},Ht=i=>{const r=i.split("x"),t={};return r[0]&&(t.width=parseInt(r[0],10)),r[1]&&(t.height=parseInt(r[1],10)),t};class We extends bt{constructor(){super(),this.customParsers=[],this.tagMappers=[]}push(r){let t,e;if(r=r.trim(),r.length!==0){if(r[0]!=="#"){this.trigger("data",{type:"uri",uri:r});return}this.tagMappers.reduce((a,s)=>{const n=s(r);return n===r?a:a.concat([n])},[r]).forEach(a=>{for(let s=0;s<this.customParsers.length;s++)if(this.customParsers[s].call(this,a))return;if(a.indexOf("#EXT")!==0){this.trigger("data",{type:"comment",text:a.slice(1)});return}if(a=a.replace("\r",""),t=/^#EXTM3U/.exec(a),t){this.trigger("data",{type:"tag",tagType:"m3u"});return}if(t=/^#EXTINF:([0-9\.]*)?,?(.*)?$/.exec(a),t){e={type:"tag",tagType:"inf"},t[1]&&(e.duration=parseFloat(t[1])),t[2]&&(e.title=t[2]),this.trigger("data",e);return}if(t=/^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(a),t){e={type:"tag",tagType:"targetduration"},t[1]&&(e.duration=parseInt(t[1],10)),this.trigger("data",e);return}if(t=/^#EXT-X-VERSION:([0-9.]*)?/.exec(a),t){e={type:"tag",tagType:"version"},t[1]&&(e.version=parseInt(t[1],10)),this.trigger("data",e);return}if(t=/^#EXT-X-MEDIA-SEQUENCE:(\-?[0-9.]*)?/.exec(a),t){e={type:"tag",tagType:"media-sequence"},t[1]&&(e.number=parseInt(t[1],10)),this.trigger("data",e);return}if(t=/^#EXT-X-DISCONTINUITY-SEQUENCE:(\-?[0-9.]*)?/.exec(a),t){e={type:"tag",tagType:"discontinuity-sequence"},t[1]&&(e.number=parseInt(t[1],10)),this.trigger("data",e);return}if(t=/^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(a),t){e={type:"tag",tagType:"playlist-type"},t[1]&&(e.playlistType=t[1]),this.trigger("data",e);return}if(t=/^#EXT-X-BYTERANGE:(.*)?$/.exec(a),t){e=st(Tt(t[1]),{type:"tag",tagType:"byterange"}),this.trigger("data",e);return}if(t=/^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(a),t){e={type:"tag",tagType:"allow-cache"},t[1]&&(e.allowed=!/NO/.test(t[1])),this.trigger("data",e);return}if(t=/^#EXT-X-MAP:(.*)$/.exec(a),t){if(e={type:"tag",tagType:"map"},t[1]){const s=B(t[1]);s.URI&&(e.uri=s.URI),s.BYTERANGE&&(e.byterange=Tt(s.BYTERANGE))}this.trigger("data",e);return}if(t=/^#EXT-X-STREAM-INF:(.*)$/.exec(a),t){e={type:"tag",tagType:"stream-inf"},t[1]&&(e.attributes=B(t[1]),e.attributes.RESOLUTION&&(e.attributes.RESOLUTION=Ht(e.attributes.RESOLUTION)),e.attributes.BANDWIDTH&&(e.attributes.BANDWIDTH=parseInt(e.attributes.BANDWIDTH,10)),e.attributes["FRAME-RATE"]&&(e.attributes["FRAME-RATE"]=parseFloat(e.attributes["FRAME-RATE"])),e.attributes["PROGRAM-ID"]&&(e.attributes["PROGRAM-ID"]=parseInt(e.attributes["PROGRAM-ID"],10))),this.trigger("data",e);return}if(t=/^#EXT-X-MEDIA:(.*)$/.exec(a),t){e={type:"tag",tagType:"media"},t[1]&&(e.attributes=B(t[1])),this.trigger("data",e);return}if(t=/^#EXT-X-ENDLIST/.exec(a),t){this.trigger("data",{type:"tag",tagType:"endlist"});return}if(t=/^#EXT-X-DISCONTINUITY/.exec(a),t){this.trigger("data",{type:"tag",tagType:"discontinuity"});return}if(t=/^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(a),t){e={type:"tag",tagType:"program-date-time"},t[1]&&(e.dateTimeString=t[1],e.dateTimeObject=new Date(t[1])),this.trigger("data",e);return}if(t=/^#EXT-X-KEY:(.*)$/.exec(a),t){e={type:"tag",tagType:"key"},t[1]&&(e.attributes=B(t[1]),e.attributes.IV&&(e.attributes.IV.substring(0,2).toLowerCase()==="0x"&&(e.attributes.IV=e.attributes.IV.substring(2)),e.attributes.IV=e.attributes.IV.match(/.{8}/g),e.attributes.IV[0]=parseInt(e.attributes.IV[0],16),e.attributes.IV[1]=parseInt(e.attributes.IV[1],16),e.attributes.IV[2]=parseInt(e.attributes.IV[2],16),e.attributes.IV[3]=parseInt(e.attributes.IV[3],16),e.attributes.IV=new Uint32Array(e.attributes.IV))),this.trigger("data",e);return}if(t=/^#EXT-X-START:(.*)$/.exec(a),t){e={type:"tag",tagType:"start"},t[1]&&(e.attributes=B(t[1]),e.attributes["TIME-OFFSET"]=parseFloat(e.attributes["TIME-OFFSET"]),e.attributes.PRECISE=/YES/.test(e.attributes.PRECISE)),this.trigger("data",e);return}if(t=/^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(a),t){e={type:"tag",tagType:"cue-out-cont"},t[1]?e.data=t[1]:e.data="",this.trigger("data",e);return}if(t=/^#EXT-X-CUE-OUT:(.*)?$/.exec(a),t){e={type:"tag",tagType:"cue-out"},t[1]?e.data=t[1]:e.data="",this.trigger("data",e);return}if(t=/^#EXT-X-CUE-IN:?(.*)?$/.exec(a),t){e={type:"tag",tagType:"cue-in"},t[1]?e.data=t[1]:e.data="",this.trigger("data",e);return}if(t=/^#EXT-X-SKIP:(.*)$/.exec(a),t&&t[1]){e={type:"tag",tagType:"skip"},e.attributes=B(t[1]),e.attributes.hasOwnProperty("SKIPPED-SEGMENTS")&&(e.attributes["SKIPPED-SEGMENTS"]=parseInt(e.attributes["SKIPPED-SEGMENTS"],10)),e.attributes.hasOwnProperty("RECENTLY-REMOVED-DATERANGES")&&(e.attributes["RECENTLY-REMOVED-DATERANGES"]=e.attributes["RECENTLY-REMOVED-DATERANGES"].split(Xe)),this.trigger("data",e);return}if(t=/^#EXT-X-PART:(.*)$/.exec(a),t&&t[1]){e={type:"tag",tagType:"part"},e.attributes=B(t[1]),["DURATION"].forEach(function(s){e.attributes.hasOwnProperty(s)&&(e.attributes[s]=parseFloat(e.attributes[s]))}),["INDEPENDENT","GAP"].forEach(function(s){e.attributes.hasOwnProperty(s)&&(e.attributes[s]=/YES/.test(e.attributes[s]))}),e.attributes.hasOwnProperty("BYTERANGE")&&(e.attributes.byterange=Tt(e.attributes.BYTERANGE)),this.trigger("data",e);return}if(t=/^#EXT-X-SERVER-CONTROL:(.*)$/.exec(a),t&&t[1]){e={type:"tag",tagType:"server-control"},e.attributes=B(t[1]),["CAN-SKIP-UNTIL","PART-HOLD-BACK","HOLD-BACK"].forEach(function(s){e.attributes.hasOwnProperty(s)&&(e.attributes[s]=parseFloat(e.attributes[s]))}),["CAN-SKIP-DATERANGES","CAN-BLOCK-RELOAD"].forEach(function(s){e.attributes.hasOwnProperty(s)&&(e.attributes[s]=/YES/.test(e.attributes[s]))}),this.trigger("data",e);return}if(t=/^#EXT-X-PART-INF:(.*)$/.exec(a),t&&t[1]){e={type:"tag",tagType:"part-inf"},e.attributes=B(t[1]),["PART-TARGET"].forEach(function(s){e.attributes.hasOwnProperty(s)&&(e.attributes[s]=parseFloat(e.attributes[s]))}),this.trigger("data",e);return}if(t=/^#EXT-X-PRELOAD-HINT:(.*)$/.exec(a),t&&t[1]){e={type:"tag",tagType:"preload-hint"},e.attributes=B(t[1]),["BYTERANGE-START","BYTERANGE-LENGTH"].forEach(function(s){if(e.attributes.hasOwnProperty(s)){e.attributes[s]=parseInt(e.attributes[s],10);const n=s==="BYTERANGE-LENGTH"?"length":"offset";e.attributes.byterange=e.attributes.byterange||{},e.attributes.byterange[n]=e.attributes[s],delete e.attributes[s]}}),this.trigger("data",e);return}if(t=/^#EXT-X-RENDITION-REPORT:(.*)$/.exec(a),t&&t[1]){e={type:"tag",tagType:"rendition-report"},e.attributes=B(t[1]),["LAST-MSN","LAST-PART"].forEach(function(s){e.attributes.hasOwnProperty(s)&&(e.attributes[s]=parseInt(e.attributes[s],10))}),this.trigger("data",e);return}if(t=/^#EXT-X-DATERANGE:(.*)$/.exec(a),t&&t[1]){e={type:"tag",tagType:"daterange"},e.attributes=B(t[1]),["ID","CLASS"].forEach(function(n){e.attributes.hasOwnProperty(n)&&(e.attributes[n]=String(e.attributes[n]))}),["START-DATE","END-DATE"].forEach(function(n){e.attributes.hasOwnProperty(n)&&(e.attributes[n]=new Date(e.attributes[n]))}),["DURATION","PLANNED-DURATION"].forEach(function(n){e.attributes.hasOwnProperty(n)&&(e.attributes[n]=parseFloat(e.attributes[n]))}),["END-ON-NEXT"].forEach(function(n){e.attributes.hasOwnProperty(n)&&(e.attributes[n]=/YES/i.test(e.attributes[n]))}),["SCTE35-CMD"," SCTE35-OUT","SCTE35-IN"].forEach(function(n){e.attributes.hasOwnProperty(n)&&(e.attributes[n]=e.attributes[n].toString(16))});const s=/^X-([A-Z]+-)+[A-Z]+$/;for(const n in e.attributes){if(!s.test(n))continue;const o=/[0-9A-Fa-f]{6}/g.test(e.attributes[n]),g=/^\d+(\.\d+)?$/.test(e.attributes[n]);e.attributes[n]=o?e.attributes[n].toString(16):g?parseFloat(e.attributes[n]):String(e.attributes[n])}this.trigger("data",e);return}if(t=/^#EXT-X-INDEPENDENT-SEGMENTS/.exec(a),t){this.trigger("data",{type:"tag",tagType:"independent-segments"});return}if(t=/^#EXT-X-I-FRAMES-ONLY/.exec(a),t){this.trigger("data",{type:"tag",tagType:"i-frames-only"});return}if(t=/^#EXT-X-CONTENT-STEERING:(.*)$/.exec(a),t){e={type:"tag",tagType:"content-steering"},e.attributes=B(t[1]),this.trigger("data",e);return}if(t=/^#EXT-X-I-FRAME-STREAM-INF:(.*)$/.exec(a),t){e={type:"tag",tagType:"i-frame-playlist"},e.attributes=B(t[1]),e.attributes.URI&&(e.uri=e.attributes.URI),e.attributes.BANDWIDTH&&(e.attributes.BANDWIDTH=parseInt(e.attributes.BANDWIDTH,10)),e.attributes.RESOLUTION&&(e.attributes.RESOLUTION=Ht(e.attributes.RESOLUTION)),e.attributes["AVERAGE-BANDWIDTH"]&&(e.attributes["AVERAGE-BANDWIDTH"]=parseInt(e.attributes["AVERAGE-BANDWIDTH"],10)),e.attributes["FRAME-RATE"]&&(e.attributes["FRAME-RATE"]=parseFloat(e.attributes["FRAME-RATE"])),this.trigger("data",e);return}if(t=/^#EXT-X-DEFINE:(.*)$/.exec(a),t){e={type:"tag",tagType:"define"},e.attributes=B(t[1]),this.trigger("data",e);return}this.trigger("data",{type:"tag",data:a.slice(4)})})}}addParser({expression:r,customType:t,dataParser:e,segment:a}){typeof e!="function"&&(e=s=>s),this.customParsers.push(s=>{if(r.exec(s))return this.trigger("data",{type:"custom",data:e(s),customType:t,segment:a}),!0})}addTagMapper({expression:r,map:t}){const e=a=>r.test(a)?t(a):a;this.tagMappers.push(e)}}const Ge=i=>i.toLowerCase().replace(/-(\w)/g,r=>r[1].toUpperCase()),et=function(i){const r={};return Object.keys(i).forEach(function(t){r[Ge(t)]=i[t]}),r},It=function(i){const{serverControl:r,targetDuration:t,partTargetDuration:e}=i;if(!r)return;const a="#EXT-X-SERVER-CONTROL",s="holdBack",n="partHoldBack",o=t&&t*3,g=e&&e*2;t&&!r.hasOwnProperty(s)&&(r[s]=o,this.trigger("info",{message:`${a} defaulting HOLD-BACK to targetDuration * 3 (${o}).`})),o&&r[s]<o&&(this.trigger("warn",{message:`${a} clamping HOLD-BACK (${r[s]}) to targetDuration * 3 (${o})`}),r[s]=o),e&&!r.hasOwnProperty(n)&&(r[n]=e*3,this.trigger("info",{message:`${a} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${r[n]}).`})),e&&r[n]<g&&(this.trigger("warn",{message:`${a} clamping PART-HOLD-BACK (${r[n]}) to partTargetDuration * 2 (${g}).`}),r[n]=g)};class Ye extends bt{constructor(r={}){super(),this.lineStream=new Be,this.parseStream=new We,this.lineStream.pipe(this.parseStream),this.mainDefinitions=r.mainDefinitions||{},this.params=new URL(r.uri,"https://a.com").searchParams,this.lastProgramDateTime=null;const t=this,e=[];let a={},s,n,o=!1;const g=function(){},u={AUDIO:{},VIDEO:{},"CLOSED-CAPTIONS":{},SUBTITLES:{}},f="urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed";let m=0;this.manifest={allowCache:!0,discontinuityStarts:[],dateRanges:[],iFramePlaylists:[],segments:[]};let E=0,y=0;const A={};this.on("end",()=>{a.uri||!a.parts&&!a.preloadHints||(!a.map&&s&&(a.map=s),!a.key&&n&&(a.key=n),!a.timeline&&typeof m=="number"&&(a.timeline=m),this.manifest.preloadSegment=a)}),this.parseStream.on("data",function(l){let I,D;if(t.manifest.definitions){for(const c in t.manifest.definitions)if(l.uri&&(l.uri=l.uri.replace(`{$${c}}`,t.manifest.definitions[c])),l.attributes)for(const d in l.attributes)typeof l.attributes[d]=="string"&&(l.attributes[d]=l.attributes[d].replace(`{$${c}}`,t.manifest.definitions[c]))}({tag(){({version(){l.version&&(this.manifest.version=l.version)},"allow-cache"(){this.manifest.allowCache=l.allowed,"allowed"in l||(this.trigger("info",{message:"defaulting allowCache to YES"}),this.manifest.allowCache=!0)},byterange(){const c={};"length"in l&&(a.byterange=c,c.length=l.length,"offset"in l||(l.offset=E)),"offset"in l&&(a.byterange=c,c.offset=l.offset),E=c.offset+c.length},endlist(){this.manifest.endList=!0},inf(){"mediaSequence"in this.manifest||(this.manifest.mediaSequence=0,this.trigger("info",{message:"defaulting media sequence to zero"})),"discontinuitySequence"in this.manifest||(this.manifest.discontinuitySequence=0,this.trigger("info",{message:"defaulting discontinuity sequence to zero"})),l.title&&(a.title=l.title),l.duration>0&&(a.duration=l.duration),l.duration===0&&(a.duration=.01,this.trigger("info",{message:"updating zero segment duration to a small value"})),this.manifest.segments=e},key(){if(!l.attributes){this.trigger("warn",{message:"ignoring key declaration without attribute list"});return}if(l.attributes.METHOD==="NONE"){n=null;return}if(!l.attributes.URI){this.trigger("warn",{message:"ignoring key declaration without URI"});return}if(l.attributes.KEYFORMAT==="com.apple.streamingkeydelivery"){this.manifest.contentProtection=this.manifest.contentProtection||{},this.manifest.contentProtection["com.apple.fps.1_0"]={attributes:l.attributes};return}if(l.attributes.KEYFORMAT==="com.microsoft.playready"){this.manifest.contentProtection=this.manifest.contentProtection||{},this.manifest.contentProtection["com.microsoft.playready"]={uri:l.attributes.URI};return}if(l.attributes.KEYFORMAT===f){if(["SAMPLE-AES","SAMPLE-AES-CTR","SAMPLE-AES-CENC"].indexOf(l.attributes.METHOD)===-1){this.trigger("warn",{message:"invalid key method provided for Widevine"});return}if(l.attributes.METHOD==="SAMPLE-AES-CENC"&&this.trigger("warn",{message:"SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead"}),l.attributes.URI.substring(0,23)!=="data:text/plain;base64,"){this.trigger("warn",{message:"invalid key URI provided for Widevine"});return}if(!(l.attributes.KEYID&&l.attributes.KEYID.substring(0,2)==="0x")){this.trigger("warn",{message:"invalid key ID provided for Widevine"});return}this.manifest.contentProtection=this.manifest.contentProtection||{},this.manifest.contentProtection["com.widevine.alpha"]={attributes:{schemeIdUri:l.attributes.KEYFORMAT,keyId:l.attributes.KEYID.substring(2)},pssh:Ce(l.attributes.URI.split(",")[1])};return}l.attributes.METHOD||this.trigger("warn",{message:"defaulting key method to AES-128"}),n={method:l.attributes.METHOD||"AES-128",uri:l.attributes.URI},typeof l.attributes.IV<"u"&&(n.iv=l.attributes.IV)},"media-sequence"(){if(!isFinite(l.number)){this.trigger("warn",{message:"ignoring invalid media sequence: "+l.number});return}this.manifest.mediaSequence=l.number},"discontinuity-sequence"(){if(!isFinite(l.number)){this.trigger("warn",{message:"ignoring invalid discontinuity sequence: "+l.number});return}this.manifest.discontinuitySequence=l.number,m=l.number},"playlist-type"(){if(!/VOD|EVENT/.test(l.playlistType)){this.trigger("warn",{message:"ignoring unknown playlist type: "+l.playlist});return}this.manifest.playlistType=l.playlistType},map(){s={},l.uri&&(s.uri=l.uri),l.byterange&&(s.byterange=l.byterange),n&&(s.key=n)},"stream-inf"(){if(this.manifest.playlists=e,this.manifest.mediaGroups=this.manifest.mediaGroups||u,!l.attributes){this.trigger("warn",{message:"ignoring empty stream-inf attributes"});return}a.attributes||(a.attributes={}),st(a.attributes,l.attributes)},media(){if(this.manifest.mediaGroups=this.manifest.mediaGroups||u,!(l.attributes&&l.attributes.TYPE&&l.attributes["GROUP-ID"]&&l.attributes.NAME)){this.trigger("warn",{message:"ignoring incomplete or missing media group"});return}const c=this.manifest.mediaGroups[l.attributes.TYPE];c[l.attributes["GROUP-ID"]]=c[l.attributes["GROUP-ID"]]||{},I=c[l.attributes["GROUP-ID"]],D={default:/yes/i.test(l.attributes.DEFAULT)},D.default?D.autoselect=!0:D.autoselect=/yes/i.test(l.attributes.AUTOSELECT),l.attributes.LANGUAGE&&(D.language=l.attributes.LANGUAGE),l.attributes.URI&&(D.uri=l.attributes.URI),l.attributes["INSTREAM-ID"]&&(D.instreamId=l.attributes["INSTREAM-ID"]),l.attributes.CHARACTERISTICS&&(D.characteristics=l.attributes.CHARACTERISTICS),l.attributes.FORCED&&(D.forced=/yes/i.test(l.attributes.FORCED)),I[l.attributes.NAME]=D},discontinuity(){m+=1,a.discontinuity=!0,this.manifest.discontinuityStarts.push(e.length)},"program-date-time"(){typeof this.manifest.dateTimeString>"u"&&(this.manifest.dateTimeString=l.dateTimeString,this.manifest.dateTimeObject=l.dateTimeObject),a.dateTimeString=l.dateTimeString,a.dateTimeObject=l.dateTimeObject;const{lastProgramDateTime:c}=this;this.lastProgramDateTime=new Date(l.dateTimeString).getTime(),c===null&&this.manifest.segments.reduceRight((d,b)=>(b.programDateTime=d-b.duration*1e3,b.programDateTime),this.lastProgramDateTime)},targetduration(){if(!isFinite(l.duration)||l.duration<0){this.trigger("warn",{message:"ignoring invalid target duration: "+l.duration});return}this.manifest.targetDuration=l.duration,It.call(this,this.manifest)},start(){if(!l.attributes||isNaN(l.attributes["TIME-OFFSET"])){this.trigger("warn",{message:"ignoring start declaration without appropriate attribute list"});return}this.manifest.start={timeOffset:l.attributes["TIME-OFFSET"],precise:l.attributes.PRECISE}},"cue-out"(){a.cueOut=l.data},"cue-out-cont"(){a.cueOutCont=l.data},"cue-in"(){a.cueIn=l.data},skip(){this.manifest.skip=et(l.attributes),this.warnOnMissingAttributes_("#EXT-X-SKIP",l.attributes,["SKIPPED-SEGMENTS"])},part(){o=!0;const c=this.manifest.segments.length,d=et(l.attributes);a.parts=a.parts||[],a.parts.push(d),d.byterange&&(d.byterange.hasOwnProperty("offset")||(d.byterange.offset=y),y=d.byterange.offset+d.byterange.length);const b=a.parts.length-1;this.warnOnMissingAttributes_(`#EXT-X-PART #${b} for segment #${c}`,l.attributes,["URI","DURATION"]),this.manifest.renditionReports&&this.manifest.renditionReports.forEach((w,T)=>{w.hasOwnProperty("lastPart")||this.trigger("warn",{message:`#EXT-X-RENDITION-REPORT #${T} lacks required attribute(s): LAST-PART`})})},"server-control"(){const c=this.manifest.serverControl=et(l.attributes);c.hasOwnProperty("canBlockReload")||(c.canBlockReload=!1,this.trigger("info",{message:"#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false"})),It.call(this,this.manifest),c.canSkipDateranges&&!c.hasOwnProperty("canSkipUntil")&&this.trigger("warn",{message:"#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set"})},"preload-hint"(){const c=this.manifest.segments.length,d=et(l.attributes),b=d.type&&d.type==="PART";a.preloadHints=a.preloadHints||[],a.preloadHints.push(d),d.byterange&&(d.byterange.hasOwnProperty("offset")||(d.byterange.offset=b?y:0,b&&(y=d.byterange.offset+d.byterange.length)));const w=a.preloadHints.length-1;if(this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${w} for segment #${c}`,l.attributes,["TYPE","URI"]),!!d.type)for(let T=0;T<a.preloadHints.length-1;T++){const S=a.preloadHints[T];S.type&&S.type===d.type&&this.trigger("warn",{message:`#EXT-X-PRELOAD-HINT #${w} for segment #${c} has the same TYPE ${d.type} as preload hint #${T}`})}},"rendition-report"(){const c=et(l.attributes);this.manifest.renditionReports=this.manifest.renditionReports||[],this.manifest.renditionReports.push(c);const d=this.manifest.renditionReports.length-1,b=["LAST-MSN","URI"];o&&b.push("LAST-PART"),this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${d}`,l.attributes,b)},"part-inf"(){this.manifest.partInf=et(l.attributes),this.warnOnMissingAttributes_("#EXT-X-PART-INF",l.attributes,["PART-TARGET"]),this.manifest.partInf.partTarget&&(this.manifest.partTargetDuration=this.manifest.partInf.partTarget),It.call(this,this.manifest)},daterange(){this.manifest.dateRanges.push(et(l.attributes));const c=this.manifest.dateRanges.length-1;this.warnOnMissingAttributes_(`#EXT-X-DATERANGE #${c}`,l.attributes,["ID","START-DATE"]);const d=this.manifest.dateRanges[c];d.endDate&&d.startDate&&new Date(d.endDate)<new Date(d.startDate)&&this.trigger("warn",{message:"EXT-X-DATERANGE END-DATE must be equal to or later than the value of the START-DATE"}),d.duration&&d.duration<0&&this.trigger("warn",{message:"EXT-X-DATERANGE DURATION must not be negative"}),d.plannedDuration&&d.plannedDuration<0&&this.trigger("warn",{message:"EXT-X-DATERANGE PLANNED-DURATION must not be negative"});const b=!!d.endOnNext;if(b&&!d.class&&this.trigger("warn",{message:"EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must have a CLASS attribute"}),b&&(d.duration||d.endDate)&&this.trigger("warn",{message:"EXT-X-DATERANGE with an END-ON-NEXT=YES attribute must not contain DURATION or END-DATE attributes"}),d.duration&&d.endDate){const w=d.startDate.getTime()+d.duration*1e3;this.manifest.dateRanges[c].endDate=new Date(w)}if(!A[d.id])A[d.id]=d;else{for(const T in A[d.id])if(d[T]&&JSON.stringify(A[d.id][T])!==JSON.stringify(d[T])){this.trigger("warn",{message:"EXT-X-DATERANGE tags with the same ID in a playlist must have the same attributes values"});break}const w=this.manifest.dateRanges.findIndex(T=>T.id===d.id);this.manifest.dateRanges[w]=st(this.manifest.dateRanges[w],d),A[d.id]=st(A[d.id],d),this.manifest.dateRanges.pop()}},"independent-segments"(){this.manifest.independentSegments=!0},"i-frames-only"(){this.manifest.iFramesOnly=!0,this.requiredCompatibilityversion(this.manifest.version,4)},"content-steering"(){this.manifest.contentSteering=et(l.attributes),this.warnOnMissingAttributes_("#EXT-X-CONTENT-STEERING",l.attributes,["SERVER-URI"])},define(){this.manifest.definitions=this.manifest.definitions||{};const c=(d,b)=>{if(d in this.manifest.definitions){this.trigger("error",{message:`EXT-X-DEFINE: Duplicate name ${d}`});return}this.manifest.definitions[d]=b};if("QUERYPARAM"in l.attributes){if("NAME"in l.attributes||"IMPORT"in l.attributes){this.trigger("error",{message:"EXT-X-DEFINE: Invalid attributes"});return}const d=this.params.get(l.attributes.QUERYPARAM);if(!d){this.trigger("error",{message:`EXT-X-DEFINE: No query param ${l.attributes.QUERYPARAM}`});return}c(l.attributes.QUERYPARAM,decodeURIComponent(d));return}if("NAME"in l.attributes){if("IMPORT"in l.attributes){this.trigger("error",{message:"EXT-X-DEFINE: Invalid attributes"});return}if(!("VALUE"in l.attributes)||typeof l.attributes.VALUE!="string"){this.trigger("error",{message:`EXT-X-DEFINE: No value for ${l.attributes.NAME}`});return}c(l.attributes.NAME,l.attributes.VALUE);return}if("IMPORT"in l.attributes){if(!this.mainDefinitions[l.attributes.IMPORT]){this.trigger("error",{message:`EXT-X-DEFINE: No value ${l.attributes.IMPORT} to import, or IMPORT used on main playlist`});return}c(l.attributes.IMPORT,this.mainDefinitions[l.attributes.IMPORT]);return}this.trigger("error",{message:"EXT-X-DEFINE: No attribute"})},"i-frame-playlist"(){this.manifest.iFramePlaylists.push({attributes:l.attributes,uri:l.uri,timeline:m}),this.warnOnMissingAttributes_("#EXT-X-I-FRAME-STREAM-INF",l.attributes,["BANDWIDTH","URI"])}}[l.tagType]||g).call(t)},uri(){a.uri=l.uri,e.push(a),this.manifest.targetDuration&&!("duration"in a)&&(this.trigger("warn",{message:"defaulting segment duration to the target duration"}),a.duration=this.manifest.targetDuration),n&&(a.key=n),a.timeline=m,s&&(a.map=s),y=0,this.lastProgramDateTime!==null&&(a.programDateTime=this.lastProgramDateTime,this.lastProgramDateTime+=a.duration*1e3),a={}},comment(){},custom(){l.segment?(a.custom=a.custom||{},a.custom[l.customType]=l.data):(this.manifest.custom=this.manifest.custom||{},this.manifest.custom[l.customType]=l.data)}})[l.type].call(t)})}requiredCompatibilityversion(r,t){(r<t||!r)&&this.trigger("warn",{message:`manifest must be at least version ${t}`})}warnOnMissingAttributes_(r,t,e){const a=[];e.forEach(function(s){t.hasOwnProperty(s)||a.push(s)}),a.length&&this.trigger("warn",{message:`${r} lacks required attribute(s): ${a.join(", ")}`})}push(r){this.lineStream.push(r)}end(){this.lineStream.push(`
`),this.manifest.dateRanges.length&&this.lastProgramDateTime===null&&this.trigger("warn",{message:"A playlist with EXT-X-DATERANGE tag must contain atleast one EXT-X-PROGRAM-DATE-TIME tag"}),this.lastProgramDateTime=null,this.trigger("end")}addParser(r){this.parseStream.addParser(r)}addTagMapper(r){this.parseStream.addTagMapper(r)}}class Y extends Error{constructor(r,t){super(`${r} (TrackId: ${t})`)}}const p=z.create("DownloadHandler",K.Debug),nt=new pt;function qe(i){return i&&i.kind==="track"&&i.state==="finished"&&(i.streamable||i.downloadable)}function Ve(i){return typeof i=="object"&&i!==null&&"protocol"in i}function je(i){if(i?.media?.transcodings?.length<1)return p.logDebug(`[DownloadHandler TrackId: ${i.id}] No transcodings array or empty in track.media.`),null;p.logDebug(`[DownloadHandler TrackId: ${i.id}] Raw transcodings:`,JSON.stringify(i.media.transcodings,null,2));const r=i.media.transcodings.filter(e=>(e.format?.protocol==="progressive"||e.format?.protocol==="hls")&&(e.format?.mime_type?.startsWith("audio/mpeg")||e.format?.mime_type?.startsWith("audio/mp4"))&&!e.snipped).map(e=>({protocol:e.format.protocol,url:e.url,quality:e.quality}));if(r.length<1)return p.logWarn("[DownloadHandler] No transcodings streams could be determined for Track "+i.id),null;let t=r.sort((e,a)=>e.quality==="hq"&&a.quality==="sq"?-1:e.quality==="sq"&&a.quality==="hq"?1:e.protocol==="progressive"&&a.protocol==="hls"?-1:e.protocol==="hls"&&a.protocol==="progressive"?1:0);return L("download-hq-version")||(t=t.filter(e=>e.quality!=="hq")),t.some(e=>e.quality==="hq")&&p.logInfo("[DownloadHandler] Including high quality streams for Track "+i.id),t}async function At(i,r,t,e,a){if(!qe(i))throw p.logError("[DownloadHandler] Track does not satisfy constraints needed to be downloadable",i),new Y("Track does not satisfy constraints needed to be downloadable",i.id);const s=[];if(L("download-original-version")&&i.downloadable&&i.has_downloads_left){const o=await nt.getOriginalDownloadUrl(i.id);if(o){const g={url:o,hls:!1,extension:void 0};s.push(g)}}const n=je(i);if(n&&s.push(...n),s.length<1){const o=`[DownloadHandler] No download details could be determined for track: "${i.title}"`;throw new Y(o,i.id)}for(const o of s){let g=null,u=!1,f=null,m;try{if(Ve(o))if(p.logDebug(`[DownloadHandler TrackId: ${i.id}] Getting stream details for transcoding`,o),g=await nt.getStreamDetails(o.url),g)u=g.hls,f=g.url,m=g.extension;else{p.logWarn(`[DownloadHandler TrackId: ${i.id}] Failed to get stream details for transcoding option (url: ${o.url}), trying next...`);continue}else g=o,f=g.url,u=g.hls,m=g.extension,p.logDebug(`[DownloadHandler TrackId: ${i.id}] Using direct download detail (original file?)`,{url:f,hls:u,extension:m});if(!f){p.logWarn(`[DownloadHandler TrackId: ${i.id}] No stream URL resolved, trying next...`,{downloadDetail:o});continue}let E=f,y=u;const A={trackId:i.id,duration:i.duration,uploadDate:new Date(i.display_date),streamUrl:E,fileExtension:m,title:i.title,username:i.user.username,userPermalink:i.user.permalink,artworkUrl:i.artwork_url,avatarUrl:i.user.avatar_url,trackNumber:r,albumName:t,playlistName:e,hls:y,wasOriginallyHls:u};p.logDebug(`[DownloadHandler TrackId: ${i.id}] Calling handleDownload with data`,{downloadData:A});const l=await ze(A,a);return p.logInfo(`[DownloadHandler TrackId: ${i.id}] handleDownload returned browserDownloadId: ${l} for stream: ${E}`),a(101,l),l}catch(E){p.logWarn(`[DownloadHandler TrackId: ${i.id}] Download attempt failed for option. Error: ${E?.message||E}`,{downloadDetail:o,streamUrl:f})}}throw p.logError(`[DownloadHandler TrackId: ${i.id}] All download attempts failed after trying ${s.length} options.`),a(102),new Y("No version of this track could be downloaded",i.id)}async function ze(i,r){p.logDebug(`[handleDownload ENTRY] Processing TrackId: ${i.trackId}. History check comes later.`);let t=i.username,e=i.title,a,s=i.artworkUrl,n,o,g,u,f,m,E,y,A;try{try{if(p.logInfo(`Initiating metadata processing for ${i.trackId} with payload`,{payload:i}),L("normalize-track")){const c=new X(i.title,i.username,i.userPermalink);let d=c.getArtists();L("include-producers")||(d=d.filter(w=>w.type!==wt.Producer)),t=d.map(w=>w.name).join(", "),e=c.getTitle();const b=d.filter(w=>w.type===wt.Remixer);if(b.length>0){const w=b.map(S=>S.name).join(" & "),T=Et[b[0].remixType||Et.Remix].toString();e+=` (${w} ${T})`}}t||(t="Unknown"),e||(e="Unknown"),a=ct(`${t} - ${e}`)}catch(c){throw p.logError(`[DownloadHandler TrackId: ${i.trackId}] Error during metadata processing:`,c),new Y(`Metadata processing failed for track ${i.trackId}: ${c.message}`,i.trackId)}g=!L("download-without-prompt"),u=L("default-download-location"),f=L("skipExistingFiles");try{const c=i.fileExtension||"mp3";if(A=a+"."+c,!g&&u)if(i.playlistName){const d=ct(i.playlistName);A=u+"/"+d+"/"+A}else A=u+"/"+A;if(f){let d="";if(u)if(i.playlistName){const M=ct(i.playlistName);d=u+"/"+M+"/"}else d=u+"/";const b=`track-${i.trackId}`,w=await ht("track-download-history")||{};if(p.logDebug(`[History Check] shouldSkipExisting=${f}, trackIdKey=${b}, history exists=${!!w}`),Object.keys(w).length>0&&p.logDebug(`[History Check] History has ${Object.keys(w).length} entries`),w&&w[b]){const M=w[b];p.logInfo(`Skipping download for TrackId: ${i.trackId}. Previously downloaded as: ${M.filename} at ${new Date(M.timestamp).toLocaleString()}`),r(101);const F=Math.floor(Math.random()*1e6)+1e3;return p.logInfo(`Using fake download ID ${F} for skipped track ${i.trackId}`),F}const T={filename:`${d}${a}.${i.fileExtension||"mp3"}`};p.logDebug(`[History Check] Searching downloads with exactQuery: ${JSON.stringify(T)}`);const S=await mt(T);p.logDebug(`[History Check] exactMatches found: ${S.length}`);const P=d.replace(/[-/^$*+?.()|[\]{}]/g,"\\$&"),U=a.replace(/[-/^$*+?.()|[\]{}]/g,"\\$&"),W={filenameRegex:`^${P}${U}\\..+$`};p.logDebug(`[History Check] Searching downloads with regexQuery: ${JSON.stringify(W)}`);const H=S.length===0?await mt(W):[];p.logDebug(`[History Check] regexMatches found: ${H.length}`);const x={filenameRegex:`${U}\\..+$`};p.logDebug(`[History Check] Searching downloads with titleArtistQuery: ${JSON.stringify(x)}`);const v=S.length===0&&H.length===0?await mt(x):[];p.logDebug(`[History Check] titleArtistMatches found: ${v.length}`);const k=[...S,...H,...v].filter(M=>M.state==="complete");if(k.length>0){p.logInfo(`Skipping download for TrackId: ${i.trackId}. File already exists in download history: ${k[0].filename}`),k.length>0&&k.slice(0,3).forEach((F,G)=>{p.logDebug(`[History Check] Match ${G}: filename=${F.filename}, state=${F.state}`)}),w[b]={filename:k[0].filename,timestamp:Date.now()},await C("track-download-history",w),r(101);const M=Math.floor(Math.random()*1e6)+1e3;return p.logInfo(`Using fake download ID ${M} for already downloaded track ${i.trackId}`),M}else p.logDebug(`No matching downloads found for TrackId: ${i.trackId} with filename base "${a}"`)}else p.logDebug("[History Check] Skip existing files check is disabled")}catch(c){throw p.logError(`[DownloadHandler TrackId: ${i.trackId}] Error during filename/skip logic:`,c),new Y(`Filename/skip logic failed for track ${i.trackId}: ${c.message}`,i.trackId)}try{s||(p.logInfo(`No Artwork URL in data. Fallback to User Avatar (TrackId: ${i.trackId})`),s=i.avatarUrl)}catch(c){p.logWarn(`[DownloadHandler TrackId: ${i.trackId}] Error checking/falling back artwork URL: ${c.message}. Will attempt with current value.`)}p.logInfo(`Starting download of '${a}' (TrackId: ${i.trackId})...`);let l;try{if(i.hls){p.logInfo(`[TrackId: ${i.trackId}] Starting HLS segment fetching from: ${i.streamUrl}`);const[c,d]=await nt.downloadStream(i.streamUrl,v=>{v!==void 0&&r(v*.1)});if(o=d,!c)throw new Error("HLS playlist download failed or returned empty buffer.");const b=new TextDecoder().decode(c),w=new Ye;w.push(b),w.end();let T=null;if(w.manifest?.segments?.length>0){const v=w.manifest.segments.find(k=>k.map?.uri);if(v?.map?.uri){let k=v.map.uri;try{k.startsWith("http://")||k.startsWith("https://")||(k=new URL(k,i.streamUrl).href)}catch{if(!(k.startsWith("http://")||k.startsWith("https://")))throw new Error(`Failed to resolve relative HLS init segment URI: ${k}`)}const[M]=await nt.downloadStream(k,F=>{F!==void 0&&r(5+F*.05)});if(!M)throw new Error(`Failed to download HLS init segment: ${k}`);T=M}}let S=[];if(w.manifest?.segments?.length>0&&(S=w.manifest.segments.map(v=>{try{return new URL(v.uri,i.streamUrl).href}catch{if(v.uri.startsWith("http://")||v.uri.startsWith("https://"))return v.uri;throw new Error(`Failed to resolve relative HLS segment URI: ${v.uri}`)}})),S.length===0&&!T)throw new Error("HLS playlist contains no media segments or init segment.");const P=[],U=S.length,W=T?10:5,H=T?80:85;for(let v=0;v<U;v++){const[k]=await nt.downloadStream(S[v],F=>{F!==void 0&&r(W+(v+F/100)/U*H)});if(!k)throw new Error(`Failed to download HLS segment: ${S[v]}`);P.push(k);const M=L("hls-rate-limit-delay-ms")??0;M>0&&v<U-1&&await new Promise(F=>setTimeout(F,M))}const x=[];T&&x.push(T),x.push(...P),n=Dt(x),i.hls=!1}else[n,o]=await nt.downloadStream(i.streamUrl,r);if(!n)throw new Y("Stream buffer is undefined after download attempts",i.trackId);if(l=n.slice(0),p.logDebug(`[DownloadHandler TrackId: ${i.trackId}] Initial streamBuffer byteLength: ${n?.byteLength}, originalStreamBuffer byteLength: ${l?.byteLength}`),i.wasOriginallyHls&&i.fileExtension&&/^[a-f0-9]{4}$/i.test(i.fileExtension)&&i.streamUrl.includes("/aac")?(p.logWarn(`[DownloadHandler TrackId: ${i.trackId}] Correcting likely bogus HLS AAC extension '${i.fileExtension}' to 'm4a'.`),i.fileExtension="m4a"):i.wasOriginallyHls&&i.fileExtension&&i.fileExtension.toLowerCase()==="m3u8"&&(p.logWarn(`[DownloadHandler TrackId: ${i.trackId}] Correcting HLS extension from 'm3u8' to 'm4a' (assuming AAC).`),i.fileExtension="m4a"),!i.fileExtension&&o){m=o.get("content-type");let c="mp3";m==="audio/mp4"?c="m4a":(m==="audio/x-wav"||m==="audio/wav")&&(c="wav"),i.fileExtension=c}else i.fileExtension||(i.fileExtension="mp3");if(L("ffmpeg-remux-hls-mp4")&&(i.fileExtension==="m4a"||i.fileExtension==="mp4")){r(85);const c=d=>{const b=85+Math.floor(d*.13);r(b)};try{p.logInfo(`[DownloadHandler TrackId: ${i.trackId}] Sending remux task to FFmpegManager. Original streamBuffer byteLength before remux: ${l?.byteLength}`),n=await $e(i.trackId.toString(),l,i.fileExtension||"mp4",c),(i.fileExtension==="m4a"||i.fileExtension==="mp4")&&(m="audio/mp4"),r(99),p.logInfo(`[DownloadHandler TrackId: ${i.trackId}] Remux task completed by FFmpegManager.`)}catch(d){p.logError(`[FFMPEG_MANAGER] Error during remux via manager. Proceeding with original. TrackId: ${i.trackId}`,d),n=l.slice(0),p.logDebug(`[DownloadHandler TrackId: ${i.trackId}] FFmpeg failed. Fallen back to originalStreamBuffer. ByteLength: ${n?.byteLength}`)}}else p.logDebug(`[DownloadHandler TrackId: ${i.trackId}] FFmpeg remux skipped (disabled or not applicable filetype).`)}catch(c){throw p.logError(`[DownloadHandler TrackId: ${i.trackId}] Error during download/FFmpeg stage:`,c),new Y(`Download/FFmpeg failed for track ${i.trackId}: ${c.message}`,i.trackId)}let I;try{if(L("set-metadata")&&n){let c;const d=n.slice(0);if(i.fileExtension==="mp3"?c=new Ne(d):(i.fileExtension==="m4a"||i.fileExtension==="mp4")&&(c=new O(d)),c){if(e&&c.setTitle(e),t&&c.setArtists([t]),i.albumName?c.setAlbum(i.albumName):i.playlistName&&c.setAlbum(i.playlistName),i.uploadDate){const w=i.uploadDate.getFullYear();isNaN(w)||c.setYear(w)}if(i.trackNumber&&c.setTrackNumber(i.trackNumber),s)try{const w=s.replace("-large.jpg","-t500x500.jpg"),T=await fetch(w);if(!T.ok)throw new Error(`Artwork fetch failed: ${T.statusText}`);const S=await T.arrayBuffer();c.setArtwork(S)}catch(w){p.logWarn(`[Artwork] Failed to fetch/set artwork for tagging TrackId: ${i.trackId}`,w)}const b=await c.getBuffer();b?.buffer?.byteLength>0?I=b.buffer:(p.logWarn("[Metadata] TagWriter returned invalid buffer. Using untagged buffer."),I=n.slice(0))}else p.logWarn(`[TrackId: ${i.trackId}] No TagWriter for ext '${i.fileExtension}'. Using untagged buffer.`),I=n.slice(0)}else p.logInfo(`[TrackId: ${i.trackId}] Metadata disabled or no streamBuffer. Using untagged.`),I=n?.slice(0)}catch(c){p.logError(`[DownloadHandler TrackId: ${i.trackId}] Error during metadata tagging:`,c),I=n?.slice(0)}let D;try{D=I?.byteLength>0?I:n?.byteLength>0?n.slice(0):l?.byteLength>0?l.slice(0):(()=>{throw new Y(`All buffers invalid for ${i.trackId}`,i.trackId)})(),D.byteLength<100&&p.logWarn(`Final buffer small: ${D.byteLength} bytes.`),p.logDebug(`[DownloadHandler TrackId: ${i.trackId}] Final bufferToSave byteLength before Blob creation: ${D?.byteLength}`);const c={};m?c.type=m:i.fileExtension==="mp3"?c.type="audio/mpeg":i.fileExtension==="m4a"||i.fileExtension==="mp4"?c.type="audio/mp4":i.fileExtension==="wav"&&(c.type="audio/wav");const d=new Blob([D],c);p.logInfo(`Creating URL for download (TrackId: ${i.trackId}). Service worker context: ${ee()}`),y=await re(d)}catch(c){throw p.logError(`[DownloadHandler TrackId: ${i.trackId}] Error preparing final buffer or Blob/DataURL:`,c),new Y(`Failed to prepare buffer/DataURL for track ${i.trackId}: ${c.message}`,i.trackId)}if(E=a+"."+(i.fileExtension||"mp3"),!g&&u){const c=u.endsWith("/")?u.slice(0,-1):u,d=i.playlistName?`/${ct(i.playlistName)}`:"",b=E.split("/").pop()||E;E=`${c}${d}/${b}`}try{p.logInfo(`Downloading track as '${E}' (TrackId: ${i.trackId}). SaveAs: ${g}`);const c=y;if(!c)throw new Error("Data URL for download is undefined.");const d=await ae(c,E,g);if(p.logInfo(`Successfully initiated browser download for '${a}' (TrackId: ${i.trackId}) with browserDownloadId: ${d}`),f){const b=`track-${i.trackId}`,w=await ht("track-download-history")||{};w[b]={filename:E,timestamp:Date.now()},await C("track-download-history",w)}return d}catch(c){throw p.logError(`[DownloadHandler TrackId: ${i.trackId}] Download save stage error:`,c),new Y(`Save failed for track ${i.trackId}: ${c.message}`,i.trackId)}}catch(l){throw p.logError(`[DownloadHandler TrackId: ${i.trackId}] Uncaught error in handleDownload`,l),l instanceof Y?l:new Y(`Unknown error during download: ${l?.message||l}`,i.trackId)}}const ot=z.create("Semaphore",K.Debug);class Ke{tasks=[];count;maxCount;constructor(r){if(r<=0)throw new Error("Semaphore count must be a positive integer.");this.count=r,this.maxCount=r}async acquire(){return ot.logDebug(`Acquire attempt: current count ${this.count}, tasks in queue ${this.tasks.length}`),this.count>0?(this.count--,ot.logDebug(`Acquired immediately. New count ${this.count}`),Promise.resolve()):new Promise(r=>{this.tasks.push(r),ot.logDebug(`Queued. New queue length ${this.tasks.length}`)})}release(){if(this.count++,ot.logDebug(`Released. New count ${this.count}`),this.tasks.length>0){const r=this.tasks.shift();r&&(this.count--,ot.logDebug(`Processing queued task. New count ${this.count}, New queue length ${this.tasks.length}`),r())}this.count>this.maxCount&&(ot.logWarn(`Semaphore count (${this.count}) exceeded maxCount (${this.maxCount}) after release. This might indicate an issue.`),this.count=this.maxCount)}async withLock(r){await this.acquire();try{return await r()}finally{this.release()}}getAvailablePermits(){return this.count}getQueueLength(){return this.tasks.length}}const Je="DOWNLOAD_SET",Wt="DOWNLOAD",Qe="DOWNLOAD_SET_RANGE",Ze="PAUSE_DOWNLOAD",tr="RESUME_DOWNLOAD";class q extends Error{constructor(r){super(r)}}const V={},lt=new pt,h=z.create("MessageHandler",K.Debug),Gt=Math.max(1,Math.min(Number(L("maxConcurrentTrackDownloads"))||3,10)),Yt=new Ke(Gt);h.logInfo(`Download track semaphore initialized with concurrency: ${Gt}`);async function er(i,r){let t={};try{t=JSON.parse(JSON.stringify(i))}catch{t={errorParsingMessage:!0,rawMessage:String(i)}}h.logDebug("[MessageHandler DEBUG] Received message:",t),(!i||i.downloadId===void 0&&i.type!==void 0&&i.type!=="GET_EXTENSION_CONFIG")&&h.logError("CRITICAL: MessageHandler received message with undefined or missing downloadId for a relevant type!",t);const e=r.tab?.id,{downloadId:a,url:s,type:n}=i;if(!e)return h.logWarn("Message received without a valid tab ID",{sender:r,message:i}),{error:"No valid tab ID found in message sender"};if(n==="GET_EXTENSION_CONFIG"){h.logDebug(`[MessageHandler] Received GET_EXTENSION_CONFIG request from tab ${e}`);try{const o=await Rt(!1),g={};for(const u of ie)o[u].secret||(g[u]={value:o[u].value});return h.logDebug("[MessageHandler] Sending non-secret configuration to content script:",g),Promise.resolve(g)}catch(o){return h.logError("[MessageHandler] Error loading or preparing configuration for content script:",o),Promise.reject({error:"Failed to retrieve extension configuration."})}}if(n===Wt&&a){const o={scdl_test_message:"HELLO_FROM_MESSAGE_HANDLER_EARLY_ACK_TEST",testForDownloadId:a,timestamp:Date.now()};h.logDebug(`[MessageHandler TX TestMsg] Attempting to send TEST MESSAGE to tab ${e} for downloadId ${a}:`,JSON.parse(JSON.stringify(o))),rt(e,o).then(()=>h.logInfo(`[MessageHandler TX TestMsg] TEST MESSAGE for downloadId ${a} successfully sent to tab ${e} (promise resolved).`)).catch(g=>h.logError(`[MessageHandler TX TestMsg] TEST MESSAGE for downloadId ${a} FAILED to send to tab ${e}:`,g))}try{if(n===Je){h.logDebug("Received set download request",{url:s,downloadId:a});const o={success:!0,originalDownloadId:a,message:"Set download command received, preparing tracks."};h.logDebug(`[MessageHandler TX Ack] Attempting to send EARLY ACK (DOWNLOAD_SET) to tab ${e} for downloadId ${a}:`,JSON.parse(JSON.stringify(o))),rt(e,o).then(()=>h.logInfo(`[MessageHandler TX Ack] EARLY ACK (DOWNLOAD_SET) for ${a} sent to tab ${e}.`)).catch(f=>h.logError("[MessageHandler TX Ack] DOWNLOAD_SET: Failed to send initial command ack to tab",f));const g=await lt.resolveUrl(s);if(!g)throw new q(`Failed to resolve SoundCloud URL. Check if you are logged in or if the URL is correct. URL: ${s}`);delete V[a];const u={success:!0,message:"Playlist download initiated. Processing tracks in background.",originalDownloadId:a};return h.logInfo(`[MessageHandler] Preparing IMMEDIATE response for DOWNLOAD_SET ${a}.`),(async()=>{try{const f=g.tracks.map(b=>b.id),m={},E={},y=b=>(w,T)=>{w!==void 0&&(m[b]=w),T!==void 0&&(E[b]=T);const S=Object.values(m).reduce((U,W)=>U+W,0),P=E[b];_(e,a,S/f.length,void 0,void 0,P)},A=g.set_type==="album"||g.set_type==="ep"?g.title:void 0,l=g.set_type!=="album"&&g.set_type!=="ep"?g.title:void 0,I=zt(f,10);let D=0,c=!1,d=null;for(const b of I){for(_(e,a,void 0,void 0,V[a]?"Paused":void 0);V[a];)h.logDebug(`Download ${a} is paused. Waiting...`),await new Promise(P=>setTimeout(P,1e3));const w=await lt.getTracks(b),T=Object.values(w).reverse();h.logInfo(`Downloading set chunk ${D+1}/${I.length}...`);const S=[];for(let P=0;P<T.length;P++){const U=g.tracks.findIndex(x=>x.id===T[P].id),W=U!==-1?U+1:void 0,H=Yt.withLock(()=>At(T[P],W,A,l,y(T[P].id)));S.push(H)}await Promise.all(S.map(P=>P.catch(U=>(h.logWarn("Failed to download track of set",U),c=!0,d=U,0)))),D++}c?(h.logWarn("Playlist download completed with errors. Last error:",d),_(e,a,102,d??new q("One or more tracks failed to download."))):(h.logInfo("Downloaded set successfully!"),_(e,a,101))}catch(f){h.logError(`[MessageHandler ASYNC DOWNLOAD_SET] Error during background processing for ${a}:`,f);const m=f instanceof Error?f:new q(String(f));_(e,a,void 0,m)}})(),u}else if(n===Wt){h.logDebug("Received track download request",{url:s,downloadId:a});const o={success:!0,originalDownloadId:a,message:"Download command received, preparing track."};h.logDebug(`[MessageHandler TX Ack] Attempting to send EARLY ACK (DOWNLOAD) to tab ${e} for downloadId ${a}:`,JSON.parse(JSON.stringify(o))),rt(e,o).then(()=>h.logInfo(`[MessageHandler TX Ack] EARLY ACK (DOWNLOAD) for ${a} sent to tab ${e}.`)).catch(f=>h.logError("[MessageHandler TX Ack] DOWNLOAD: Failed to send initial command ack to tab",f)),delete V[a];const g=await lt.resolveUrl(s);if(!g)throw new q(`Failed to resolve SoundCloud track URL: ${s}`);const u={success:!0,message:"Track resolved, download initiated.",originalDownloadId:a};return h.logInfo(`[MessageHandler] Preparing IMMEDIATE response for ${a} to content script.`),(async()=>{let f;try{const m=(y,A)=>{h.logDebug(`[MessageHandler ASYNC] reportTrackProgress (for downloadId ${a}) CALLED WITH: progress=${y}, browserDlIdFromCallback=${A}`),_(e,a,y,void 0,void 0,A)},E=i.forceRedownload===!0;if(E){h.logInfo(`Force redownload requested for track ID ${g.id}. Temporarily bypassing all history and skip checks.`),f=L("skipExistingFiles"),f&&(h.logInfo("Temporarily disabling skipExistingFiles for force redownload"),await C("skipExistingFiles",!1));const y=`track-${g.id}`,A=await ht("track-download-history")||{};A&&A[y]&&(delete A[y],await C("track-download-history",A),h.logInfo(`Temporarily removed track ${g.id} from download history for force redownload.`));try{const l=new X(g.title,g.user.username,g.user.permalink),I=l.getTitle(),D=`${l.getArtists().map(c=>c.name).join(", ")} - ${I}`.replace(/[-/^$*+?.()|[\]{}]/g,"\\$&")+"\\..+$";se(D)}catch(l){h.logError("Force redownload: Failed to erase matching entries from browser download history:",l)}}h.logInfo(`[MessageHandler ASYNC] Starting downloadTrack for ${a}`),At(g,void 0,void 0,void 0,m).then(y=>{h.logInfo(`[MessageHandler ASYNC] Track download process for ${a} finished by downloadTrack. Reported browser download ID: ${y}`)}).catch(y=>{h.logError(`[MessageHandler ASYNC] Error during downloadTrack execution for ${a}:`,y),_(e,a,void 0,y)}).finally(()=>{E&&f!==void 0&&(h.logInfo(`Restoring skipExistingFiles setting to ${f} after force redownload for ${g.id}`),C("skipExistingFiles",f))})}catch(m){h.logError(`[MessageHandler ASYNC] Error setting up async download task for ${a}:`,m),_(e,a,void 0,m)}})(),u}else if(n===Qe){const o=i;h.logInfo("Received set range download request",{url:s,start:o.start,end:o.end,downloadId:a,tabId:e});const g={success:!0,originalDownloadId:a,message:"Set range download command received, preparing tracks."};h.logDebug(`[MessageHandler TX Ack] Attempting to send EARLY ACK (DOWNLOAD_SET_RANGE) to tab ${e} for downloadId ${a}:`,JSON.parse(JSON.stringify(g))),rt(e,g).then(()=>h.logInfo(`[MessageHandler TX Ack] EARLY ACK (DOWNLOAD_SET_RANGE) for ${a} sent to tab ${e}.`)).catch(I=>h.logError("[MessageHandler TX Ack] DOWNLOAD_SET_RANGE: Failed to send initial command ack to tab",I));const u=o.start,f=o.end,m=await lt.resolveUrl(s);if(!m)throw new q(`Failed to resolve SoundCloud set. URL: ${s} returned null/undefined.`);if(!m.tracks)throw new q(`SoundCloud set is missing tracks property. URL: ${s}`);if(m.tracks.length===0)throw new q(`SoundCloud set is empty (has 0 tracks). URL: ${s}`);const E=m.tracks.length,y=Math.max(1,Math.min(u,E)),A=f===null?E:Math.max(y,Math.min(f,E));if(y>A)throw new q(`Invalid range: Start index (${y}) cannot be greater than End index (${A}). Total tracks: ${E}`);delete V[a];const l={success:!0,message:"Playlist range download initiated. Processing tracks in background.",originalDownloadId:a};return h.logInfo(`[MessageHandler] Preparing IMMEDIATE response for DOWNLOAD_SET_RANGE ${a}.`),(async()=>{try{h.logInfo(`Successfully resolved playlist with ${m.tracks.length} tracks for range processing`,{title:m.title,set_type:m.set_type}),h.logInfo(`Processing range: ${y} to ${A} (of ${E})`,{originalStart:u,originalEnd:f,validatedStart:y,validatedEnd:A,totalTracks:E});const I=m.tracks.slice(y-1,A);if(h.logInfo(`Selected ${I.length} tracks for download in range`),I.length===0){h.logWarn("Selected range resulted in zero tracks to download."),_(e,a,101);return}const D=m.set_type==="album"||m.set_type==="ep",c=D?m.title:void 0,d=D?void 0:m.title;h.logInfo("Set metadata for range:",{isAlbum:D,title:m.title,setAlbumName:c,setPlaylistName:d});const b={},w={},T=x=>(v,k)=>{v!==void 0&&(b[x]=v),k!==void 0&&(w[x]=k);const M=Object.values(b).reduce((G,gt)=>G+gt,0)/I.length,F=w[x];_(e,a,M,void 0,void 0,F)};let S=!1,P=null;const U=5,W=zt(I.map(x=>x.id),U);let H=0;h.logInfo(`Splitting range download into ${W.length} chunks of size ${U}`);for(const x of W){for(h.logInfo(`Starting range chunk ${H+1}/${W.length}`,{trackIds:x}),_(e,a,void 0,void 0,V[a]?"Paused":void 0);V[a];)h.logDebug(`Download ${a} is paused. Waiting...`),await new Promise(F=>setTimeout(F,1e3));h.logInfo(`Fetching track data for range chunk ${H+1}`);const v=await lt.getTracks(x),k=Object.values(v).reverse();h.logInfo(`Got ${k.length} tracks for range chunk ${H+1}/${W.length}`);const M=[];for(let F=0;F<k.length;F++){const G=k[F];for(h.logInfo(`Starting download for track ${F+1}/${k.length} in range chunk`,{id:G.id,title:G.title}),_(e,a,void 0,void 0,V[a]?"Paused":void 0);V[a];)h.logDebug(`Download ${a} is paused. Waiting...`),await new Promise(j=>setTimeout(j,1e3));const gt=m.tracks.findIndex(j=>j.id===G.id),Qt=gt!==-1?gt+1:void 0;try{const j=Yt.withLock(()=>At(G,Qt,c,d,T(G.id)));M.push(j)}catch(j){h.logError(`Failed to start download for track ${G.title} in range`,j),S=!0,P=j instanceof Error?j:new Error(String(j))}}h.logInfo(`Waiting for all downloads in range chunk ${H+1} to complete...`),await Promise.all(M.map(F=>F.catch(G=>(h.logWarn("Failed to download track of set range",G),S=!0,P=G,0)))),h.logInfo(`Completed all downloads in range chunk ${H+1}`),H++}S?(h.logWarn("Playlist range download completed with errors. Last error:",P),_(e,a,102,P??new q("One or more tracks failed to download in the selected range."))):(h.logInfo("Downloaded playlist range successfully!"),_(e,a,101))}catch(I){h.logError(`[MessageHandler ASYNC DOWNLOAD_SET_RANGE] Error during background processing for ${a}:`,I);const D=I instanceof Error?I:new q(String(I));_(e,a,void 0,D)}})(),l}else if(n===Ze){const o=i;return h.logInfo(`Received pause request for download: ${o.downloadId}`),V[o.downloadId]=!0,_(e,o.downloadId,void 0,void 0,"Paused"),{success:!0,action:"paused",downloadId:o.downloadId}}else if(n===tr){const o=i;return h.logInfo(`Received resume request for download: ${o.downloadId}`),V[o.downloadId]=!1,_(e,o.downloadId,void 0,void 0,"Resuming"),{success:!0,action:"resumed",downloadId:o.downloadId}}else throw new q(`Unknown download type: ${n}`)}catch(o){const g=o instanceof Error?o:new q(String(o));return _(e,a,void 0,g),h.logError("Download failed unexpectedly in message handler",o),{error:g.message}}}const qt=new pt,N=z.create("Background",K.Debug),rr=ne();async function Vt(i){await de(i)}async function jt(i){await ue(i)}N.logInfo("Starting with version: "+rr.version),oe(er),N.logInfo("Initial message listener registered."),Rt(!0).then(async()=>{N.logInfo("Initial configuration loaded. Setting initial DNR rules.");const i=L("oauth-token");await Vt(i);const r=L("client-id");await jt(r),i&&await Jt(i),ke()});function _(i,r,t,e,a,s){if(!r||typeof r!="string"||r.trim()===""){N.logError(`Attempted to send download progress with invalid downloadId: ${JSON.stringify(r)}`);const g=new Error().stack;if(N.logError(`Call stack for invalid downloadId: ${g}`),t===101||t===102){N.logWarn(`Attempting to send COMPLETION message (${t}) even with missing downloadId`);const u={downloadId:"undefined_completion",progress:t,error:typeof e=="string"?e:e instanceof Error?e.message:"",status:a,completionWithoutId:!0,timestamp:Date.now(),browserDownloadId:s};rt(i,u).catch(f=>{N.logError(`Failed to send fallback completion message: ${f}`)})}return}let n="";e instanceof Error?n=e.message:typeof e=="string"&&(n=e),t===101||t===102?N.logInfo(`Sending COMPLETION message for download ${r} to tab ${i}, progress=${t}`):t===100&&N.logInfo(`Sending FINISHING message for download ${r} to tab ${i}`);const o={downloadId:r,progress:t,error:n,status:a,timestamp:Date.now(),browserDownloadId:s};t===101||t===102?(N.logInfo(`Sending SINGLE COMPLETION message for download ${r} to tab ${i}, progress=${t} (BrowserDownloadId: ${s||"N/A"})`),rt(i,o).catch(g=>{N.logWarn(`Failed to send completion message to tab ${i}:`,g)})):rt(i,o).catch(g=>{N.logWarn(`Failed to send progress/status message to tab ${i}:`,g)})}function zt(i,r){if(r<1)throw new Error("Invalid chunk size");const t=[];for(let e=0;e<i.length;e+=r){const a=i.slice(e,e+r);t.push(a)}return t}const Kt=new RegExp("OAuth (.+)"),ar=new RegExp("/me/followings/(\\d+)");le(i=>{if(vt()){const e=L("oauth-token");if(i.requestHeaders){for(let a=0;a<i.requestHeaders.length;a++)if(i.requestHeaders[a].name.toLowerCase()==="authorization"){const s=i.requestHeaders[a].value,n=Kt.exec(s);n&&n.length>=2&&n[1]!==e&&(N.logInfo("Sniffed and storing OAuth token from request header (all envs)."),C("oauth-token",n[1]));break}}return{}}let r=!1;const t=L("oauth-token");if(i.requestHeaders){for(let e=0;e<i.requestHeaders.length;e++)if(i.requestHeaders[e].name.toLowerCase()==="authorization"){r=!0;const a=i.requestHeaders[e].value,s=Kt.exec(a);s&&s.length>=2&&s[1]!==t&&(N.logInfo("Sniffed and storing OAuth token (Firefox/non-DNR)."),C("oauth-token",s[1]));break}if(!r&&t)return i.requestHeaders.push({name:"Authorization",value:"OAuth "+t}),{requestHeaders:i.requestHeaders}}return{}},["*://api-v2.soundcloud.com/*"],["blocking","requestHeaders"]),ge(i=>{const r=new URL(i.url);if(r.pathname==="/connect/session"&&L("oauth-token")===null)N.logInfo("User logged in - clearing potentially stale token."),C("oauth-token",void 0);else if(r.pathname==="/sign-out")N.logInfo("User logged out"),C("oauth-token",null),C("user-id",null),C("followed-artists",[]);else if(r.pathname.startsWith("/me/followings/")){const t=ar.exec(r.pathname);if(t&&t.length===2){const e=+t[1];if(e){let a=L("followed-artists")||[];i.method==="POST"?a.includes(e)||a.push(e):i.method==="DELETE"&&(a=a.filter(s=>s!==e)),C("followed-artists",a)}}}else{const t=r.searchParams.get("client_id");if(t){const e=L("client-id");t!==e&&(N.logInfo(`Found new client_id: ${t}. Storing it.`),C("client-id",t))}else if(!vt()){const e=L("client-id");if(e)return N.logDebug(`Adding ClientId to ${i.url} via redirect (Firefox/non-DNR)`),r.searchParams.append("client_id",e),{redirectUrl:r.toString()}}}return{}},["*://api-v2.soundcloud.com/*","*://api-auth.soundcloud.com/*"],["blocking"]),ce(()=>{fe()});const Jt=async i=>{if(!i){C("user-id",null),N.logInfo("OAuth token cleared, user ID cleared.");return}const r=await qt.getCurrentUser();if(!r){N.logError("Failed to fetch currently logged in user (after token change/init)");return}C("user-id",r.id),N.logInfo("Logged in as",r.username);const t=await qt.getFollowedArtistIds(r.id);if(!t){N.logError("Failed to fetch ids of followed artists");return}C("followed-artists",t)};St("oauth-token",async i=>{await Vt(i),await Jt(i)}),St("client-id",async i=>{N.logInfo(`client-id config changed to: ${i}. Updating DNR rule.`),await jt(i)});
