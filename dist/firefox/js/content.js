import{L as q}from"./logger-B3xayXxI.js";import{q as K,m as V,B as Z,g as ee,C as oe}from"./config-CxTPZUIz.js";class te{observer;events=[];unqiueNodeId=0;logger;constructor(){this.observer=new MutationObserver(t=>t.forEach(n=>this.handleMutation(n))),this.logger=q.create("Observer")}start(t){this.observer.observe(t,{subtree:!0,attributes:!0,childList:!0}),this.logger.logDebug("Started")}stop(){this.observer.disconnect(),this.logger.logDebug("Stopped")}addEvent(t){if(!t.selector){this.logger.logWarn("Selector was not specified");return}if(!t.callback){this.logger.logWarn("Callback was not specified");return}this.events.push(t),this.logger.logDebug("Event added",t)}removeEvent(t){this.events=this.events.filter(n=>n.name!==t)}handleMutation(t){const n=t.target,l=t.addedNodes??[];for(const c of this.events)l.length>0?this.handleNodes(l,c):t.type==="attributes"&&this.handleNodes([n],c,!1)}handleNodes(t,n,l=!0){if(t)for(let c=0;c<t.length;c++){const f=t[c];if(this.matchesSelectors(f,n.selector)){if(f._id!==void 0)return;f._id=++this.unqiueNodeId,n.callback(f)}l&&f.childNodes?.length>0&&this.handleNodes(f.childNodes,n)}}matchesSelectors(t,n){return t&&t instanceof HTMLElement&&t.matches(n)}}const ne=`
  #scdl-range-modal {
    display: none;
    position: fixed;
    z-index: 10000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0,0,0,0.6);
  }
  #scdl-range-modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 350px;
    border-radius: 5px;
    color: #333; /* Ensure text is visible */
  }
  #scdl-range-modal label {
    display: block;
    margin-bottom: 5px;
  }
  #scdl-range-modal input[type="number"] {
    width: 60px;
    padding: 5px;
    margin-bottom: 15px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 3px;
  }
  #scdl-range-modal-actions button {
    padding: 8px 15px;
    margin-left: 10px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
  }
  #scdl-range-modal-download {
    background-color: #ff5419;
    color: white;
  }
  #scdl-range-modal-cancel {
    background-color: #ccc;
  }
  #scdl-range-modal-error {
    color: red;
    font-size: 0.9em;
    margin-top: 10px;
    display: none; /* Hidden by default */
  }
  .sc-button-download {
    transition: background-color 0.5s ease-out;
  }
`;let v=null;function le(){if(document.getElementById("scdl-range-modal"))return;const e=document.createElement("style");e.textContent=ne,document.head.appendChild(e),v=document.createElement("div"),v.id="scdl-range-modal",v.innerHTML=`
    <div id="scdl-range-modal-content">
      <h4>Download Playlist Range</h4>
      <label for="scdl-range-from">From track:</label>
      <input type="number" id="scdl-range-from" name="from" min="1" value="1">
      <label for="scdl-range-to">To track:</label>
      <input type="number" id="scdl-range-to" name="to" min="1" value=""><br>
      <small>(Leave "To" blank to download until the end)</small>
      <div id="scdl-range-modal-error"></div>
      <div id="scdl-range-modal-actions" style="text-align: right; margin-top: 15px;">
        <button id="scdl-range-modal-cancel">Cancel</button>
        <button id="scdl-range-modal-download">Download Selection</button>
      </div>
    </div>
  `,document.body.appendChild(v),document.getElementById("scdl-range-modal-cancel").addEventListener("click",U),v.addEventListener("click",t=>{t.target===v&&U()})}function ae(e,t){v||le();const n=document.getElementById("scdl-range-from"),l=document.getElementById("scdl-range-to"),c=document.getElementById("scdl-range-modal-error");n.value="1",l.value="",c.textContent="",c.style.display="none";const f=document.getElementById("scdl-range-modal-download"),N=f.cloneNode(!0);f.parentNode.replaceChild(N,f),N.addEventListener("click",()=>{const d=parseInt(n.value,10),_=l.value,p=_?parseInt(_,10):null;if(c.textContent="",c.style.display="none",isNaN(d)||d<1){c.textContent='Invalid "From" number.',c.style.display="block";return}if(p!==null&&(isNaN(p)||p<d)){c.textContent='Invalid "To" number. Must be greater than or equal to "From".',c.style.display="block";return}t(d,p),U(),m(e,"Preparing..."),e.style.cursor="default",e.onclick=null}),v.style.display="block"}function U(){v&&(v.style.display="none")}let P=null;const o=q.create("ContentScript"),re=Z,G=(e,t)=>{let n={};try{n=JSON.parse(JSON.stringify(e))}catch{n={errorParsingMessage:!0,originalType:e?.type}}if(o.logDebug(`[ContentScript sendMessageToBackend CALLED [Context: ${t||"Unknown"}] Message:]`,n),e&&typeof e=="object"){if(["DOWNLOAD","DOWNLOAD_SET","DOWNLOAD_SET_RANGE","PAUSE_DOWNLOAD","RESUME_DOWNLOAD"].includes(e.type)&&(!e.downloadId||e.downloadId===void 0||e.downloadId==="undefined")){const l=new Error(`CRITICAL: Prevented sending message with type ${e.type} and missing downloadId!`);return o.logError("[ContentScript loggedSendMessageToBackend]",l.message,{message:n,callContext:t}),Promise.reject(l)}e.timestamp||(e.timestamp=Date.now())}return re(e)},r={},m=(e,t,n)=>{e.innerText=t,e.title=n??t},S=e=>{e.style.backgroundColor="",e.style.background="",e.style.color=""},se=(e,t)=>{const n=crypto.randomUUID().substring(0,8),l=Object.keys(r);let c="<payload_serialization_error>";try{c=JSON.stringify(e)}catch{}let f="<sender_serialization_error>";try{f=JSON.stringify(t)}catch{}o.logDebug(`[HANDLE_MSG_FROM_BG_ENTRY_POINT CALL_ID: ${n}] Invoked. Payload: ${c}. Sender: ${f}. Current downloadButton keys: ${l.join(",")||"none"}`);const N=["downloadId","progress","error","status","browserDownloadId","originalDownloadId","completionWithoutId","completed","success","timestamp","scdl_test_message"],d=Object.keys(e||{}),_=d.some(k=>N.includes(k));if(!_&&d.length>0)return o.logWarn("[HANDLE_MSG_FROM_BG] Discarding irrelevant message by key filter. Payload:",JSON.parse(JSON.stringify(e))),Promise.resolve({handled:!1,reason:"Irrelevant message"});_&&o.logDebug("[HANDLE_MSG_FROM_BG] Relevant message PASSED initial filter. Payload:",JSON.parse(JSON.stringify(e)));const{downloadId:p,progress:s,error:b,status:y,completionWithoutId:u,completed:i,timestamp:B,browserDownloadId:M,originalDownloadId:D}=e;let a;if(D?(a=D,o.logDebug(`[CS_FID_LOGIC CALL_ID: ${n}] finalDownloadId set from message.originalDownloadId: ${a}`)):p?(a=p,o.logDebug(`[CS_FID_LOGIC CALL_ID: ${n}] finalDownloadId set from message.downloadId: ${a}`)):(o.logWarn(`[CS_FID_LOGIC CALL_ID: ${n}] Message has neither originalDownloadId nor downloadId at the top level of payload.`),e&&e.error&&e.originalMessage&&typeof e.originalMessage.downloadId=="string"&&(a=e.originalMessage.downloadId,o.logInfo(`[CS_FID_LOGIC CALL_ID: ${n}] finalDownloadId recovered from message.originalMessage.downloadId due to error payload from bridge: ${a}`))),!a&&M){const k=Object.keys(r).filter(I=>r[I].browserDownloadId===M);if(k.length===1){if(a=k[0],o.logDebug(`[CS_FID_LOGIC] finalDownloadId set from browserDownloadId match: ${a}`),s===101||i===!0){const I=r[a];return S(I.elem),I.elem.style.backgroundColor="#19a352",m(I.elem,"Downloaded!"),I.elem.title="Downloaded successfully (matched by browser downloadId)",I.elem.onclick=null,I.state="Downloaded",I.resetTimer=window.setTimeout(()=>O(a),1e4),o.logDebug(`[CS_FID_LOGIC] Updated button ${a} to Downloaded state from browserDownloadId match`),Promise.resolve({handled:!0,id:a})}}else k.length>1&&o.logWarn(`[CS_FID_LOGIC] Found multiple (${k.length}) buttons with browserDownloadId=${M}. Cannot reliably map message.`)}if(!a||a==="undefined_completion"||u){o.logWarn(`[CS_GENERIC_MATCH_ENTRY] Entering generic/undefined ID matching. finalDownloadId: ${a}, is_undefined_completion: ${a==="undefined_completion"}, completionWithoutId flag: ${u}. Message payload:`,JSON.parse(JSON.stringify(e)));const k=["Downloading","Preparing","Finishing","Pausing","Resuming"],I=Object.keys(r).filter(h=>k.includes(r[h].state)),F=s===void 0&&y===void 0&&i!==!0&&u!==!0&&b===void 0&&typeof e=="object"&&Object.keys(e).length<=(D?5:e.type?2:1);if(I.length===0&&F)return o.logWarn(`[HANDLE_MSG_FROM_BG] Received minimal message (keys: ${Object.keys(e).join(", ")||"none"}) with no active downloads. Discarding.`,{message:e}),Promise.resolve({handled:!1,reason:"Minimal message, no active downloads"});if(o.logWarn(`[HANDLE_MSG_FROM_BG] Received message (keys: ${Object.keys(e).join(", ")||"none"}) without a usable finalDownloadId or it is a generic completion. Attempting to match with active downloads (found ${I.length} using states: ${k.join(", ")}).`),s===101||s===102||i===!0||u===!0||y===void 0&&b===void 0&&typeof e=="object"&&Object.keys(e).length<=(D?5:4)){const h=I;if(o.logWarn(`[HANDLE_MSG_FROM_BG] Attempting to match as completion message. Found ${h.length} candidates using states: ${k.join(", ")}.`),h.length===1){const L=h[0];if(o.logWarn(`[HANDLE_MSG_FROM_BG] Matched undefined/generic ID message to single active download: ${L}`),a=L,s===101||s===102||i===!0||u===!0){const C=r[a];return S(C.elem),C.elem.style.backgroundColor="#19a352",m(C.elem,"Downloaded!"),C.elem.title="Downloaded successfully (auto-matched generic completion)",C.elem.onclick=null,C.state="Downloaded",C.resetTimer=window.setTimeout(()=>O(a),1e4),o.logWarn(`[HANDLE_MSG_FROM_BG] Updated button ${a} to Downloaded state from matched generic completion message.`),Promise.resolve({handled:!0,id:a})}}else if(h.length>1&&B){let L=null,C=0;if(h.forEach(E=>{const j=r[E].lastProgressTime||0;j>C&&(C=j,L=E)}),L){if(o.logWarn(`[HANDLE_MSG_FROM_BG] Matched undefined/generic ID to most recent active download by timestamp: ${L}`),a=L,s===101||s===102||i===!0||u===!0){const E=r[a];return S(E.elem),E.elem.style.backgroundColor="#19a352",m(E.elem,"Downloaded!"),E.elem.title="Downloaded successfully (auto-matched generic completion by timestamp)",E.elem.onclick=null,E.state="Downloaded",E.resetTimer=window.setTimeout(()=>O(a),1e4),o.logWarn(`[HANDLE_MSG_FROM_BG] Updated button ${a} to Downloaded state from timestamp-matched generic completion message.`),Promise.resolve({handled:!0,id:a})}}else o.logWarn(`[HANDLE_MSG_FROM_BG] Found ${h.length} active downloads, but couldn't match generic completion message by timestamp.`)}else h.length>0?o.logWarn(`[HANDLE_MSG_FROM_BG] Found ${h.length} active downloads, can't match generic completion message reliably by unique or timestamp.`):o.logWarn("[HANDLE_MSG_FROM_BG] No active downloads to match generic completion message to.")}if(!a)return I.length===0&&F?o.logWarn("[HANDLE_MSG_FROM_BG] Could not determine finalDownloadId for minimal message (no active downloads) after matching attempts. Discarding.",{message:e}):o.logWarn("[HANDLE_MSG_FROM_BG] Could not determine finalDownloadId from generic message after all attempts. Discarding.",{message:e}),Promise.resolve({handled:!1,reason:"Could not determine finalDownloadId from generic message"})}if(!a)return o.logDebug("[HANDLE_MSG_FROM_BG] CRITICAL: finalDownloadId is null/undefined after all matching attempts. Discarding message.",e),Promise.resolve({handled:!1,reason:"finalDownloadId null after all matching"});const $=r[a];if(!$){const k=typeof e.error=="object"&&e.error!==null,I=typeof e.error=="string"&&e.error!=="";if(e.progress!==void 0&&e.progress>=101&&e.progress<=102||e.completed===!0||k||I)return o.logInfo(`[HANDLE_MSG_FROM_BG CALL_ID: ${n}] Button data not found for finalDownloadId: ${a}, but message is a late finalization. Likely already cleaned up. Message:`,JSON.parse(JSON.stringify(e))),Promise.resolve({handled:!0,reason:"Button data not found, late finalization message"});{const F=Object.keys(r);let h="<payload_serialization_error_in_warning>";try{h=JSON.stringify(e)}catch{}return o.logWarn(`[HANDLE_MSG_FROM_BG CALL_ID: ${n}] Button data not found for finalDownloadId: ${a}. Message: ${h}. All downloadButton keys at this point: ${F.join(",")||"none"}`),Promise.resolve({handled:!1,reason:"Button data not found for finalDownloadId"})}}const{elem:g,resetTimer:be,state:w}=$;if(o.logDebug(`[HANDLE_MSG_FROM_BG] Processing for finalDownloadId: ${a}. Current button state: ${w}. Message progress: ${s}, success: ${e.success}`),(w==="Downloaded"||w==="Error")&&(s!==void 0||y!==void 0))return o.logWarn(`[HANDLE_MSG_FROM_BG] Received message for already finalized downloadId ${a} (state: ${w}). Ignoring for UI update. Message:`,e),Promise.resolve({handled:!0,id:a,reason:`Already in ${w} state`});if(e.error===""&&e.success===void 0&&s===void 0&&y===void 0&&i===void 0&&w!=="Preparing"&&D===a)return o.logDebug(`[HANDLE_MSG_FROM_BG] Received redundant simple acknowledgment for ${a} while button state is ${w}. Ignoring for UI update. Payload:`,JSON.parse(JSON.stringify(e))),Promise.resolve({handled:!0,id:a,reason:"Redundant simple ack, state not Preparing"});if(e.success===!0&&D===a&&(o.logDebug(`[CS_DEBUG_ACK_INITIAL_MATCH] Early ack initial match for ${a}. Current button state: ${w}. Full Message:`,JSON.parse(JSON.stringify(e))),w==="Preparing"?(o.logDebug("[CS_DEBUG_ACK_CONDITIONS] currentState is Preparing."),s===void 0?(o.logDebug("[CS_DEBUG_ACK_CONDITIONS] message.progress is undefined."),y===void 0?(o.logDebug("[CS_DEBUG_ACK_CONDITIONS] message.status is undefined."),i===void 0?(o.logDebug("[CS_DEBUG_ACK_CONDITIONS] message.completed is undefined."),b?o.logWarn(`[CS_DEBUG_ACK_FAIL_FINAL_BLOCK] !message.error FAILED. Error: ${b}`):o.logDebug("[CS_DEBUG_ACK_CONDITIONS] !message.error is true. ALL PRE-CONDITIONS FOR STATE TRANSITION MET.")):o.logWarn(`[CS_DEBUG_ACK_FAIL_FINAL_BLOCK] message.completed FAILED. Was: ${i}`)):o.logWarn(`[CS_DEBUG_ACK_FAIL_FINAL_BLOCK] message.status FAILED. Was: ${y}`)):o.logWarn(`[CS_DEBUG_ACK_FAIL_FINAL_BLOCK] message.progress FAILED. Was: ${s}`)):o.logWarn(`[CS_DEBUG_ACK_FAIL_FINAL_BLOCK] currentState was NOT Preparing. Was: ${w}`)),(e.success===!0&&!b||e.error===""&&e.success===void 0)&&D===a&&w==="Preparing"&&s===void 0&&y===void 0&&i===void 0)o.logDebug(`[HANDLE_MSG_FROM_BG] Initial command success for ${a}. Transitioning to Downloading state.`),m(g,"Downloading... (Click to Pause)"),g.style.background="linear-gradient(90deg, #ff5419 0%, transparent 0%)",g.style.cursor="pointer",g.onclick=T(a),r[a].state="Downloading",r[a].lastProgressTime=Date.now();else if(s===101)o.logDebug(`[HANDLE_MSG_FROM_BG] Download complete (101) for finalDownloadId=${a}`),S(g),g.style.backgroundColor="#19a352",m(g,"Downloaded!"),g.title="Downloaded successfully",g.onclick=null,r[a].state="Downloaded",r[a].resetTimer=window.setTimeout(()=>O(a),1e4);else if(s===102)o.logDebug(`[HANDLE_MSG_FROM_BG] Download complete with errors (102) for finalDownloadId=${a}`),S(g),g.style.backgroundColor="gold",g.style.color="#333",m(g,"Downloaded!"),g.title=b||"Some tracks failed to download",g.onclick=null,r[a].state="Downloaded",r[a].resetTimer=window.setTimeout(()=>O(a),3e4);else if(y==="Paused")o.logDebug(`[HANDLE_MSG_FROM_BG] Button state updated to Paused, finalDownloadId=${a}`),S(g),m(g,"Paused (Click to Resume)"),g.style.cursor="pointer",g.onclick=T(a),r[a].state="Paused";else if(y==="Resuming")o.logDebug(`[HANDLE_MSG_FROM_BG] Button state updated to Resuming, finalDownloadId=${a}`),m(g,"Resuming..."),g.style.cursor="default",g.onclick=null,r[a].state="Resuming";else if(s===100||s>100&&s<101)w!=="Paused"&&w!=="Pausing"&&w!=="Resuming"&&(o.logDebug(`[HANDLE_MSG_FROM_BG] Button state updated to Finishing, finalDownloadId=${a}`),m(g,"Finishing..."),g.style.background="linear-gradient(90deg, #ff5419 100%, transparent 0%)",g.onclick=null,r[a].state="Finishing");else if(s!==void 0&&s>=0&&s<100){if(w==="Pausing"||w==="Paused")return o.logDebug(`[HANDLE_MSG_FROM_BG] Progress update (${s}%) for ${a} received while state is '${w}'. Ignoring UI update to prevent flicker.`),Promise.resolve({handled:!0,id:a,reason:"Ignoring download progress while pausing/paused"});o.logDebug(`[HANDLE_MSG_FROM_BG] Button state updated to Downloading (${s}%), finalDownloadId=${a}`),m(g,"Downloading... (Click to Pause)"),g.style.background=`linear-gradient(90deg, #ff5419 ${s}%, transparent 0%)`,(w!=="Downloading"||!g.onclick)&&(g.style.cursor="pointer",g.onclick=T(a)),r[a].state="Downloading",r[a]&&(r[a].lastProgressTime=Date.now())}else b?(o.logWarn(`[HANDLE_MSG_FROM_BG] Button state updated to Error: ${b}, finalDownloadId=${a}`),S(g),g.style.backgroundColor="#d30029",m(g,"ERROR",b),g.onclick=null,r[a].state="Error"):w==="Preparing"&&s!==void 0&&(o.logDebug(`[HANDLE_MSG_FROM_BG] Button state forcibly updated from Preparing to Downloading, finalDownloadId=${a}`),m(g,"Downloading... (Click to Pause)"),g.style.background="linear-gradient(90deg, #ff5419 "+(s||0)+"%, transparent 0%)",g.style.cursor="pointer",g.onclick=T(a),r[a].state="Downloading");return Promise.resolve({handled:!0,id:a,finalState:r[a]?.state})};o.logDebug("[CONTENT_SCRIPT_LISTENER_SETUP] Attempting to set up onMessage listener NOW."),typeof K<"u"?(K(se),o.logDebug(`[CONTENT_SCRIPT_LISTENER_SETUP] onMessage listener setup complete. Document readyState: ${document.readyState}`)):o.logDebug("[CONTENT_SCRIPT_SETUP_ERROR] onMessage utility is not defined!");const de=e=>{const t=document.createElement("button"),n=e?"sc-button-small":"sc-button-medium";return t.className=`sc-button-download sc-button ${n} sc-button-responsive`,m(t,"Download"),t},W=e=>{const t=e.includes("/sets/")||e.includes("/albums/");o.logDebug(`createDownloadCommand: URL=${e}, isSetUrl=${t}`,{url:e,isSetUrl:t});const n=l=>l?G({type:t?"DOWNLOAD_SET":"DOWNLOAD",url:e,downloadId:l},"createDownloadCommand"):(o.logError("Attempted to send DOWNLOAD command with undefined/empty downloadId",{url:e}),Promise.reject("Undefined/empty downloadId for DOWNLOAD command"));return n.url=e,n.isSet=t,o.logDebug(`createDownloadCommand: Created command with isSet=${n.isSet}`,{commandUrl:n.url,isSet:n.isSet}),n},x=(e,t,n)=>{if(e.querySelector("button.sc-button-download")!==null){o.logDebug("Download button already exists");return}o.logDebug("Adding download button",{parentNode:e.nodeName,url:t.url,isSet:t.isSet});const l=de(n),c=t.url;o.logInfo(`Button created with URL: ${c}`);const f=async()=>{const d=crypto.randomUUID();r[d]={elem:l,onClick:f,state:"Preparing",originalUrl:c,lastProgressTime:Date.now()},o.logInfo(`Button clicked with downloadId: ${d}, URL: ${c}`),l.style.cursor="default",l.onclick=null,m(l,"Preparing..."),S(l);const _=setTimeout(()=>{const s=r[d];s&&s.state==="Preparing"&&(o.logWarn(`Safety timeout triggered for downloadId=${d}, button still in Preparing state`),m(l,"Timeout (Retry?)"),l.title="Download request timed out. Click to try again.",l.style.backgroundColor="#d30029",l.style.cursor="pointer",l.onclick=f,r[d].state="Error")},1e4),p=setTimeout(()=>{const s=r[d];if(s&&s.state==="Downloading"){const b=s.lastProgressTime||0,y=Date.now()-b;y>12e4&&(o.logWarn(`Completion safety timeout triggered for downloadId=${d}. Download seems stuck in Downloading state for ${y/1e3}s`),y>18e4?(o.logInfo(`Assuming potential silent completion for downloadId=${d}`),S(l),l.style.backgroundColor="#19a352",m(l,"Downloaded!"),l.title="Download likely completed (auto-detected)",l.onclick=null,r[d].state="Downloaded",r[d].resetTimer=window.setTimeout(()=>O(d),1e4)):(o.logInfo(`Marking download ${d} as potentially stuck`),m(l,"Downloading... (may be stuck)")))}},3e5);try{const s=await t(d);o.logInfo(`Download command response for ${d}:`,s),clearTimeout(_);const b=r[d];b&&b.state==="Preparing"&&(o.logInfo(`Manually transitioning button from Preparing to Downloading state for ${d}`),m(l,"Downloading... (Click to Pause)"),l.style.background="linear-gradient(90deg, #ff5419 0%, transparent 0%)",l.style.cursor="pointer",l.onclick=T(d),r[d].state="Downloading",r[d].lastProgressTime=Date.now())}catch(s){clearTimeout(_),clearTimeout(p),o.logError(`Initial download command failed for ${c}`,s),r[d]&&(r[d].state="Error",m(l,"ERROR",s.message||"Failed to start"),l.style.backgroundColor="#d30029")}};l.oncontextmenu=d=>{d.preventDefault(),d.stopPropagation();const _=document.getElementById("scdl-context-menu");_&&document.body.removeChild(_);const p=document.createElement("div");p.id="scdl-context-menu",p.style.position="absolute",p.style.left=`${d.pageX}px`,p.style.top=`${d.pageY}px`,p.style.background="#fff",p.style.boxShadow="0 2px 5px rgba(0,0,0,0.2)",p.style.padding="5px 0",p.style.borderRadius="3px",p.style.zIndex="10000",document.body.appendChild(p);const s=()=>{document.getElementById("scdl-context-menu")&&document.body.removeChild(p),document.removeEventListener("click",s)};return document.addEventListener("click",s),!1},l.onclick=f,e.appendChild(l);const N=t.isSet;if(o.logInfo("Checking if should add range button:",{isSet:N,url:t.url,urlIncludes:{sets:t.url?.includes("/sets/"),albums:t.url?.includes("/albums/")},browserType:typeof browser<"u"?"Firefox":"Chrome"}),oe(c,N)){const d=document.createElement("button");o.logInfo("Creating range button for URL="+(t.url||"unknown"));const _=n?"sc-button-small":"sc-button-medium";d.className=`sc-button-range sc-button ${_} sc-button-responsive`,d.textContent="Range...",d.title="Download a range of tracks",d.style.marginLeft="5px",d.onclick=p=>{p.preventDefault(),p.stopPropagation();const s=crypto.randomUUID();r[s]={elem:l,onClick:f,state:"Idle",originalUrl:c,lastProgressTime:Date.now()},o.logInfo(`Range button clicked. Created preDownloadId: ${s}, with URL: ${c}`),ae(l,(b,y)=>{const u=s;o.logInfo(`Range download handler called with start=${b}, end=${y}, mainButtonId=${u}`);const i=r[u];if(o.logInfo("Button data for range download:",{hasButtonData:!!i,originalUrl:i?.originalUrl,state:i?.state}),!i||!i.originalUrl){o.logError(`Range download failed: No button data or URL for ID ${u}`);const D=document.getElementById("scdl-range-modal-error");D&&(D.textContent="Error: Could not get original URL for the playlist.",D.style.display="block");return}m(i.elem,"Preparing..."),i.elem.style.cursor="default",i.elem.onclick=null,i.state="Preparing",i.lastProgressTime=Date.now();const B=setTimeout(()=>{r[u]&&r[u].state==="Preparing"&&(o.logWarn(`Safety timeout triggered for range download with ID ${u}`),m(i.elem,"Timeout (Retry?)"),i.elem.title="Range download request timed out. Click to try again.",i.elem.style.backgroundColor="#d30029",i.elem.style.cursor="pointer",i.elem.onclick=f,r[u].state="Error")},15e3),M=setTimeout(()=>{const D=r[u];if(D&&(D.state==="Downloading"||D.state==="Preparing")){const a=D.lastProgressTime||0,$=Date.now()-a;$>3e5&&(o.logWarn(`Range download completion safety timeout triggered for ID ${u}. Download seems stuck for ${$/1e3}s`),$>18e5?(o.logInfo(`Assuming potential silent completion for range download ${u}`),S(i.elem),i.elem.style.backgroundColor="#19a352",m(i.elem,"Downloaded!"),i.elem.title="Range download likely completed (auto-detected)",i.elem.onclick=null,r[u].state="Downloaded",r[u].resetTimer=window.setTimeout(()=>O(u),1e4)):(o.logInfo(`Marking range download ${u} as potentially stuck`),m(i.elem,"Downloading range... (may be stuck)")))}},18e5);o.logInfo("Sending range download message:",{type:"DOWNLOAD_SET_RANGE",url:i.originalUrl,start:b,end:y,downloadId:u}),G({type:"DOWNLOAD_SET_RANGE",url:i.originalUrl,start:b,end:y,downloadId:u},"handleRangeDownload").then(D=>{clearTimeout(B),o.logInfo("Range download response:",D),r[u]&&r[u].state==="Preparing"&&(o.logInfo(`Manually transitioning range button from Preparing to Downloading state for ${u}`),m(i.elem,"Downloading... (Click to Pause)"),i.elem.style.background="linear-gradient(90deg, #ff5419 0%, transparent 0%)",i.elem.style.cursor="pointer",i.elem.onclick=T(u),r[u].state="Downloading",r[u].lastProgressTime=Date.now())}).catch(D=>{clearTimeout(B),clearTimeout(M),o.logError("Range download request failed:",D),r[u]&&(S(i.elem),i.elem.style.backgroundColor="#d30029",m(i.elem,"ERROR",D?.message||"Range download failed"),i.elem.onclick=null,r[u].state="Error")})})},e.appendChild(d)}},J=e=>{e.parentNode.removeChild(e)},z=e=>{const t=document.querySelectorAll(e);for(let n=0;n<t.length;n++){const l=t[n];J(l)}},ie=()=>{const e="a.sc-buylink";z(e);const t={selector:e,callback:n=>J(n)};P?.addEvent(t)},ce=()=>{z("button.sc-button-download")},ge=()=>{const e=".sc-button-group-medium > .sc-button-like";o.logDebug(`[TrackPage] Querying for selector: ${e}`);const t=l=>{o.logDebug("[TrackPage] Found node matching selector:",l);const c=window.location.origin+window.location.pathname,f=W(c);x(l.parentNode,f,!1)};document.querySelectorAll(e).forEach(t);const n={selector:e,callback:t};P?.addEvent(n),o.logDebug(`[TrackPage] Initial elements found: ${document.querySelectorAll(e).length}`)},ue=()=>{const e=".sound.streamContext .sc-button-group > .sc-button-like";o.logDebug(`[Feed] Querying for selector: ${e}`);const t=l=>{o.logDebug("[Feed] Found node matching selector:",l);const c=l.parentElement.closest(".sound__body").querySelector("a.soundTitle__title");if(c===null)return;const f=window.location.origin+c.getAttribute("href"),N=W(f);x(l.parentNode,N,!0)};document.querySelectorAll(e).forEach(t);const n={selector:e,callback:t};P?.addEvent(n),o.logDebug(`[Feed] Initial elements found: ${document.querySelectorAll(e).length}`)},me=e=>{let t=document.querySelector("#repost-blocker");if(e){if(t){o.logWarn("Repost-Blocker script has already been injected!");return}const n=ee("/js/repostBlocker.js");if(!n)return;o.logInfo("Start blocking reposts"),t=document.createElement("script"),t.type="text/javascript",t.id="repost-blocker",t.src=n,document.documentElement.appendChild(t)}else{if(!t)return;o.logInfo("Stop blocking reposts");const n=document.createElement("script");n.type="text/javascript",n.id="cleanup-repost-blocker",n.innerText="XMLHttpRequest.prototype.resetSend();",document.documentElement.appendChild(n),document.documentElement.removeChild(t),document.documentElement.removeChild(n)}},X=async()=>{o.logInfo("handlePageLoaded executing..."),P=new te,ie(),ce(),ge(),ue(),fe(),P.start(document.body),o.logInfo("Attached!")},fe=()=>{if(o.logInfo("[PlaylistPage] Running playlist button initialization"),!(window.location.pathname.includes("/sets/")||window.location.pathname.includes("/albums/")||document.querySelector(".setTrackList")!==null)){o.logDebug("[PlaylistPage] Not on a playlist page, skipping");return}o.logInfo("[PlaylistPage] Detected playlist page, adding download button");const e=[".soundActions .sc-button-group",".soundHeader__actions .sc-button-group",".sc-button-like",".playControls__play",".setActions .sc-button-group"];for(const n of e){const l=document.querySelectorAll(n);o.logDebug(`[PlaylistPage] Found ${l.length} elements matching "${n}"`)}let t=null;for(const n of e){const l=document.querySelector(n);if(l){t=l,o.logInfo(`[PlaylistPage] Found button parent: ${n}`);break}}if(!t){o.logWarn("[PlaylistPage] No direct button parent found, trying alternative approach");const n=document.querySelector(".trackList")||document.querySelector(".setTrackList");if(n){const l=document.querySelector(".sc-button-like")||document.querySelector(".sc-button-share")||document.querySelector(".sc-button-play");if(l&&l.parentNode)t=l.parentNode,o.logInfo("[PlaylistPage] Found button parent via existing button",t);else{const c=n.querySelector(".tracklistHeader")||n.querySelector(".setTrackList__header");c&&(t=document.createElement("div"),t.className="sc-button-group sc-button-group-medium",c.appendChild(t),o.logInfo("[PlaylistPage] Created custom button parent in tracklist header"))}}}if(t){const n=window.location.origin+window.location.pathname;o.logInfo(`[PlaylistPage] Creating download command for: ${n}`);const l=W(n);l.isSet=!0,o.logInfo("[PlaylistPage] Adding download button to parent:",t),x(t,l,!1)}else o.logError("[PlaylistPage] Could not find or create button parent for playlist page")},R=document.readyState;(R==="complete"||R==="interactive")&&setTimeout(X,0),document.addEventListener("DOMContentLoaded",X);let A=null;function pe(){A!==null&&clearInterval(A),A=window.setInterval(()=>{const e=Date.now(),t=Object.keys(r);t.length!==0&&(o.logDebug(`Running stuck download check for ${t.length} active downloads`),t.forEach(n=>{const l=r[n];if(l&&l.state==="Downloading"){const c=l.lastProgressTime||0,f=e-c;f>3e5&&(o.logWarn(`Download ${n} has been idle for ${Math.floor(f/1e3)}s`),f>6e5?(o.logInfo(`Auto-completing download ${n} due to long inactivity (${Math.floor(f/1e3)}s)`),S(l.elem),l.elem.style.backgroundColor="#19a352",l.elem.title="Download likely completed (auto-detected)",l.elem.onclick=null,l.state="Downloaded",l.resetTimer&&clearTimeout(l.resetTimer),l.resetTimer=window.setTimeout(()=>O(n),1e4)):(m(l.elem,"Downloading... (may be stuck)"),l.elem.title=`No progress for ${Math.floor(f/6e4)} minutes. Click to pause/resume.`))}}))},6e4),o.logInfo("Started automatic stuck download checker")}function De(){A!==null&&(clearInterval(A),A=null,o.logInfo("Stopped automatic stuck download checker"))}window.onbeforeunload=()=>{P?.stop(),De(),o.logInfo("Unattached!")};function Y(){pe()}(R==="complete"||R==="interactive")&&setTimeout(Y,1e3),document.addEventListener("DOMContentLoaded",()=>{setTimeout(Y,1e3)});function we(e,t){const n=JSON.stringify(t);window.localStorage.setItem("SOUNDCLOUD-DL-"+e,n)}o.logInfo("[ContentScript] Requesting configuration from background script..."),G({type:"GET_EXTENSION_CONFIG"},"ContentScript_GetConfig").then(e=>{if(!e){o.logError("[ContentScript] Failed to load configuration from background script. Received undefined or null.");return}o.logInfo("[ContentScript] Configuration received from background:",e);for(const n of Object.keys(e))if(V.includes(n)){const l=n;we(l,e[l]?.value)}const t=e["block-reposts"];t&&typeof t.value=="boolean"?(o.logInfo(`[ContentScript] Setting up block-reposts based on received config: ${t.value}`),me(t.value)):o.logWarn("[ContentScript] 'block-reposts' configuration not found or invalid in object from background."),o.logInfo("[ContentScript] Initial configuration applied.")}).catch(e=>{o.logError("[ContentScript] Error requesting or processing configuration from background script:",e)});const T=e=>async()=>{const t=r[e];if(!t){o.logWarn(`Pause/Resume: Button data not found for downloadId: ${e}`);return}if(!e){o.logError("Attempted to send PAUSE/RESUME command with undefined/empty downloadId.");return}const n=t.state;n==="Downloading"||n==="Resuming"?(o.logInfo(`[PAUSE_CLICK] User clicked Pause for ${e}. Current state: ${n}. Transitioning to Pausing.`),m(t.elem,"Pausing..."),t.elem.style.cursor="default",t.elem.onclick=null,t.state="Pausing",t.lastProgressTime=Date.now(),await G({type:"PAUSE_DOWNLOAD",downloadId:e},"createPauseResumeHandler-Pause")):n==="Paused"?(o.logInfo(`[RESUME_CLICK] User clicked Resume for ${e}. Current state: ${n}. Transitioning to Resuming.`),m(t.elem,"Resuming..."),t.elem.style.cursor="default",t.elem.onclick=null,t.state="Resuming",t.lastProgressTime=Date.now(),await G({type:"RESUME_DOWNLOAD",downloadId:e},"createPauseResumeHandler-Resume")):o.logWarn(`[PAUSE_RESUME_CLICK] Clicked on button for ${e} but state is '${n}', not Downloading/Resuming or Paused. No action taken.`)};function O(e,t="Idle"){const n=r[e];if(!n)return;const{elem:l,onClick:c}=n;S(l),setTimeout(()=>{r[e]&&(m(l,t==="Error"?"ERROR":"Download"),l.title=t==="Error"?"Error occurred":"Download",l.style.cursor="pointer",l.onclick=c,r[e].state=t==="Error"?"Error":"Idle",t==="Idle"&&delete r[e])},500)}let H=null;function Q(){H!==null&&clearInterval(H),H=window.setInterval(()=>{const e=Object.keys(r);e.length!==0&&(o.logDebug(`DEBUG: Currently tracking ${e.length} active downloads`),e.forEach(t=>{const n=r[t];n&&o.logDebug(`DEBUG: Download ${t} - State=${n.state}, browserDownloadId=${n.browserDownloadId||"none"}, lastProgress=${n.lastProgressTime?new Date(n.lastProgressTime).toISOString():"none"}`)}))},1e4),o.logInfo("Started debug logging for downloads")}(R==="complete"||R==="interactive")&&setTimeout(Q,2e3),document.addEventListener("DOMContentLoaded",()=>{setTimeout(Q,2e3)});
